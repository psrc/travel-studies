---
title: "Regional destination data analysis"
format: 
  html:
    mainfont: Poppins
    theme: cosmo
    toc: true
    df-print: kable
    warning: false
    echo: false
---


```{r}
library(tidyverse)
library(plotly) 
library(psrc.travelsurvey)
library(psrcelmer)
library(psrcplot)
library(sf)
library(spatialEco)

# calculate centers and region area
sf_use_s2(FALSE)
bg2020.lyr <- st_read_elmergeo("BLOCKGRP2020_NOWATER")
psrc_region_area <- sum(bg2020.lyr$land_acres)

center.lyr <- st_read_elmergeo('URBAN_CENTERS')
centers_area <- sum(center.lyr$acres)
st_geometry(center.lyr) <- NULL

# areas: individual rgcs, rgc, urban/metro
rgc_indv_area <- center.lyr %>%
  mutate(area_sq_mile = acres*0.0015625,
         d_rgcname="RGC") %>% 
  select(name,d_rgcname,category,area_sq_mile) %>%
  add_row(data.frame(name=c("Not RGC"),
                     d_rgcname=c("Not RGC"),
                     category=c("Not RGC"),
                     area_sq_mile=c((psrc_region_area-centers_area)*0.0015625)))

rgc_area <- rgc_indv_area %>%
  group_by(d_rgcname) %>%
  summarise_at(vars(area_sq_mile),sum)

metro_urban_area <- rgc_indv_area %>%
  group_by(category) %>%
  summarise_at(vars(area_sq_mile),sum)

# SELECT TOP (1000) [data_year]
#       ,[County]
#       ,[City]
#       ,[Total]
#   FROM [Elmer].[employment_summaries].[v_covered_employment_by_city_by_major_sector]
#   WHERE [County]='Region' AND [City]='Total'


df_rgc <- data.frame(year=c("2020","2020"), # 2020 population
                            d_rgcname=c("RGC","Not RGC"),
                            population=c(266490,4027090),
                            employment=c(713302,2134488-713302)) %>%
  left_join(rgc_area,by="d_rgcname") %>%
  mutate(activity_unit=population+employment)

df_centers <- read_csv("indv_center_pop_emp_2020.csv") %>%
  left_join(rgc_indv_area[,c("name","area_sq_mile")], by=c("d_rgcname_indv"="name")) %>%
  mutate(activity_unit=population+employment)

df_metro_urban <- read_csv("indv_center_pop_emp_2020.csv") %>%
  left_join(rgc_indv_area[,c("name","category","area_sq_mile")], by=c("d_rgcname_indv"="name")) %>%
  group_by(category) %>%
  summarise_at(vars(population,employment,area_sq_mile),sum) %>%
  ungroup() %>%
  mutate(activity_unit=population+employment)


trip_vars = c("driver","mode_1","mode_simple",'dest_purpose_cat', 'origin_purpose_cat',
              "google_duration", 'trip_path_distance',
              "origin_lat","origin_lng","o_rgcname","dest_lat","dest_lng","d_rgcname")

trip_data_17_19 <- get_hhts("2017_2019", "t", vars=trip_vars) %>%
  left_join(rgc_indv_area %>% select(name,category), by = c("d_rgcname"="name")) %>%
  mutate(trip_type = case_when(dest_purpose_cat %in% c("Errand/Other","Shop","Social/Recreation","Escort","Meal")~"Non-work", 
                               dest_purpose_cat %in% c("Work","Work-related","School")~"Work",
                               TRUE~NA),
         d_rgcname_indv = ifelse(is.na(d_rgcname), "Not RGC", d_rgcname),
         d_rgcname = factor(ifelse(is.na(d_rgcname), "Not RGC", "RGC"), levels=c("RGC", "Not RGC")),
         category = factor(ifelse(is.na(category), "Not RGC", category), levels=c("Metro","Urban", "Not RGC"))) %>%
  filter(!is.na(trip_type))

```

```{r}
formatting_func <- function(.data){
  .data %>%
  mutate(share = scales::percent(share,accuracy=1),
         count = scales::number(count,accuracy=1000,big.mark = ","),
         trip_sq_mile = scales::number(trip_sq_mile,accuracy=100,big.mark = ","),
         trip_activity_unit = scales::number(trip_activity_unit,accuracy=0.01))
}
```


## trips in centers

:::{.callout-warning}
no 2020 employment data in Puyallup Downtown and Redmond-Overlake
:::

- trip types:
  1. non-work trip purposes include Shop, Meal, Social/Recreation, Escort and Errand/Other purposes
  2. work trip purposes include work, work-related and **school** purposes
- one-fifth of all non-work trips end in centers. 

:::{.panel-tabset}

### RGC

```{r}
#| out-width: 450px
#| out-height: 300px

df_plot <- trip_data_17_19 %>% 
  hhts_count(group_vars=c("trip_type","d_rgcname"),spec_wgt = "trip_weight_2017_2019") %>%
  filter(d_rgcname!= "Total") %>%
  left_join(df_rgc, by="d_rgcname") %>%
  mutate(trip_sq_mile = count/area_sq_mile,
         trip_activity_unit = count/activity_unit)

plot_ly(data = df_plot %>% filter(d_rgcname != "Total"),
        x = ~trip_type, y = ~share,type = "bar", name = ~d_rgcname,
        error_y = ~list(array = share_moe,
                        color = '#000000')) %>%
  layout(xaxis = list(title = 'trip type'), yaxis = list(title = 'trip share', tickformat=".1%"), 
         title = "share of weekday trip destinations in RCC/ Not RGC",
         font = list(family="Poppins"))
```

- trip count per square mile
  1. for non-work trips, trips per square mile for centers is **50 times** higher than that for non-center areas
  2. for work trips, trips per square mile for centers is **80 times** higher than that for non-center areas
  
```{r}
#| tbl-cap: weekday trip destination

df_plot[,list(d_rgcname,trip_type,share,count,trip_sq_mile,trip_activity_unit)] %>%
  formatting_func()
```

### Metro/Urban RGC

```{r}
#| out-width: 550px
#| out-height: 300px

df_plot <- trip_data_17_19 %>% 
  hhts_count(group_vars=c("trip_type","category"),spec_wgt = "trip_weight_2017_2019") %>%
  filter(category!= "Total") %>%
  left_join(df_metro_urban, by="category") %>%
  mutate(trip_sq_mile = count/area_sq_mile,
         trip_activity_unit = count/activity_unit)
df_plot$category <- factor(df_plot$category, levels=c("Not RGC","Metro","Urban"))

plot_ly(data = df_plot,
        x = ~trip_type, y = ~share,type = "bar", name = ~category,
        error_y = ~list(array = share_moe,
                        color = '#000000')) %>%
  layout(xaxis = list(title = 'trip type'), yaxis = list(title = 'trip share', tickformat=".1%"), 
         title = "share of weekday trip destinations in Metro/Urban RCC",
         font = list(family="Poppins"))
```

```{r}
#| tbl-cap: weekday trip destination

df_plot[,list(category,trip_type,share,count,trip_sq_mile,trip_activity_unit)] %>%
  formatting_func()
```

### individual centers

```{r}
#| out-width: 600px
#| out-height: 700px


# TODO: add activity unit
df_plot <- trip_data_17_19 %>%
  filter(trip_type=="Work") %>%
  hhts_count(group_vars=c("trip_type","d_rgcname_indv"),spec_wgt = "trip_weight_2017_2019") %>%
  filter(d_rgcname_indv != "Total") %>%
  add_row(
    trip_data_17_19 %>%
      filter(trip_type=="Non-work") %>%
      hhts_count(group_vars=c("trip_type","d_rgcname_indv"),spec_wgt = "trip_weight_2017_2019") %>%
      filter(d_rgcname_indv != "Total")
  ) %>%
  left_join(df_centers, by="d_rgcname_indv") %>%
  mutate(trip_sq_mile = count/area_sq_mile,
         trip_activity_unit = count/activity_unit)

plot_ly(data = df_plot %>% filter(d_rgcname_indv!="Not RGC"),
        x = ~share, y = ~reorder(d_rgcname_indv,share), name=~trip_type, type = "bar", orientation = 'h',
        error_x = ~list(array = share_moe,
                        color = '#000000')) %>%
  layout(xaxis = list(title = 'trip share', tickformat=".1%"), yaxis = list(title = 'regional growth center'), 
         title = "share of weekday trip destinations in RCC",
         font = list(family="Poppins"))

plot_ly(data = df_plot,
        x = ~trip_sq_mile, y = ~reorder(d_rgcname_indv,trip_sq_mile), name=~trip_type, type = "bar", orientation = 'h') %>%
  layout(xaxis = list(title = 'trip count/ square mile'), yaxis = list(title = 'regional growth center'), 
         title = "weekday trip destinations per square mile in RCC",
         font = list(family="Poppins"))

plot_ly(data = df_plot,
        x = ~trip_activity_unit, y = ~reorder(d_rgcname_indv,trip_activity_unit), name=~trip_type, type = "bar", orientation = 'h') %>%
  layout(xaxis = list(title = 'trip count/ activity unit'), yaxis = list(title = 'regional growth center'), 
         title = "weekday trip destinations per activity unit in RCC",
         font = list(family="Poppins"))
```


```{r}
#| tbl-cap: weekday trip destination

df_plot[,list(d_rgcname_indv,trip_type,share,count,trip_sq_mile,trip_activity_unit)] %>%
  formatting_func()
```

:::

## trips in centers by trip purpose

- meal trips have the most share of center trips (around 30%)
- escort trips have the least share of center trips (around 9%)


:::{.panel-tabset}

### RGC

```{r}
#| out-width: 700px
#| out-height: 400px

df_plot <- trip_data_17_19 %>% 
  filter(trip_type=="Non-work") %>%
  hhts_count(group_vars=c("d_rgcname",'dest_purpose_cat'),spec_wgt = "trip_weight_2017_2019") %>% 
  filter(dest_purpose_cat != "Total") %>%
  left_join(df_rgc, by="d_rgcname") %>%
  mutate(trip_sq_mile = count/area_sq_mile,
         trip_activity_unit = count/activity_unit)
df_plot$d_rgcname <- factor(df_plot$d_rgcname, levels=c("Not RGC","RGC"))

# plot_ly(data = df_plot,
#         x = ~dest_purpose_cat, y = ~share,type = "bar", name = ~d_rgcname, 
#         error_y = ~list(array = share_moe,
#                         color = '#000000')) %>%
#   layout(xaxis = list(title = 'trip purpose'), yaxis = list(title = 'trip share', tickformat=".1%"), 
#          title = "share of weekday non-work trip destinations in RCC by trip purpose",
#          font = list(family="Poppins"))
```

```{r}
#| tbl-cap: weekday non-work trip per square mile by purpose
df_plot %>%
  pivot_wider(id_cols = c(dest_purpose_cat), names_from = d_rgcname, values_from = trip_sq_mile) %>%
  mutate(`RGC/Not RGC`=RGC/`Not RGC`) %>%
  mutate(RGC = scales::number(RGC,accuracy=100,big.mark = ","),
         `Not RGC` = scales::number(`Not RGC`,accuracy=100,big.mark = ","),
         `RGC/Not RGC` = scales::number(`RGC/Not RGC`,accuracy=1))
```


```{r}
#| tbl-cap: weekday non-work trip per activity unit by purpose
df_plot %>%
  pivot_wider(id_cols = c(dest_purpose_cat), names_from = d_rgcname, values_from = trip_activity_unit) %>%
  mutate(`RGC/Not RGC`=RGC/`Not RGC`) %>%
  mutate(RGC = scales::number(RGC,accuracy=0.01,big.mark = ","),
         `Not RGC` = scales::number(`Not RGC`,accuracy=0.01,big.mark = ","),
         `RGC/Not RGC` = scales::number(`RGC/Not RGC`,accuracy=0.01))
```

```{r}
#| tbl-cap: weekday non-work trip destination by purpose

# df_plot[,list(d_rgcname,dest_purpose_cat,share,count,trip_sq_mile,trip_activity_unit)] %>%
#   formatting_func()
```

```{r}
#| out-width: 700px
#| out-height: 400px

# df_plot <- trip_data_17_19 %>% 
#   hhts_count(group_vars=c("d_rgcname",'trip_type'),spec_wgt = "trip_weight_2017_2019") %>% 
#   filter(trip_type != "Total") %>%
#   left_join(df_rgc, by="d_rgcname") %>%
#   mutate(trip_sq_mile = count/area_sq_mile,
#          trip_activity_unit = count/activity_unit)
# df_plot$d_rgcname <- factor(df_plot$d_rgcname, levels=c("Not RGC","RGC"))
# 
# plot_ly(data = df_plot,
#         x = ~trip_type, y = ~share,type = "bar", name = ~d_rgcname, 
#         error_y = ~list(array = share_moe,
#                         color = '#000000')) %>%
#   layout(xaxis = list(title = 'trip type'), yaxis = list(title = 'trip share', tickformat=".1%"), 
#          title = "share of weekday non-work trip destinations in RCC by trip type",
#          font = list(family="Poppins"))
```

```{r}
#| tbl-cap: weekday non-work trip destination by purpose

# df_plot[,list(d_rgcname,trip_type,share,count,trip_sq_mile,trip_activity_unit)] %>%
#   formatting_func()
```

### Metro/Urban RGC

```{r}
#| out-width: 700px
#| out-height: 400px

df_plot <- trip_data_17_19 %>% 
  filter(trip_type=="Non-work") %>%
  hhts_count(group_vars=c("category",'dest_purpose_cat'),spec_wgt = "trip_weight_2017_2019") %>% 
  filter(dest_purpose_cat != "Total") %>%
  left_join(df_metro_urban, by="category") %>%
  mutate(trip_sq_mile = count/area_sq_mile,
         trip_activity_unit = count/activity_unit)
df_plot$category <- factor(df_plot$category, levels=c("Not RGC","Metro", "Urban"))

# plot_ly(data = df_plot,
#         x = ~dest_purpose_cat, y = ~share,type = "bar", name = ~category, 
#         error_y = ~list(array = share_moe,
#                         color = '#000000')) %>%
#   layout(xaxis = list(title = 'trip purpose'), yaxis = list(title = 'trip share', tickformat=".1%"), 
#          title = "share of weekday non-work trip destinations in RCC by trip purpose",
#          font = list(family="Poppins"))
```

```{r}
#| tbl-cap: weekday non-work trip per square mile by purpose
df_plot %>%
  pivot_wider(id_cols = c(dest_purpose_cat), names_from = category, values_from = trip_sq_mile) %>%
  mutate(`Metro/Not RGC`=Metro/`Not RGC`,
         `Urban/Not RGC`=Urban/`Not RGC`) %>%
  mutate(Metro = scales::number(Metro,accuracy=100,big.mark = ","),
         Urban = scales::number(Urban,accuracy=100,big.mark = ","),
         `Not RGC` = scales::number(`Not RGC`,accuracy=100,big.mark = ","),
         `Metro/Not RGC` = scales::number(`Metro/Not RGC`,accuracy=1,big.mark = ","),
         `Urban/Not RGC` = scales::number(`Urban/Not RGC`,accuracy=1))
```

```{r}
#| tbl-cap: weekday non-work trip per activity unit by purpose
df_plot %>%
  pivot_wider(id_cols = c(dest_purpose_cat), names_from = category, values_from = trip_activity_unit) %>%
  mutate(`Metro/Not RGC`=Metro/`Not RGC`,
         `Urban/Not RGC`=Urban/`Not RGC`) %>%
  mutate(Metro = scales::number(Metro,accuracy=0.1,big.mark = ","),
         Urban = scales::number(Urban,accuracy=0.1,big.mark = ","),
         `Not RGC` = scales::number(`Not RGC`,accuracy=0.1,big.mark = ","),
         `Metro/Not RGC` = scales::number(`Metro/Not RGC`,accuracy=0.01,big.mark = ","),
         `Urban/Not RGC` = scales::number(`Urban/Not RGC`,accuracy=0.01))
```

```{r}
#| tbl-cap: weekday non-work trip destination by purpose

# df_plot[,list(category,dest_purpose_cat,share,count,trip_sq_mile,trip_activity_unit)] %>%
#   formatting_func()
```

```{r}
#| out-width: 700px
#| out-height: 400px

# df_plot <- trip_data_17_19 %>% 
#   hhts_count(group_vars=c("category",'trip_type'),spec_wgt = "trip_weight_2017_2019") %>% 
#   filter(trip_type != "Total") %>%
#   left_join(df_metro_urban, by="category") %>%
#   mutate(trip_sq_mile = count/area_sq_mile,
#          trip_activity_unit = count/activity_unit)
# df_plot$category <- factor(df_plot$category, levels=c("Not RGC","Metro", "Urban"))
# 
# plot_ly(data = df_plot,
#         x = ~trip_type, y = ~share,type = "bar", name = ~category, 
#         error_y = ~list(array = share_moe,
#                         color = '#000000')) %>%
#   layout(xaxis = list(title = 'trip type'), yaxis = list(title = 'trip share', tickformat=".1%"), 
#          title = "share of weekday non-work trip destinations in RCC by trip purpose",
#          font = list(family="Poppins"))
```

```{r}
#| tbl-cap: weekday non-work trip destination by purpose

# df_plot[,list(category,trip_type,share,count,trip_sq_mile,trip_activity_unit)] %>%
#   formatting_func()
```
:::







