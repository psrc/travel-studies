
## Read in Libraries

```{r setup, include=FALSE}
library(data.table)
library(stringr)
library(travelSurveyTools)
library(psrcelmer)
library(dplyr)
library(psrcplot)
library(tidyverse)
source('../survey-23-preprocess.R')
```

## Read in Codebook

```{r , echo=FALSE}
cb_path = str_glue("J:/Projects/Surveys/HHTravel/Survey2023/Data/data_published/PSRC_Codebook_2023_v1.xlsx")

variable_list = readxl::read_xlsx(cb_path, sheet = 'variable_list')
value_labels = readxl::read_xlsx(cb_path, sheet = 'value_labels')

setDT(variable_list)
setDT(value_labels)
```

## Read in Data from Elmer

The 2017, 2019, 2021, and 2023 travel survey data is in Elmer. You will need to select exactly which columns you want to summarize. Note that the variables and values you pull in must match the codebook. (if for some reason in error, there is inconsistency we have to fix it).

The package uses DT and data.table for most operation, so you will usually want inputs to be in data.table format.

```{r }
hh<- get_query(sql= "select  household_id as hh_id, hhincome_broad,home_jurisdiction, home_county, hh_weight,vehicle_count, home_rgcname, home_lat, home_lng, survey_year, numworkers, hh_race_category
                from HHSurvey.v_households_labels")


person<- get_query(sql= "select household_id as hh_id,race_category,
person_id, workplace, telecommute_freq, survey_year, person_weight, gender, age, sexuality, industry,office_available, commute_freq, education, adult_student, employment, commute_subsidy_transit, commute_subsidy_use_1,  work_lat, work_lng , work_rgcname, work_jurisdiction, work_county
                from HHSurvey.v_persons_labels")
                
day<- get_query(sql= "select person_id, day_id, household_id as hh_id, telework_time, day_weight , survey_year from HHSurvey.v_days_labels")

trip<- get_query(sql= "select trip_id, household_id as hh_id, day_id,
person_id, mode_1, dest_purpose, survey_year, trip_weight, distance_miles, mode_class, travelers_total 
                from HHSurvey.v_trips_labels")
setDT(hh)
setDT(person)
setDT(day)
setDT(trip)
```

Before you get started on any summary, please review the survey instrument for the question wording and options.

Carefully pay attention to which survey participants were asked which question. Often only a subset of the participants answered a question.

Furthermore, if you are going to summarize any data across time, you will need to RECONCILE any changes.

The survey instrument is here: J:/Projects/Surveys/HHTravel/Survey2023/Documents/Survey_Instrument/Puget_Sound_HTS_Questionnaire_2023_Final.docx

Open the codebook and review the variable and it's values. J:/Projects/Surveys/HHTravel/Survey2023/Data/data_published/PSRC_Codebook_2023_v1.xlsx

# Careful with multi-year summaries.

If you are doing a multi year summary, carefully look back at the questionnaire to note question changes. Here are the questionnaires for 2019:<file:///J:/Projects/Surveys/HHTravel/Survey2019/Planning/Survey%20Materials/PSRC_2019_Online_Questionnaire.html#employment_and_commute_questions> and 2021:J:/Projects/Surveys/HHTravel/Survey2021/Questionnaire/PSRC_2021_Questionnaire_032521.docx

Note that in the values table, we have groupings. These groupings can help you handle inconsistencies in the questions over time.

Also we generally have way too much detail in the responses to have statistically significant results, so most of the time you want to summarize grouped data. You can add the groupings to the variables table by using the function get_grouped_labels

travelSurveyTools expects the data to be in a list of data.tables. You must also specify the names of the ids on each table, and the names of the weights.

```{r}
hts_data = list(hh=hh,
                person=person,
                day=day,
                trip = trip)
ids = c('hh_id', 'person_id','day_id', 'trip_id')
wts = c('hh_weight', 'person_weight', 'day_weight', 'trip_weight')
```


```{r}
#some how a duplicate snuck into the variable list not sure how
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)
```

```{r}

## mode by income
mode_inc = summarize_weighted(hts_data= hts_data,
                               summarize_var = 'mode_class',
                               summarize_by = c('survey_year', 'hhincome_broad'),
                               id_cols= ids,
                               wt_cols=wts,
                               wtname='trip_weight'
                               )

mode_income<-mode_inc$summary$wtd%>%
  mutate(moe=prop_se*1.645)%>%filter(survey_year=='2023')%>%filter(hhincome_broad!='Prefer not to answer')%>%filter(mode_class=="Transit")%>%mutate(hhincome_broad=factor(hhincome_broad, levels=c('Under $25,000', '$25,000-$49,999','$50,000-$74,999', '$75,000-$99,999', '$100,000-$199,999','$200,000 or more')))%>%filter(hhincome_broad!='NA')

chart_mode_income <- static_bar_chart(mode_income, x='prop', y='hhincome_broad', fill='mode_class', ylabel= 'Share', xlabel='Transit Mode Share', moe='moe')+ theme(axis.text.x=element_text(size=14), axis.text.y=element_text(size=14),legend.text = element_text(size=14), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))

chart_mode_income

```

```{r}

## pass and adult_student

pass_summary = summarize_weighted(hts_data= hts_data,
                               summarize_var = 'commute_subsidy_transit',
                               summarize_by = c('survey_year', 'adult_student'),
                               id_cols= ids,
                               wt_cols=wts,
                               wtname='trip_weight'
                               )

pass<-pass_summary$summary$wtd%>%
  drop_na(commute_subsidy_transit)%>%mutate(moe=prop_se*1.645)%>%filter(adult_student!='No, not a student')%>%filter(survey_year=='2023')

static_column_chart(pass, x='adult_student', y='prop', fill='commute_subsidy_transit',ylabel= 'Share', xlabel='Student Status', moe='moe')+ theme(axis.text.x=element_text(size=14), axis.text.y=element_text(size=14),legend.text = element_text(size=14), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
```

```{r}

## income, pass, and employment

emp_inc_summary = summarize_weighted(hts_data= hts_data,
                               summarize_var = 'hhincome_broad',
                               summarize_by = c('survey_year', 'commute_subsidy_transit', 'employment'),
                               id_cols= ids,
                               wt_cols=wts,
                               wtname='trip_weight'
                               )


emp_inc<-emp_inc_summary$summary$wtd%>%
  drop_na(hhincome_broad)%>%mutate(moe=prop_se*1.645)%>%filter(survey_year=='2023')%>%filter(hhincome_broad!='Prefer not to answer')

#write.csv(pass_inc, 'pass_inc.csv')

static_column_chart(emp_inc, x='hhincome_broad', y='prop', fill='employment',ylabel= 'Share', xlabel='Income', moe='moe')+ theme(axis.text.x=element_text(size=14), axis.text.y=element_text(size=14),legend.text = element_text(size=14), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))

```

```{r}

## pass and employment

emp_summary = summarize_weighted(hts_data= hts_data,
                               summarize_var = 'commute_subsidy_transit',
                               summarize_by = c('survey_year','employment'),
                               id_cols= ids,
                               wt_cols=wts,
                               wtname='trip_weight'
                               )


emp<-emp_summary$summary$wtd%>%
  drop_na('commute_subsidy_transit')%>%mutate(moe=prop_se*1.645)%>%filter(survey_year=='2023')

#write.csv(pass_inc, 'pass_inc.csv')

static_column_chart(emp, x='employment', y='prop', fill='commute_subsidy_transit',ylabel= 'Share', xlabel='Transit Pass', moe='moe')+ theme(axis.text.x=element_text(size=14), axis.text.y=element_text(size=14),legend.text = element_text(size=14), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))

```

```{r}
## crosscheck number of workers and employment
worker_summary = summarize_weighted(hts_data= hts_data,
                               summarize_var = 'numworkers',
                               summarize_by = c('survey_year','employment'),
                               id_cols= ids,
                               wt_cols=wts,
                               wtname='trip_weight'
                               )


worker<-worker_summary$summary$wtd%>%
  drop_na(numworkers)%>%mutate(moe=prop_se*1.645)%>%filter(survey_year=='2023')%>%filter(numworkers!='Missing: Skip Logic')

#write.csv(pass_inc, 'pass_inc.csv')

static_column_chart(worker, x='employment', y='prop', fill='numworkers',ylabel= 'Share', xlabel='Employment Status', moe='moe')+ theme(axis.text.x=element_text(size=14), axis.text.y=element_text(size=14),legend.text = element_text(size=14), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))

```


```{r}
## commute pass by income and number of workers in household

pass_workers = summarize_weighted(hts_data= hts_data,
                               summarize_var = 'commute_subsidy_transit',
                               summarize_by = c('survey_year', 'hhincome_broad', 'numworkers'),
                               id_cols= ids,
                               wt_cols=wts,
                               wtname='trip_weight'
                               )

pass_work<-pass_workers$summary$wtd%>%
  drop_na(commute_subsidy_transit)%>%mutate(moe=prop_se*1.645)%>%filter(survey_year=='2023')%>%filter(commute_subsidy_transit=='Not offered')%>%filter(hhincome_broad!='Prefer not to answer')

#write.csv(pass_work, 'pass_work.csv')

```

```{r}
## commute pass by income

pass_inc = summarize_weighted(hts_data= hts_data,
                               summarize_var = 'commute_subsidy_transit',
                               summarize_by = c('survey_year', 'hhincome_broad'),
                               id_cols= ids,
                               wt_cols=wts,
                               wtname='trip_weight'
                               )

pass_income<-pass_inc$summary$wtd%>%
  drop_na(commute_subsidy_transit)%>%mutate(moe=prop_se*1.645)%>%filter(survey_year=='2023')%>%filter(commute_subsidy_transit=='Offered')%>%filter(hhincome_broad!='Prefer not to answer')%>%mutate(hhincome_broad=factor(hhincome_broad, levels=c('Under $25,000', '$25,000-$49,999','$50,000-$74,999', '$75,000-$99,999', '$100,000-$199,999','$200,000 or more')))

chart_pass_income <- static_bar_chart(pass_income, x='prop', y='hhincome_broad', fill='commute_subsidy_transit',ylabel= 'Share', xlabel='Transit Pass Offered', moe='moe')+ theme(axis.text.x=element_text(size=14), axis.text.y=element_text(size=14),legend.text = element_text(size=14), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))

chart_pass_income

```


```{r}

## commute pass with student status and income

student_summary = summarize_weighted(hts_data= hts_data,
                               summarize_var = 'commute_subsidy_transit',
                               summarize_by = c('survey_year', 'hhincome_broad', 'adult_student'),
                               id_cols= ids,
                               wt_cols=wts,
                               wtname='trip_weight'
                               )

pass_students<-student_summary$summary$wtd%>%
  drop_na(commute_subsidy_transit)%>%mutate(moe=prop_se*1.645)%>%filter(survey_year=='2023')

#write.csv(pass_students, 'pass_students.csv')

static_column_chart(pass_students, x='adult_student', y='est', fill='commute_subsidy_transit',ylabel= 'Share', xlabel='Transit Pass', moe='moe')+ theme(axis.text.x=element_text(size=14), axis.text.y=element_text(size=14),legend.text = element_text(size=14), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
```



```{r}

## pass and age

pass_age_summary = summarize_weighted(hts_data= hts_data,
                               summarize_var = 'commute_subsidy_transit',
                               summarize_by = c('survey_year','age_grp_2'),
                               id_cols= ids,
                               wt_cols=wts,
                               wtname='trip_weight'
                               )


pass_age<-pass_age_summary$summary$wtd%>%
  drop_na(commute_subsidy_transit)%>%mutate(moe=prop_se*1.645)%>%filter(survey_year=='2023')

#write.csv(pass_inc, 'pass_inc.csv')

static_column_chart(pass_age, x='commute_subsidy_transit', y='est', fill='age_grp_2',ylabel= 'Share', xlabel='Transit Pass', moe='moe')+ theme(axis.text.x=element_text(size=14), axis.text.y=element_text(size=14),legend.text = element_text(size=14), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
```


```{r}

## age and income
age_summary = summarize_weighted(hts_data= hts_data,
                               summarize_var = 'age_grp_2',
                               summarize_by = c('survey_year','hhincome_broad'),
                               id_cols= ids,
                               wt_cols=wts,
                               wtname='trip_weight'
                               )


age<-age_summary$summary$wtd%>%
  drop_na(age_grp_2)%>%mutate(moe=prop_se*1.645)%>%filter(survey_year=='2023')

#write.csv(pass_inc, 'pass_inc.csv')

static_column_chart(age, x='hhincome_broad', y='est', fill='age_grp_2',ylabel= 'Share', xlabel='Transit Pass', moe='moe')+ theme(axis.text.x=element_text(size=14), axis.text.y=element_text(size=14),legend.text = element_text(size=14), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
```

```{r}

## pass, income, adult_student, numworkers, age
pass_all = summarize_weighted(hts_data= hts_data,
                               summarize_var = 'commute_subsidy_transit',
                               summarize_by = c('survey_year', 'hhincome_broad', 'adult_student', 'numworkers', 'age'),
                               id_cols= ids,
                               wt_cols=wts,
                               wtname='trip_weight'
                               )

pass_all2<-pass_all$summary$wtd%>%
  drop_na(commute_subsidy_transit)%>%mutate(moe=prop_se*1.645)%>%filter(survey_year=='2023')%>%filter(commute_subsidy_transit=='Offered')%>%filter(hhincome_broad=='Under $25,000')%>%filter(adult_student!='No, not a student')

#write.csv(pass_all2, 'pass_all.csv')

chart_pass_income <- static_bar_chart(pass_income, x='prop', y='hhincome_broad', fill='commute_subsidy_transit',ylabel= 'Share', xlabel='Transit Pass', moe='moe')+ theme(axis.text.x=element_text(size=14), axis.text.y=element_text(size=14),legend.text = element_text(size=14), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))

chart_pass_income

```

```{r}

## pass, income, numworkers, age

pass_all2 = summarize_weighted(hts_data= hts_data,
                               summarize_var = 'commute_subsidy_transit',
                               summarize_by = c('survey_year', 'hhincome_broad', 'numworkers', 'age'),
                               id_cols= ids,
                               wt_cols=wts,
                               wtname='trip_weight'
                               )

pass_all3<-pass_all2$summary$wtd%>%
  drop_na(commute_subsidy_transit)%>%mutate(moe=prop_se*1.645)%>%filter(survey_year=='2023')%>%filter(commute_subsidy_transit=='Offered')%>%filter(hhincome_broad=='Under $25,000')

#write.csv(pass_all3, 'pass_all2.csv')

```
