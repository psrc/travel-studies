---
title: "Displacement: 5 years"
author: "Mary Richards"
format: 
  html:
    toc: true
editor: visual
execute:
  warning: false
---

# General setup

PSRC and RSG have built a new package called travelSurveyTools to work with travel survey data. It is recommended to read through this documentation before you start using the package. <https://rsginc.github.io/travelSurveyTools/>

## Read in Libraries

```{r setup}
# YOU MIGHT need to download some special packages on github: travelSurveyTools, psrcelmer, and psrcplot. IF you need to download them, here's how:
# library(devtools)
# 
# devtools::install_github('rsgInc/travelSurveyTools')
# devtools::install_github('psrc/psrcelmer')
# devtools::install_github('psrc/psrcplot')
# devtools::install_github('psrc/psrc.travelsurvey', force=TRUE)

library(data.table)
library(stringr)
library(travelSurveyTools)
library(psrcelmer)
library(psrccensus)
library(psrcplot)
library(tidyverse)
library(magrittr)
library(table1)
library(psrc.travelsurvey)
library(openxlsx)

library(sf) #for regional geographies
library(leaflet)
library(leafem) #home button
library(htmlwidgets) #save visuals as html
sf_use_s2(FALSE)
library(corrplot) #for correlation analysis
library(see) #for theme_modern

library(DescTools) #pseudoR2 calculations
library(summarytools) #freq/ctable functions

source('../survey-23-preprocess.R')
# source('C:/Users/mrichards/Documents/GitHub/travel-studies/2023/summary/survey-23-preprocess.R')
```

## Read in Codebook

```{r}
cb_path = str_glue("J:/Projects/Surveys/HHTravel/Survey2023/Data/data_published/PSRC_Codebook_2023_v1.xlsx")

variable_list = readxl::read_xlsx(cb_path, sheet = 'variable_list')
value_labels = readxl::read_xlsx(cb_path, sheet = 'value_labels')

setDT(variable_list)
setDT(value_labels)
```

## Read in Data from Elmer

```{r}
# Specify which variables to retrieve
# View(psrc.travelsurvey:::init_variable_list)

vars <- c(
  #household-level variables
  'household_id', 'res_dur', 'prev_home_wa', 'home_rgcname', 
  'prev_home_rgcname', 'home_county', 'prev_home_county',
  'home_jurisdiction', 'prev_rent_own', 'rent_own', 
  'prev_res_type', 'res_type',
  'hhsize', 'numadults', 'numchildren', 'numworkers', 'vehicle_count', 
  'hhincome_detailed', 'hhincome_broad',
  'prev_res_factors_amenities', 'prev_res_factors_community_change',
  'prev_res_factors_crime', 'prev_res_factors_employment', 
  'prev_res_factors_forced', 'prev_res_factors_hh_size', 
  'prev_res_factors_housing_cost', 'prev_res_factors_income_change', 
  'prev_res_factors_less_space', 'prev_res_factors_more_space', 
  'prev_res_factors_no_answer', 'prev_res_factors_other', 
  'prev_res_factors_quality', 'prev_res_factors_school', 
  'prev_res_factors_specify', 'prev_res_factors_telework', 
  'hh_race_category',
  "home_jurisdiction","home_lat","home_lng",
  "prev_home_lat", "prev_home_lng", 
  "home_tract20", "prev_home_tract20",
  
  #person-level variables
  'race_category', 'race_afam', 'race_aiak', 'race_asian', 'race_hapi', 
  'race_noanswer', 'race_other', 'race_other_specify', 'race_white',
  'ethnicity_1', 'ethnicity_2', 'ethnicity_3', 'ethnicity_4', 
  'ethnicity_997', 'ethnicity_999', 'ethnicity_other',
  'person_id', 'gender', 'age',
  'education', 'employment',
  'license')

# Retrieve the data
hts_data <- get_psrc_hts(survey_vars = vars)  # default includes all survey_years

# For calculating moe
z_score<-1.645
```

The survey instrument is here: J:/Projects/Surveys/HHTravel/Survey2023/Documents/Survey_Instrument/Puget_Sound_HTS_Questionnaire_2023_Final.docx

Open the codebook and review the variable and it's values. J:/Projects/Surveys/HHTravel/Survey2023/Data/data_published/PSRC_Codebook_2023_v1.xlsx

# Research notes

## Who was asked?

### 2017

-   How long have you lived at your current residence?
-   Was your previous home located in the state of Washington? - If lived in residence \<= 5 years

### 2019

-   \[res_duration\]
-   \[prev_home_wa\] - if lived in current residence \<= 5 years
-   \[prev_res_factors\] - if previous home was in Washington (and moved in past 5 years)

### 2021

-   \[RES_DURATION\]
-   \[PREV_HOME_WA\] - if lived in current residence \<= 5 years
-   \[PREV_RES_FACTORS\] - if previous home was in Washington (and moved in past 5 years)

### 2023

-   \[RES_DURATION\] - if rMove or (rMove for Web and person 1)
-   \[PREV_HOME_WA\] - if lived in current residence \<= 5 years
-   \[PREV_RES_FACTORS\] - if previous home was in Washington

## How were the questions asked?

The 2017 survey didn't ask about \[prev_res_factors\], so displacement will be analyzed for 2019, 2021, and 2023.

*Which of the following were important factors in your decision to move away from your previous residence?* *Select all that apply.*

### 2019

-   Could no longer afford previous residence because of an increase in rent or housing costs
-   Could no longer afford previous residence because of a change in income or finances
-   Friends, family, or cultural community were leaving the area
-   Changes in household size, establish own household
-   Needed more space
-   Needed less space
-   Employment or commuting considerations (e.g., to take new job or shorten commute)
-   Access to a different K-12 school
-   Concerns about safety or crime
-   To upgrade to a better quality home or to stop renting and buy a home
-   Forced to move out (e.g., building demolished or renovated, asked to leave by landlord, foreclosure)
-   Other reason
-   Prefer not to answer

### 2021 (same wording as 2019 with a few additional options)

-   COVID-19 removed need to live in previous residence (e.g., no longer need to attend work or school in-person)
-   Concerns about COVID-19 health risks

### 2023 (similar options, but some new options and different wording of others)

-   *Increase in rent or housing costs, could no longer afford previous place*
-   *Change in income or finances, could no longer afford previous place*
-   *Friends, family, or cultural community left or were leaving the area*
-   *Change in who you live with (e.g., move out on your own, getting married/divorced)*
-   Needed more space
-   Needed less space
-   *To have better access to work (e.g., better commute or take new job)*
-   **To have better access to recreation, restaurants, shops, and other amenities**
-   *Employerâ€™s telework policy removed need to live in previous residence*
-   Access to a different K-12 school
-   Concerns about safety or crime
-   To upgrade to a better-quality home or to stop renting and buy a home
-   Forced to move out (e.g., building demolished or renovated, asked to leave by landlord, foreclosure)
-   Other reason
-   Prefer not to answer

## Topics to explore

-   Demographics (household level)
    -   race/ethnicity
    -   lifecycle
    -   household size
    -   number of children
    -   income
    -   number of vehicles
    -   education?
-   Previous and current living:
    -   housing tenure
    -   housing type
-   Spatial patterns (limited for 2023)
    -   RGCs

# Data setup

```{r}
# add new variable
  variable_list<-add_variable(variable_list, 'sample','hh')
  variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)
  
  # data <- list(hh=basics)
  
# this function generates numbers for the region - combined survey years and separate
stats_context <- function(variable_name=NULL){
 
  data <- list(hh=basics)
  
  # Calculate a categorical summary, i.e. count/share - combined data years
  summary = summarize_weighted(hts_data= data,
                               summarize_var = 'sample',
                               id_cols='hh_id',
                               wt_cols='hh_weight',
                               wtname='hh_weight'
  )
  
  wtd_sum_all<-summary$summary$wtd %>%
    mutate(prop_moe=z_score*prop_se,
           est_moe=z_score*est_se) %>% 
    dplyr::select(-c(prop_se, est_se)) %>% 
    mutate(survey_year="Combined")
  
  # Calculate a categorical summary, i.e. count/share - separate data years
  summary = summarize_weighted(hts_data= data,
                               summarize_var = 'sample',
                               summarize_by = c('survey_year'),
                               id_cols='hh_id',
                               wt_cols='hh_weight',
                               wtname='hh_weight'
  )
  
  wtd_sum_year<-summary$summary$wtd %>%
    mutate(prop_moe=z_score*prop_se,
           est_moe=z_score*est_se) %>% 
    dplyr::select(-c(prop_se, est_se)) %>%
    mutate(survey_year=as.character(survey_year))
  
  # merge
  # put all data frames into list
  df_list <- list(wtd_sum_all, wtd_sum_year)      
  
  # merge all data frames together
  if(is.null(variable_name)){
    full_sample <- bind_rows(df_list) %>%
    pivot_wider(names_from=survey_year, values_from = c(count, est, est_moe, prop, prop_moe),
                names_vary='slowest')
  } else {
    full_sample <- bind_rows(df_list) %>%
    pivot_wider(names_from=survey_year, values_from = c(count, est, est_moe, prop, prop_moe),
                names_vary='slowest') %>%
    filter(sample==variable_name)
  }
  
  return(full_sample)
  
}

# this function generates numbers for the four counties - combined survey years and separate
stats_context_geo <- function(variable_name=NULL){
  
  data <- list(hh=basics)
  
  # Calculate a categorical summary, i.e. count/share - combined data years
  summary = summarize_weighted(hts_data= data,
                               summarize_var = 'sample',
                               summarize_by = c('home_county'),
                               id_cols='hh_id',
                               wt_cols='hh_weight',
                               wtname='hh_weight'
  )
  
  wtd_sum_all<-summary$summary$wtd %>%
    mutate(prop_moe=z_score*prop_se,
           est_moe=z_score*est_se) %>% 
    dplyr::select(-c(prop_se, est_se)) %>% 
    mutate(survey_year="Combined")
  
  # Calculate a categorical summary, i.e. count/share - separate data years
  summary = summarize_weighted(hts_data= data,
                               summarize_var = 'sample',
                               summarize_by = c('survey_year','home_county'),
                               id_cols='hh_id',
                               wt_cols='hh_weight',
                               wtname='hh_weight'
  )
  
  wtd_sum_year<-summary$summary$wtd %>%
    mutate(prop_moe=z_score*prop_se,
           est_moe=z_score*est_se) %>% 
    dplyr::select(-c(prop_se, est_se)) %>%
    mutate(survey_year=as.character(survey_year))
  
  # merge
  # put all data frames into list
  df_list <- list(wtd_sum_all, wtd_sum_year)      
  
  # merge all data frames together
  if(is.null(variable_name)){
    full_sample <- bind_rows(df_list) %>%
    pivot_wider(names_from=c(survey_year, home_county), values_from = c(count, est, est_moe, prop, prop_moe),
                names_vary='slowest')
  } else {
    full_sample <- bind_rows(df_list) %>%
    pivot_wider(names_from=c(survey_year, home_county), values_from = c(count, est, est_moe, prop, prop_moe),
                names_vary='slowest') %>%
    filter(sample==variable_name)
  }
  
}

# this function generates numbers for the region and any additional grouping variable - combined survey years and separate
stats_context_group <- function(variable_name=NULL, add_group){
  
  data <- list(hh=basics)
  
  # Calculate a categorical summary, i.e. count/share - combined data years
  summary = summarize_weighted(hts_data= data,
                               summarize_var = 'sample',
                               summarize_by = c(add_group),
                               id_cols='hh_id',
                               wt_cols='hh_weight',
                               wtname='hh_weight'
  )
  
  wtd_sum_all<-summary$summary$wtd %>%
    mutate(prop_moe=z_score*prop_se,
           est_moe=z_score*est_se) %>% 
    dplyr::select(-c(prop_se, est_se)) %>% 
    mutate(survey_year="Combined")
  
  # Calculate a categorical summary, i.e. count/share - separate data years
  summary = summarize_weighted(hts_data= data,
                               summarize_var = 'sample',
                               summarize_by = c('survey_year',add_group),
                               id_cols='hh_id',
                               wt_cols='hh_weight',
                               wtname='hh_weight'
  )
  
  wtd_sum_year<-summary$summary$wtd %>%
    mutate(prop_moe=z_score*prop_se,
           est_moe=z_score*est_se) %>% 
    dplyr::select(-c(prop_se, est_se)) %>%
    mutate(survey_year=as.character(survey_year))
  
  # merge
  # put all data frames into list
  df_list <- list(wtd_sum_all, wtd_sum_year)      
  
  # merge all data frames together
  if(is.null(variable_name)){
    full_sample <- bind_rows(df_list) %>%
    pivot_wider(names_from=c(survey_year, add_group), values_from = c(count, est, est_moe, prop, prop_moe),
                names_vary='slowest')
  } else {
    full_sample <- bind_rows(df_list) %>%
    pivot_wider(names_from=c(survey_year, add_group), values_from = c(count, est, est_moe, prop, prop_moe),
                names_vary='slowest') %>%
    filter(sample==variable_name)
  }
  
}
```

### Full sample of respondents

```{r}
# look at full sample of survey respondents 
length(unique(hts_data$hh$hh_id))

basics <- mutate(hts_data$hh,
                      sample= case_when(!is.na(hh_id)~"Full Sample",
                                        TRUE~"No")) %>% 
  filter(survey_year!='2017')

table(basics$sample)

full_sample <- stats_context('Full Sample')
full_sample_geo <- stats_context_geo('Full Sample')
```

### Movers

```{r}
# Movers
table(hts_data$hh$res_dur)
table(hts_data$hh$prev_home_wa)

basics <- hts_data$hh %>% 
  mutate(sample= case_when(res_dur=="Less than a year" & prev_home_wa=="Yes, previous home was in Washington" |
                             res_dur=="Between 1 and 2 years" & prev_home_wa=="Yes, previous home was in Washington" |
                             res_dur=="Between 2 and 3 years" & prev_home_wa=="Yes, previous home was in Washington" |
                             res_dur=="Between 3 and 5 years" & prev_home_wa=="Yes, previous home was in Washington" ~ "Movers",
                           TRUE~"No")) %>% 
  filter(survey_year!='2017')

# table(basics$sample)

movers <- stats_context('Movers')
movers_geo <- stats_context_geo('Movers')
```

## Identify displaced movers

There was a problem with the 2023 HTS data, where the previous home location question was only asked to respondents who moved within the last five years AND moved from OUTSIDE of WA state. Therefore, we are unable to do any useful analyses moves/displacement based on where households had lived within our region.

To identify movers we are choosing those who have moved within the past **five years** and those who previously lived in Washington state.

To identify displacement, respondents were asked about their reasons for moving. 4 of the 14 reasons are linked with displacement:

-   Increase in rent or housing costs, could no longer afford previous place
-   Change in income or finances, could no longer afford previous place
-   Friends, family, or cultural community left or were leaving the area
-   Forced to move out (e.g., building demolished or renovated, asked to leave by landlord, foreclosure)

```{r}
# unique(hts_data$hh$res_dur)

hts_data$hh <- hts_data$hh %>% 
  mutate(movers=case_when(res_dur=="Less than a year" |
                            res_dur=="Between 1 and 2 years" | 
                            res_dur=="Between 2 and 3 years" |
                            res_dur=="Between 3 and 5 years"
                          ~ 'Did move',
                          res_dur=="Missing Response" ~ 'No response',
                          TRUE ~ 'Did not move'),
         displaced=case_when(prev_res_factors_forced=='Selected'|
                               prev_res_factors_income_change=='Selected'|
                               prev_res_factors_housing_cost =='Selected'|
                               prev_res_factors_community_change=='Selected'~ 'Displaced',
                             TRUE~'Not displaced'))

table(hts_data$hh$survey_year)
table(hts_data$hh$movers, hts_data$hh$displaced)
table(hts_data$hh$survey_year, hts_data$hh$movers)

# There is an issue with the 2023 data where some people who hadn't moved within the past 5 years were able to select reasons for moving (prev_res_factors). This shouldn't have happened: all respondents were asked how long they had been in their current homes > if they chose <5 years they were asked if their previous residence had been in WA > if yes, they were asked to select why they moved. As a result, we will need to filter out the people who did not move.

hts_data$hh <- hts_data$hh %>%
  filter(movers == "Did move")

# to check
table(hts_data$hh$survey_year)
table(hts_data$hh$movers)
table(hts_data$hh$survey_year, hts_data$hh$movers)
table(hts_data$hh$movers, hts_data$hh$displaced)
table(hts_data$hh$survey_year, hts_data$hh$displaced)
table(hts_data$hh$movers, hts_data$hh$res_dur)
table(hts_data$hh$res_dur, hts_data$hh$displaced)
```

##### Check the number of movers

Compare to ACS: https://www2.census.gov/programs-surveys/demo/visualizations/geographic-mobility/acs-1yr/residence.pdf

```{r}
# movers at the hh level
table(hts_data$hh$movers, hts_data$hh$survey_year)

hh_id_movers <- hts_data$hh %>% 
  select(hh_id, res_dur, survey_year) %>% 
  mutate(mover_1yr = case_when(res_dur== "Less than a year"~ "one year",
                               TRUE~"more than one year"))

# movers at the person level
person_movers <- hh_id_movers %>% 
  right_join(hts_data$person, by = c("hh_id", 
                                     "survey_year"))

table(person_movers$mover_1yr)
table(person_movers$survey_year, person_movers$mover_1yr)

# check estimate/shares
# add new variable
variable_list<-add_variable(variable_list, 'mover_1yr','person')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

person_data_all <- list(person=person_movers)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= person_data_all,
                             summarize_var = 'mover_1yr',
                             summarize_by = c('survey_year'),
                             id_cols='person_id',
                             wt_cols='person_weight',
                             wtname='person_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)
```

### Less than 2 years

```{r}
# hts_data$hh <- hts_data$hh %>% 
#   mutate(movers=case_when(res_dur=="Less than a year" |
#                             res_dur=="Between 1 and 2 years" #| 
#                           # res_dur=="Between 2 and 3 years" |
#                           # res_dur=="Between 3 and 5 years" 
#                           ~ 'Did move',
#                           res_dur=="Missing Response" ~ 'No response',
#                           TRUE ~ 'Did not move'),
#          displaced=case_when(prev_res_factors_forced=='Selected'|
#                                prev_res_factors_income_change=='Selected'|
#                                prev_res_factors_housing_cost =='Selected'|
#                                prev_res_factors_community_change=='Selected'~ 'Displaced',
#                              TRUE~'Not displaced'))
# 
# # There is an issue with the 2023 data where some people who hadn't moved within the past 5 years were able to select reasons for moving (prev_res_factors). This shouldn't have happened: all respondents were asked how long they had been in their current homes > if they chose <5 years they were asked if their previous residence had been in WA > if yes, they were asked to select why they moved. As a result, we will need to filter out the people who did not move.
# 
# hts_data$hh <- hts_data$hh %>%
#   filter(movers != "Did not move")
# 
# # to check
# table(hts_data$hh$movers, hts_data$hh$displaced)
# table(hts_data$hh$movers, hts_data$hh$res_dur)
# table(hts_data$hh$res_dur, hts_data$hh$displaced)
```

Some of these movers came from out of the state or country

```{r}
table(hts_data$hh$prev_home_wa, hts_data$hh$survey_year)
```

But we want to focus on those who have moved within the state

```{r}
# filter to only those who previously lived in WA (wanted to get the total number of respondents who moved/didn't move - if filter had been in previous, those who did not move would not have been included because the prev_home_wa was only asked of people who reported moving within the past 5 years)
hts_data$hh <- hts_data$hh %>% 
   filter(prev_home_wa=="Yes, previous home was in Washington")

table(hts_data$hh$survey_year, hts_data$hh$movers)
```

Based on a denominator of 1276 in 2023, we can look at displacement.

```{r}
# summary stats 
table(hts_data$hh$survey_year, hts_data$hh$displaced)
# table(hts_data$hh$survey_year, hts_data$hh$prev_res_factors_forced)
# table(hts_data$hh$survey_year, hts_data$hh$prev_res_factors_income_change)
# table(hts_data$hh$survey_year, hts_data$hh$prev_res_factors_housing_cost)
# table(hts_data$hh$survey_year, hts_data$hh$prev_res_factors_community_change)

# create csv for checking
# write.csv(hts_data$hh,
#           "T:/2024October/Mary/HHTS/displacement_check.csv")
```

### Remove 2017 year from data

The 2017 survey did not ask respondents about why they moved, so they cannot be categorized as displaced or not displaced.

```{r}
hts_data$hh <- hts_data$hh %>% 
  filter(survey_year!=2017)
```

### Add standard groupings

Based on https://psrc.github.io/psrc.travelsurvey/articles/add-standard-groupings.html

```{r}
hts_data <- hts_data %>% 
  hts_bin_income() %>% 
  hts_bin_hhsize() %>% 
  hts_bin_rent_own() %>% 
  hts_bin_vehicle_count() %>% 
  hts_bin_edu() %>% 
  hts_bin_worker()
```

## Explore 'Other' responses

```{r, include=FALSE, eval=FALSE}
table(hts_data$hh$prev_res_factors_other, hts_data$hh$survey_year) 
# unique(hh_detail$prev_res_factors_specify)
```

# Basics

## Displaced Movers

```{r}
# Displaced Movers
basics <- hts_data$hh %>% 
  mutate(sample= case_when(displaced=="Displaced"~"Displaced",
                           TRUE~"No")) %>% 
  filter(survey_year!='2017')

# table(basics$sample)

displaced <- stats_context('Displaced') 
displaced_geo <- stats_context_geo('Displaced')
```

## Individual Displacement Reasons

```{r}
print(dplyr::select(hts_data$hh, starts_with("prev_res_factors_")))

# forced
# table(hts_data$hh$prev_res_factors_forced)
basics <- hts_data$hh %>% 
  mutate(sample= case_when(prev_res_factors_forced=="Selected"~"Forced",
                           prev_res_factors_forced=="Not Selected"~"No"))

forced <- stats_context('Forced')
forced_geo <- stats_context_geo('Forced')

# income
# table(hts_data$hh$prev_res_factors_income_change)
basics <- hts_data$hh %>% 
  mutate(sample= case_when(prev_res_factors_income_change=="Selected"~"Income change",
                           prev_res_factors_income_change=="Not Selected"~"No"))

income <- stats_context('Income change') 
income_geo <- stats_context_geo('Income change')

# housing
# table(hts_data$hh$prev_res_factors_housing_cost)
basics <- hts_data$hh %>%
  mutate(sample= case_when(prev_res_factors_housing_cost=="Selected"~"Housing cost",
                           prev_res_factors_housing_cost=="Not Selected"~"No"))

housing <- stats_context('Housing cost')
housing_geo <- stats_context_geo('Housing cost')

# community
# table(hts_data$hh$prev_res_factors_community_change)
basics <- hts_data$hh %>%
  mutate(sample= case_when(prev_res_factors_community_change=="Selected"~"Community change",
                           prev_res_factors_community_change=="Not Selected"~"No")) %>% 
  filter(survey_year!='2017')

community <- stats_context('Community change') 
community_geo <- stats_context_geo('Community change')


# amenities
basics <- hts_data$hh %>%
  mutate(sample= case_when(prev_res_factors_amenities=="Selected"~"Amenities",
                           prev_res_factors_amenities=="Not Selected"~"No"))

amenities <- stats_context('Amenities') 
amenities_geo <- stats_context_geo('Amenities')


# crime
basics <- hts_data$hh %>%
  mutate(sample= case_when(prev_res_factors_crime=="Selected"~"Crime",
                           prev_res_factors_crime=="Not Selected"~"No"))

crime <- stats_context('Crime') 
crime_geo <- stats_context_geo('Crime')


# employment
basics <- hts_data$hh %>%
  mutate(sample= case_when(prev_res_factors_employment=="Selected"~"Employment",
                           prev_res_factors_employment=="Not Selected"~"No"))

employment <- stats_context('Employment')
employment_geo <- stats_context_geo('Employment')


# household size
basics <- hts_data$hh %>%
  mutate(sample= case_when(prev_res_factors_hh_size=="Selected"~"Household size",
                           prev_res_factors_hh_size=="Not Selected"~"No"))

hhsize <- stats_context('Household size') 
hhsize_geo <- stats_context_geo('Household size')


# less space
basics <- hts_data$hh %>%
  mutate(sample= case_when(prev_res_factors_less_space=="Selected"~"Less space",
                           prev_res_factors_less_space=="Not Selected"~"No"))

lessspace <- stats_context('Less space') 
lessspace_geo <- stats_context_geo('Less space')


# more space
basics <- hts_data$hh %>%
  mutate(sample= case_when(prev_res_factors_more_space=="Selected"~"More space",
                           prev_res_factors_more_space=="Not Selected"~"No"))

morespace <- stats_context('More space') 
morespace_geo <- stats_context_geo('More space')

# no answer
basics <- hts_data$hh %>%
  mutate(sample= case_when(prev_res_factors_no_answer=="Selected"~"No answer",
                           prev_res_factors_no_answer=="Not Selected"~"No")) 

noanswer <- stats_context('No answer') 
noanswer_geo <- stats_context_geo('No answer')

# other
basics <- hts_data$hh %>%
  mutate(sample= case_when(prev_res_factors_other=="Selected"~"Other",
                           prev_res_factors_other=="Not Selected"~"No"))

other <- stats_context('Other') 
other_geo <- stats_context_geo('Other')

# quality
basics <- hts_data$hh %>%
  mutate(sample= case_when(prev_res_factors_quality=="Selected"~"Quality",
                           prev_res_factors_quality=="Not Selected"~"No")) 

quality <- stats_context('Quality') 
quality_geo <- stats_context_geo('Quality')

# school
basics <- hts_data$hh %>%
  mutate(sample= case_when(prev_res_factors_school=="Selected"~"School",
                           prev_res_factors_school=="Not Selected"~"No"))

school <- stats_context('School') 
school_geo <- stats_context_geo('School')


# telework
basics <- hts_data$hh %>%
  mutate(sample= case_when(prev_res_factors_telework=="Selected"~"Telework",
                           prev_res_factors_telework=="Not Selected"~"No"))

telework <- stats_context('Telework')
telework_geo <- stats_context_geo('Telework')
```

### Combine all data into table - with count/share of survey, movers, displaced movers, displaced reasons

```{r}
# put all data frames into list
df_list <- list(full_sample, movers, displaced,
                forced, income, housing, community, 
                amenities, crime, employment, 
                hhsize, lessspace, morespace, noanswer,
                other, quality, school, telework)

df_list_geo <- list(full_sample_geo, movers_geo, displaced_geo,
                    forced_geo, income_geo, housing_geo, community_geo, 
                    amenities_geo, crime_geo, employment_geo, 
                    hhsize_geo, lessspace_geo, morespace_geo, noanswer_geo,
                    other_geo, quality_geo, school_geo, telework_geo)

# merge all data frames together
# context_numbers <- bind_rows(df_list, .id = "column_label")
context_numbers <- bind_rows(df_list)
context_numbers_geo <- bind_rows(df_list_geo)

# separate out by county
king_values <- context_numbers_geo %>% 
  select(sample, contains("King"))
kitsap_values <- context_numbers_geo %>% 
  select(sample, contains("Kitsap"))
pierce_values <- context_numbers_geo %>% 
  select(sample, contains("Pierce"))
snohomish_values <- context_numbers_geo %>% 
  select(sample, contains("Snohomish"))

loc <- "T:/2025Q1/Mary/HHTS/2023/"

list_of_datasets <- list("region" = context_numbers, 
                         "king" = king_values,
                         "kitsap" = kitsap_values,
                         "pierce" = pierce_values, 
                         "snohomish" = snohomish_values)

wb <- write.xlsx(list_of_datasets, file = file.path(loc, "HTS_Displacement_Context_county.xlsx"),
                 colNames = TRUE,
                 overwrite = TRUE)
```

# Demographics

## Household Race

#### All races

AANHIPI non-Hispanic, Black or African American non-Hispanic, Hispanic, Missing/No response, Some Other Races non-Hispanic, White non-Hispanic

The prop field is weighted and matches the estimate.

```{r}
# unique(hts_data$hh$hh_race_category)
# table(hts_data$hh$hh_race_category)

# add new variable
variable_list<-add_variable(variable_list, 'displaced','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('hh_race_category'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "hh_race_category", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Household race", 
                    title = "Displacement by Household Race (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

#### 4 races

AANHPI non-Hispanic, Hispanic, Missing/No response, Other POC non-Hispanic, White non-Hispanic

```{r}
hts_data$hh <- mutate(hts_data$hh,
                      hh_race_category_4= case_when(hh_race_category=="Black or African American non-Hispanic"|
                                                      hh_race_category=="Some Other Races non-Hispanic" ~ "Other POC non-Hispanic",
                                                    TRUE~hh_race_category))

# checking numbers
# unique(hts_data$hh$hh_race_category_4)
# table(hts_data$hh$hh_race_category_4)

# add new variable
variable_list<-add_variable(variable_list, 'hh_race_category_4','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('hh_race_category_4'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "hh_race_category_4", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Household race", 
                    title = "Displacement by Household Race (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

#### 3 races

AANHPI non-Hispanic, Missing/No response, Non-Asian POC, White non-Hispanic

```{r}
hts_data$hh <- mutate(hts_data$hh,
                      hh_race_category_3= case_when(hh_race_category=="Black or African American non-Hispanic"|
                                                      hh_race_category=="Hispanic" ~ "Non-Asian POC",
                                                      hh_race_category=="Some Other Races non-Hispanic" ~ "Non-Asian POC",
                                                    TRUE~hh_race_category))

# checking numbers
# unique(hts_data$hh$hh_race_category_3)
table(hts_data$hh$hh_race_category_3)

# add new variable
variable_list<-add_variable(variable_list, 'hh_race_category_3','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('hh_race_category_3'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "hh_race_category_3", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Household race", 
                    title = "Displacement by Household Race (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

#### 2 races

People of Color, Missing/No response, White non-Hispanic

```{r}
hts_data$hh <- mutate(hts_data$hh,
                      hh_race_category_2= case_when(hh_race_category=="AANHPI non-Hispanic"|
                                                      hh_race_category=="Black or African American non-Hispanic"|
                                                      hh_race_category=="Hispanic"|
                                                      hh_race_category=="Some Other Races non-Hispanic" ~ "POC",
                                                    TRUE~hh_race_category))

# checking numbers
# unique(hts_data$hh$hh_race_category_2)
# table(hts_data$hh$hh_race_category_2)

# add new variable
variable_list<-add_variable(variable_list, 'hh_race_category_2','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('hh_race_category_2'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "hh_race_category_2", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Household race", 
                    title = "Displacement by Household Race (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

### Checking with previous reports

https://www.psrc.org/media/4917 and https://www.psrc.org/media/4916 more documentation on data wiki (http://aws-linux/mediawiki/index.php/Displacement_Analysis)

```{r}
# prev_res_factors_forced, prev_res_factors_income_change, prev_res_factors_housing_cost, prev_res_factors_community_change
# 
movers_df <- hts_data$hh %>% 
  filter(movers=="Did move",
         survey_year==2019,
         prev_res_factors_forced=="Selected")

disp_2race_forced <- psrc_hts_stat(hts_data, 
                                   analysis_unit="hh", 
                                   group_vars=c("movers", "hh_race_category_2", "prev_res_factors_forced"))

disp_2race_income <- psrc_hts_stat(hts_data, 
                                   analysis_unit="hh", 
                                   group_vars=c("movers","hh_race_category_2", "prev_res_factors_income_change"))

disp_2race_cost <- psrc_hts_stat(hts_data, 
                                   analysis_unit="hh", 
                                   group_vars=c("movers","hh_race_category_2", "prev_res_factors_housing_cost"))

disp_2race_cost <- psrc_hts_stat(hts_data, 
                                   analysis_unit="hh", 
                                   group_vars=c("movers","hh_race_category_2", "prev_res_factors_community_change"))


table(hts_data$hh$prev_res_factors_other, hts_data$hh$survey_year) 
# unique(hh_detail$prev_res_factors_specify)
```

## Lifecycle

```{r}

```

## Household Size

```{r}
unique(hts_data$hh$hhsize) #13 options
unique(hts_data$hh$hhsize_bin4) #standard groupings: 4 options

# add new variable
variable_list<-add_variable(variable_list, 'hhsize_bin4','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('hhsize_bin4'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "hhsize_bin4", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Household Size", 
                    title = "Displacement by Household Size (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

## Number of children

```{r}
# unique(hts_data$hh$numchildren) #original variables
# table(hts_data$hh$numchildren) #original variables


hts_data$hh <- mutate(hts_data$hh,
                      numchildren_simp= factor(
                        fcase(grepl("^(3|4|5|6|7|8|9|10|11|12)", numchildren) ,"3+ children",
                               !is.na(numchildren), as.character(numchildren))))

unique(hts_data$hh$numchildren_simp)
table(hts_data$hh$numchildren_simp)

# add new variable
variable_list<-add_variable(variable_list, 'numchildren_simp','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('numchildren_simp'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "numchildren_simp", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Number of Children", 
                    title = "Displacement by Number of Children (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

## Household Income

```{r}
# unique(hts_data$hh$hhincome_broad) #original variables

# unique(hts_data$hh$hhincome_bin3) #standard groupings
unique(hts_data$hh$hhincome_bin5) #standard groupings

# add new variable
variable_list<-add_variable(variable_list, 'hhincome_bin5','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('hhincome_bin5'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "hhincome_bin5", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Household Income", 
                    title = "Displacement by Household Income (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

### Household Income Flag

```{r}
unique(hts_data$hh$hhincome_bin5) #standard groupings

hts_data$hh <- hts_data$hh %>% 
  mutate(income_flag= case_when(hhincome_bin5=="$100,000 or more"~"$100,000 or more",
                            TRUE~"Less than $100,000"))

table(hts_data$hh$survey_year, hts_data$hh$income_flag)
```

## Number of Vehicles

```{r}
# unique(hts_data$hh$vehicle_count) #original variables

# unique(hts_data$hh$vehicle_count_bin4) #standard groupings

# add new variable
variable_list<-add_variable(variable_list, 'vehicle_count_bin4','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('vehicle_count_bin4'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "vehicle_count_bin4", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Number of Vehicles", 
                    title = "Displacement by Household Vehicle Count (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

## Number of drivers

```{r}
table(hts_data$person$license) #original variables
table(hts_data$person$license, hts_data$person$survey_year) #original variables

# unique(hts_data$person$edu_bin2) #standard groupings
# table(hts_data$person$edu_bin2) 

license_person <- hts_data$person %>% 
  select(hh_id, license) %>% 
  mutate(license_binary= case_when(license=="Yes, drives" |
                                     license=="Yes, has an intermediate or unrestricted license"~ 1,
                                   TRUE~0)) %>% 
  group_by(hh_id) %>% 
  summarise(license_num = sum(license_binary, na.rm=T))

table(license_person$license_num)

hts_data$hh <- hts_data$hh %>% 
  left_join(license_person, by="hh_id")

# add new variable
variable_list<-add_variable(variable_list, 'license_num','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('license_num'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "license_num", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Number of Drivers", 
                    title = "Number of Drivers (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

## Number of vehicles/Number of drivers

```{r}
table(hts_data$hh$license_num) #original variables
table(hts_data$hh$vehicle_count_bin4) #original variables
# class(hts_data$hh$vehicle_count_bin4) #original variables

license_hh <- hts_data$hh %>% 
  select(hh_id, vehicle_count_bin4, license_num) %>% 
  mutate(vehicles_numeric= case_when(vehicle_count_bin4=="0"~0,
                                     vehicle_count_bin4=="1"~1,
                                     vehicle_count_bin4=="2"~2,
                                     vehicle_count_bin4=="3"~3,
                                     vehicle_count_bin4=="4+"~4)) %>% 
  group_by(hh_id) %>% 
  summarise(veh_num = sum(vehicles_numeric, na.rm=T),
            veh_drivers = vehicles_numeric/license_num)

table(license_hh$veh_drivers) # 17 Inf values
# turn Inf into NA
is.na(license_hh$veh_drivers) <- sapply(license_hh$veh_drivers, is.infinite)
table(license_hh$veh_drivers) # No Inf values


hts_data$hh <- hts_data$hh %>% 
  left_join(license_hh, by="hh_id")

table(hts_data$hh$veh_drivers) # No Inf values


# add new variable
variable_list<-add_variable(variable_list, 'veh_drivers','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('veh_drivers'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "veh_drivers", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Number of Drivers", 
                    title = "Number of Drivers (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

## Education

```{r}
# unique(hts_data$person$education) #original variables
# table(hts_data$person$education) #original variables

# unique(hts_data$person$edu_bin2) #standard groupings
# table(hts_data$person$edu_bin2) 

edu_person <- hts_data$person %>% 
  select(hh_id, edu_bin2) %>% 
  mutate(edu_num= case_when(edu_bin2=="Less than Bachelors degree"~1,
                            edu_bin2=="Bachelors or higher"~2,
                            TRUE~NA)) %>% 
  group_by(hh_id) %>% 
  summarise(edu_num_prod = prod(edu_num, na.rm=T)) %>% 
  mutate(edu_hh_max= case_when(edu_num_prod==1~"Less than Bachelors degree",
                               edu_num_prod>1~"Bachelors or higher")) 
table(edu_person$edu_hh_max)

hts_data$hh <- hts_data$hh %>% 
  left_join(edu_person, by="hh_id")

# add new variable
variable_list<-add_variable(variable_list, 'edu_hh_max','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('edu_hh_max'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "edu_hh_max", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Education Attainment", 
                    title = "Displacement by Household's Highest Education (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

## Employment

### Number of workers

```{r}
# unique(hts_data$hh$numworkers) #original variables
# table(hts_data$hh$numworkers)

hts_data$hh <- mutate(hts_data$hh,
                      num_workers_4bin= factor(
                        fcase(grepl("^(3|4|5|6|7|8|9|10|11|12|13)", numworkers) ,"3+ workers",
                               !is.na(numworkers), as.character(numworkers))))


table(hts_data$hh$num_workers_4bin)

# add new variable
variable_list<-add_variable(variable_list, 'num_workers_4bin','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('num_workers_4bin'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "num_workers_4bin", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Workers in Household", 
                    title = "Displacement by Household Employment (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

### Relationship between Workers and Adults

```{r}
# unique(hts_data$person$employment) #original variables
# unique(hts_data$person$worker) #standard grouping
# table(hts_data$person$worker)
unique(hts_data$hh$numadults)

worker_person <- hts_data$person %>% 
  select(hh_id, worker) %>% 
  mutate(worker_num= case_when(worker=="Not worker"~0,
                               worker=="Worker"~1,
                               TRUE~NA)) %>% 
  group_by(hh_id) %>% 
  summarise(worker_num_sum = sum(worker_num, na.rm=T)) 

table(worker_person$worker_num_sum)

hts_data$hh <- hts_data$hh %>%
  left_join(worker_person, by="hh_id") %>% 
  # mutate(numadults_simp= factor(
  #   fcase(grepl("^(6|7|8|9|10|11|12)", numadults) ,"6+ adults",
  #         !is.na(numadults), as.character(numadults)))) %>%
  mutate(numadults_num= as.numeric(substr(numadults,1,2))) %>% 
  mutate(adult_workers= case_when(worker_num_sum==numadults_num ~ "All workers",
                                  worker_num_sum < numadults_num ~ "Fewer workers",
                                  worker_num_sum > numadults_num ~ "More workers"))

table(hts_data$hh$numadults_num)
table(hts_data$hh$adult_workers)

#there is one household with more workers than adults
check <- hts_data$hh %>% 
  filter(adult_workers=="More workers")


# add new variable
variable_list<-add_variable(variable_list, 'adult_workers','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('adult_workers'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "adult_workers", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Workers:Adults", 
                    title = "Displacement by Household Workers:Adults (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

# Previous and Current Living

## Housing Tenure

### Previous

```{r}
# unique(hts_data$hh$prev_rent_own) #original variables

# need to recreate to match the standard grouping rent_own_bin2 variable
# based on code: https://github.com/psrc/psrc.travelsurvey/blob/main/R/psrc-hts-recode-hh-vars.R
hts_data$hh <- mutate(hts_data$hh,
                      prev_rent_own_bin2= factor(
                        fcase(grepl("^Provided", prev_rent_own) ,"Rent",
                              grepl("^(Other|Prefer)", as.character(prev_rent_own)), NA_character_,
                              !is.na(rent_own), as.character(prev_rent_own))))

unique(hts_data$hh$prev_rent_own_bin2)
table(hts_data$hh$prev_rent_own_bin2, hts_data$hh$survey_year)

# add new variable
variable_list<-add_variable(variable_list, 'prev_rent_own_bin2','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('prev_rent_own_bin2'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "prev_rent_own_bin2", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Previous Housing Tenure", 
                    title = "Displacement by Previous Housing Tenure (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

### Current

```{r}
# unique(hts_data$hh$rent_own) #original variables

# unique(hts_data$hh$rent_own_bin2) #standard groupings
table(hts_data$hh$rent_own_bin2, hts_data$hh$survey_year)

# add new variable
variable_list<-add_variable(variable_list, 'rent_own_bin2','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('rent_own_bin2'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "rent_own_bin2", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Current Tenure", 
                    title = "Displacement by Current Tenure (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

### Transition

```{r}
unique(hts_data$hh$prev_rent_own_bin2)
unique(hts_data$hh$rent_own_bin2)
# table(hts_data$hh$prev_rent_own_bin2)
# table(hts_data$hh$rent_own_bin2)

hts_data$hh <- mutate(hts_data$hh,
                      res_tenure_transition= case_when(prev_rent_own_bin2=="Rent" & 
                                                         rent_own_bin2=="Own/paying mortgage" ~ "Rent-Own",
                                                       prev_rent_own_bin2=="Owned/paid mortgage" & 
                                                         rent_own_bin2=="Rent" ~ "Own-Rent",
                                                       TRUE~"No change"))


# add new variable
variable_list<-add_variable(variable_list, 'res_tenure_transition','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('res_tenure_transition'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "res_tenure_transition", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Change in Housing Tenure", 
                    title = "Displacement by Change in Housing Tenure (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

## Housing Type

##### checking the raw data

```{r}
unique(hts_data$hh$prev_res_type) #original variables

# add new variable
# variable_list<-add_variable(variable_list, 'res_tenure_transition','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('prev_res_type'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "displaced", y = "prop", fill = "prev_res_type",
                    ylabel = "% of respondents", xlabel = "Previous Housing Type", 
                    title = "Displacement by Change in Previous Housing Type (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

###### look into household/dorms

```{r}
dorm_hh <- hts_data$hh %>%
  filter(prev_res_type=="Dorm or institutional housing")

table(dorm_hh$home_county)
table(dorm_hh$hhincome_broad)
table(dorm_hh$numadults)

dorm_hh_person <- dorm_hh %>% 
  inner_join(hts_data$person,
             by="hh_id")

table(dorm_hh_person$hhsize)

dorm_hh_1person <- dorm_hh_person %>% 
  filter(hhsize=="1 person")

table(dorm_hh_1person$age)
table(dorm_hh_1person$hhincome_broad)
```

##### aggregating the housing type

Based on sample size and MOE, it would be best to aggregate certain housing types. There appears to be a statistical difference in displacement rates between families living in buildings with 3 or fewer and 4 or more apartments/condos. Families in townhouses and buildings with 3 or fewer units seem to be displaced at similar rates, so those will be aggregated, although the numbers are still quite small for those two - the majority of people are in single-family houses or in buildings with 4 or more units. All of the remaining options have low sample sizes, so they will be aggregated.

```{r}
hts_data$hh <- mutate(hts_data$hh,
                      prev_res_type_simp= case_when(prev_res_type=="Single-family house (detached house)" ~ "Single-family",
                                                    prev_res_type=="Townhouse (attached house)" |
                                                      prev_res_type=="Building with 3 or fewer apartments/condos" ~ "Lower-density shared walls",
                                                    prev_res_type=="Building with 4 or more apartments/condos" ~ "Higher-density shared walls",
                                                    TRUE~"Other"))

```

##### checking against other demographic variables

To explore how this recategorization aligns with other SES

```{r}
# HOUSING TYPE & RACE (ALL) ----

# add new variable
variable_list<-add_variable(variable_list, 'prev_res_type_simp','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'prev_res_type_simp',
                             summarize_by = c('hh_race_category'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(wtd_sum,
                    x = "prev_res_type_simp", y = "prop", fill = "hh_race_category",
                    ylabel = "% of respondents", xlabel = "Previous Housing Type", 
                    title = "Previous Housing Type by Race/Ethnicity (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )


# HOUSING TYPE & INCOME (3 categories) ----
# add new variable
variable_list<-add_variable(variable_list, 'hhincome_bin3','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'prev_res_type_simp',
                             summarize_by = c('hhincome_bin3'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(wtd_sum,
                    x = "prev_res_type_simp", y = "prop", fill = "hhincome_bin3",
                    ylabel = "% of respondents", xlabel = "Previous Housing Type", 
                    title = "Previous Housing Type by Income (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

### Previous

```{r}
unique(hts_data$hh$prev_res_type_simp) #aggregated variable

# add new variable
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('prev_res_type_simp'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "prev_res_type_simp", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Previous Housing Type", 
                    title = "Displacement by Previous Housing Type (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

### Current

Using the same aggregation categories as with the previous housing type.

```{r}
# unique(hts_data$hh$prev_res_type) #original variables
# table(hts_data$hh$prev_res_type)

hts_data$hh <- mutate(hts_data$hh,
                      res_type_simp= case_when(res_type=="Single-family house (detached house)" ~ "Single-family",
                                               res_type=="Townhouse (attached house)" |
                                                 res_type=="Building with 3 or fewer apartments/condos" ~ "Lower-density shared walls",
                                               res_type=="Building with 4 or more apartments/condos" ~ "Higher-density shared walls",
                                               TRUE~"Other"))

# add new variable
variable_list<-add_variable(variable_list, 'res_type_simp','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('res_type_simp'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "res_type_simp", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Current Housing Type", 
                    title = "Displacement by Current Housing Type (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

### Transition

Using the same aggregation categories as with the previous housing type. "Other" == Dorm or institutional housing; Mobile home/trailer; Other (including boat, RV, van, etc.)

```{r}
# unique(hts_data$hh$prev_res_type_simp) #original variables
# unique(hts_data$hh$res_type_simp)
# table(hts_data$hh$prev_res_type_simp)

hts_data$hh <- mutate(hts_data$hh,
                      prev_res_type_num= case_when(prev_res_type_simp=="Single-family" ~1,
                                                   prev_res_type_simp=="Lower-density shared walls" ~2,
                                                   prev_res_type_simp=="Higher-density shared walls" ~3,
                                                   prev_res_type_simp=="Other" ~4),
                      res_type_num= case_when(res_type_simp== "Single-family" ~1,
                                              res_type_simp== "Lower-density shared walls" ~2,
                                              res_type_simp== "Higher-density shared walls" ~3,
                                              res_type_simp== "Other" ~4),
                      res_type_transition= case_when(prev_res_type_num==res_type_num~"No change",
                                                     prev_res_type_num>res_type_num~"More space, less density",
                                                     prev_res_type_num<res_type_num~"Less space, higher density"))

table(hts_data$hh$res_type_transition)

# add new variable
variable_list<-add_variable(variable_list, 'res_type_transition','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('res_type_transition'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "res_type_transition", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Change in Housing Type", 
                    title = "Displacement by Change in Housing Type (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
                                                       
```

# Spatial Patterns

## RGCs

There is no 2023 data for previous home location, so this will be based on current home location.

```{r}
# table(hts_data$hh$prev_home_rgcname, hts_data$hh$survey_year) #original variables
# table(hts_data$hh$home_rgcname, hts_data$hh$survey_year) #original variables

hts_data$hh <- mutate(hts_data$hh,
                      prev_RGC= case_when(prev_home_rgcname=="Not RGC" ~ "Not RGC",
                                          TRUE~"RGC"),
                      RGC= case_when(home_rgcname== "Not RGC" ~ "Not RGC",
                                          TRUE~"RGC"))

table(hts_data$hh$prev_RGC, hts_data$hh$survey_year)
table(hts_data$hh$RGC, hts_data$hh$survey_year)

# add new variable
variable_list<-add_variable(variable_list, 'RGC','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('RGC'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "RGC", y = "prop", fill = "displaced",
                    ylabel = "% of respondents", xlabel = "Home Location", 
                    title = "Displacement by Location in RGC (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

## Counties

```{r}
# unique(hts_data$hh$home_county) #original variables
# table(hts_data$hh$home_county)


# add new variable
variable_list<-add_variable(variable_list, 'home_county','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('home_county'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "displaced", y = "prop", fill = "home_county",
                    ylabel = "% of respondents", #xlabel = "Home County", 
                    title = "Displacement by County (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )

```

## Regional Geographies

### All

Regional Growth Strategies 6 categories: Metro cities, HCTs, Rural, etc.

```{r}
arc_service <- "https://services6.arcgis.com/GWxg6t7KXELn1thE/arcgis/rest/services"

# regional geography layer
region_geo.url <- file.path(arc_service,"Regional_Geographies/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson")
region_geo <- st_read(region_geo.url)

home_loc <- hts_data$hh %>%
  st_as_sf(coords = c("home_lng", "home_lat"), 
           crs = 4326) %>% 
  select(hh_id, geometry) #3343

hh <- st_intersection(home_loc, region_geo) %>%
  select(hh_id, cnty_name, feat_type, juris, class_desc) #3195

# add geography data to hts_data$hh
hts_data$hh <- hts_data$hh %>% 
  left_join(hh, by="hh_id")

# check
unique(hts_data$hh$class_desc)
table(hts_data$hh$survey_year, hts_data$hh$class_desc)

# add new variable
variable_list<-add_variable(variable_list, 'class_desc','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('class_desc'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)

# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "displaced", y = "prop", fill = "class_desc",
                    ylabel = "% of respondents", #xlabel = "Home County", 
                    title = "Displacement by Regional Geography (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

#### NA?

```{r}
# after st_intersection, hh dataset has fewer records than hts_data$hh by 148> NAs in regional geographies
test_na <- hts_data$hh %>% 
  filter(is.na(class_desc))

test <- hts_data$hh %>% 
  filter(is.na(home_lng))

length(unique(hts_data$hh$home_lat)) #2881
length(unique(hts_data$hh$home_lng)) #2278

missing_hh <- hts_data$hh %>%
  left_join(hh, by="hh_id")


# create map to verify that there are home locations outside of the regional geographies
# plot(region_geo)
# plot(region_geo["class_desc"])
# plot(home_loc)

# set map extent
map.lat<- 47.615
map.lon<- -122.257
map.zoom<- 8.5


color_palette <- leaflet::colorFactor(palette = psrc_colors$psrc_light,
                                      domain = region_geo$class_desc) # this is the value field

# map settings
test_map <- leaflet() %>%
  leaflet::addMapPane(name = "polygons", zIndex = 410) %>%
  leaflet::addMapPane(name = "maplabels", zIndex = 500) %>% # higher zIndex rendered on top
  leaflet::addProviderTiles("CartoDB.VoyagerNoLabels") %>%
  leaflet::addProviderTiles("CartoDB.VoyagerOnlyLabels",
                            options = leaflet::leafletOptions(pane = "maplabels"),
                            group = "Labels") %>%
  addPolygons(data=region_geo,
              fillColor = color_palette(region_geo$class_desc),
              color = color_palette,
              stroke=FALSE, 
              smoothFactor = 0.2,
              fillOpacity = 0.7) %>%
  addCircleMarkers(lng = hts_data$hh$home_lng,
                   lat = hts_data$hh$home_lat,
                   radius = 0.8) %>%
  addCircleMarkers(lng = test_na$home_lng,
                   lat = test_na$home_lat,
                   radius = 1.3,
                   color="red") %>%
  addLegend(position = "bottomright",
            pal = color_palette,
            values = unique(region_geo$class_desc),
            # colors = unique(region_geo$class_desc),
            labels = unique(region_geo$class_desc),
            # values = unique(region_geo$class_desc),
            # colors = unique(region_geo$class_desc),
            # labels = unique(region_geo$class_desc),
            title = "Regional <br> Geographies") %>% 
  
  #set view extent
  leaflet::setView(lng=map.lon, lat=map.lat, zoom=map.zoom) %>% 
  addEasyButton(easyButton(
    icon = htmltools::span(class = "globe", htmltools::HTML("&#127758;")),  #&#127760; (another emoji option) #"fa-globe", (font awesome icon no longer works because of the conversion to Poppins font below)
    title ="Region",
    onClick=JS("function(btn, map){map.setView([47.615,-122.257],8.5); }")))

# print map
test_map
```

### Simplified: 2 categories

```{r}
# unique(hts_data$hh$class_desc) #original variables
# table(hts_data$hh$survey_year, hts_data$hh$class_desc)

# aggregate categories
hts_data$hh <- mutate(hts_data$hh,
                      class_desc_bin2= case_when(class_desc=="HCT"  |
                                                   class_desc=="Metro" ~ "Metro/HCT",
                                                 TRUE~"Other"))

# add new variable
variable_list<-add_variable(variable_list, 'class_desc_bin2','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=hts_data$hh)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('class_desc_bin2'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "displaced", y = "prop", fill = "class_desc_bin2",
                    ylabel = "% of respondents", #xlabel = "Home County", 
                    title = "Displacement by Regional Geography (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

# Correlations

The dependent variable is displacement.\
The explanatory variables can be categorized as **categorical** and *numeric*. The reference group is provided for the categorical variables.\

```{r reference variables, eval=FALSE, include=FALSE}
hts_data$hh

table(hts_data$hh$hhincome_broad) # Under $25k is reference
table(hts_data$hh$hhsize) # 1 person
table(hts_data$hh$rent_own_bin2) #  Own/paying mortgage
table(hts_data$hh$prev_rent_own_bin2) # Owned/paid mortgage
table(hts_data$hh$numadults_num) # numeric
table(hts_data$hh$edu_hh_max) # Bachelors or higher
# table(hts_data$hh$hh_race_category_4) # White Only for both race categorizations
table(hts_data$hh$prev_res_type_simp) # Higher-density shared walls
table(hts_data$hh$res_type_simp) # Higher-density shared walls
table(hts_data$hh$prev_RGC) # Not RGC 
table(hts_data$hh$RGC) # Not RGC
```

### Correlation background

#### Sample sizes per year/displacement reason

```{r}
# sample size for each reason for displacement, and by income
hts_data$hh

df_table <- hts_data$hh %>% 
  filter(displaced=="Displaced") %>%
  mutate(community_num=case_when(prev_res_factors_community_change=="Selected" ~as.numeric(1),
                                 prev_res_factors_community_change=="Not Selected" ~as.numeric(0)),
         cost_num= case_when(prev_res_factors_housing_cost=="Selected" ~as.numeric(1),
                             prev_res_factors_housing_cost=="Not Selected" ~as.numeric(0)),
         forced_num= case_when(prev_res_factors_forced=="Selected" ~as.numeric(1),
                               prev_res_factors_forced=="Not Selected" ~as.numeric(0)),
         income_num= case_when(prev_res_factors_income_change=="Selected" ~as.numeric(1),
                               prev_res_factors_income_change=="Not Selected" ~as.numeric(0))) %>% 
  dplyr::group_by(survey_year) %>% 
  summarise(community=sum(community_num),
            cost=sum(cost_num),
            forced=sum(forced_num),
            income=sum(income_num)) %>% 
  print()
```

There are 3,343 households total. There are 916 displaced households.

#### Household-level variabes

##### Goodman and Kruskal

The Goodman and Kruskal tau measure is an asymmetric association measure between two categorical variables, based on the extent to which variation in one variable can be explained by the other. Based on https://cran.r-project.org/web/packages/GoodmanKruskal/vignettes/GoodmanKruskal.html.

```{r}
corr_variables <- c("displaced",
                    "hhincome_bin5", 
                    "hhsize_bin4",
                    "rent_own_bin2",
                    "prev_rent_own_bin2", 
                    "vehicle_count_bin4",
                    "numadults", 
                    "numchildren_simp",
                    "num_workers_4bin",
                    "edu_hh_max",
                    "prev_res_type",
                    "res_type")

# household type, using home location - displacement risk mapping - hhtract

library(GoodmanKruskal)
hh_correlation <- subset(hts_data$hh, select = corr_variables)
Disp_GKmatrix <- GKtauDataframe(hh_correlation)
plot(Disp_GKmatrix)
```

The strongest association seen in this plot is that between household size (hhsize_bin4) and number of adults (numadults) where the forward association is 0.77 and the reverse association is 0.55 - these numbers suggest that household size is highly predictive of the number of adults, which seems reasonable.

##### Correlation for matrix factors

If you want to have a genuine correlation plot for factors or mixed-type, you can also use model.matrix to one-hot encode all non-numeric variables. This is quite different than calculating CramÃ©r's V as it will consider your factor as separate variables, as many regression models do. https://stats.stackexchange.com/questions/148554/how-can-you-visualize-the-relationship-between-3-categorical-variables

```{r}
library(ggcorrplot)

model.matrix(~0+., data=hh_correlation) %>% 
  cor(use="pairwise.complete.obs") %>% 
  ggcorrplot(show.diag=FALSE, type="lower", lab=TRUE, lab_size=2)
```

#### Person-level variabes

```{r}
# join displacement data at hh to person-level data
person_level <- hts_data$hh %>%
  right_join(hts_data$person, by="hh_id") #person table includes 23,612


unique(person_level$age)
levels(person_level$education)
levels(person_level$employment)

# order/transform employment variables
person_level_ordered <- person_level %>%
  mutate(employment_simp=case_when(employment=="Employed full time (35+ hours/week, paid)"~"Full-time",
                                   employment=="Employed part time (fewer than 35 hours/week, paid)"|
                                     employment=="Self-employed"~"Part-time",
                                   TRUE~"Not employed"))
person_level_ordered$employment_simp <- factor(person_level_ordered$employment_simp, levels=c('Not employed', 'Part-time', 'Full-time'))

levels(person_level_ordered$age)
levels(person_level_ordered$employment_simp)

# categorical correlation
corr_variables_p <- c("displaced",
                      "age", 
                      "education",
                      "employment_simp") 

p_correlation <- subset(person_level_ordered, select = corr_variables_p)
Disp_GKmatrix_p <- GKtauDataframe(p_correlation)
plot(Disp_GKmatrix_p)

# 'continuous' correlation
# ordering person-level variables: education, employment status, age
person_level_num <- person_level %>%
  mutate(age_num=case_when(age=="Under 5 years old"~1,
                           age=="5-11 years"~2,
                           age=="12-15 years"~3,
                           age=="16-17 years"~4,
                           age=="18-24 years"~5,
                           age=="25-34 years"~6,
                           age=="35-44 years"~7,
                           age=="45-54 years"~8,
                           age=="55-64 years"~9,
                           age=="65-74 years"~10,
                           age=="75-84 years"~11,
                           age=="85 years or older"~12),
         education_num=case_when(education=="Prefer not to answer "~1,
                                 education=="Less than high school"~2,
                                 education=="High school graduate"~3,
                                 education=="Some college"~4,
                                 education=="Vocational/technical training"~5,
                                 education=="Associates degree"~6,
                                 education=="Bachelor degree"~7,
                                 education=="Graduate/post-graduate degree"~8),
         employment_num=case_when(employment=="Not employed and not looking for work (e.g., retired, stay-at-home parent, student)"|
                                     employment=="Retired" |
                                     employment=="Homemaker" |
                                     employment=="Not currently employed" |
                                    employment=="Unemployed and looking for work" |
                                    employment=="Unpaid volunteer or intern" |
                                    employment=="Employed but not currently working (e.g., on leave, furloughed 100%)"~1,
                                   employment=="Employed part time (fewer than 35 hours/week, paid)" |
                                     employment=="Self-employed"~2,
                                   employment=="Employed full time (35+ hours/week, paid)"~3)) 

person_level_num_filtered <- person_level_num %>% 
  select(displaced, age_num, education_num, employment_num)

model.matrix(~0+., data=person_level_num_filtered) %>% 
  cor(use="pairwise.complete.obs") %>% 
  ggcorrplot(show.diag=FALSE, type="lower", lab=TRUE, lab_size=2)
```

#### COVID

Movers before, during, and after the eviction moratoriums Policies and interest rates- before and after COVID - using the survey year and subtracting the range of years

```{r}
# we are loosely defining the time period of the moratorium as 2020-2021
hts_data$hh

table(hts_data$hh$res_dur)

time <- hts_data$hh %>% 
  mutate(covid_moving= case_when(survey_year==2019 |
                                   survey_year==2021 & res_dur !="Less than a year" | 
                                   #remove respondents who moved after (2020-2021)
                                   survey_year==2023 & res_dur =="Between 3 and 5 years" ~ "before", 
                                 #keep respondents who moved before 2020 (3-5 years before 2023)
                                 TRUE~"after"),
         moratorium= case_when(survey_year==2019 | 
                                 survey_year==2021 & res_dur=="Between 2 and 3 years" |
                                 survey_year==2021 & res_dur=="Between 3 and 5 years" |
                                 survey_year==2023 & res_dur=="Between 3 and 5 years" ~ "before",
                               survey_year==2021 & res_dur=="Less than a year" |
                                 survey_year==2023 & res_dur=="Between 1 and 2 years" |
                                 survey_year==2023 & res_dur=="Between 2 and 3 years" ~ "during",
                               survey_year==2021 & res_dur=="Between 1 and 2 years" |
                                 survey_year==2021 & res_dur=="Between 2 and 3 years" |
                                 survey_year==2021 & res_dur=="Between 3 and 5 years" |
                                 survey_year==2023 & res_dur=="Less than a year" ~ "after",
                               TRUE~ "Other"),
         moratorium_binary= case_when(moratorium=="before" |
                                        moratorium=="after"~ "not during",
                                      moratorium=="during"~ "during",
                                      TRUE~ "Other"))

time$covid_moving <- factor(time$covid_moving, levels=c('before', 'after'))
time$moratorium <- factor(time$moratorium, levels=c('before', 'during', 'after'))

# checking numbers
# table(hts_data$hh$survey_year)
# table(time$survey_year)
table(time$survey_year, time$res_dur)
table(time$survey_year, time$covid_moving)
table(time$survey_year, time$movers)
table(time$displaced, time$covid_moving)  
table(time$survey_year, time$moratorium)
table(time$moratorium, time$movers)
table(time$moratorium, time$moratorium_binary)


# join to hts_data$hh - for modeling
time_join <- time %>% 
  select(hh_id, covid_moving, moratorium, moratorium_binary)
hts_data$hh <- hts_data$hh %>% 
  left_join(time_join, by="hh_id")
```

##### COVID

```{r}
# add new variable
variable_list<-add_variable(variable_list, 'covid_moving','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=time)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('covid_moving'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "displaced", y = "prop", fill = "covid_moving",
                    ylabel = "% of respondents", #xlabel = "Home County", 
                    title = "Displacement by COVID (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

##### Moratorium

```{r}
# add new variable
variable_list<-add_variable(variable_list, 'moratorium','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=time)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('moratorium'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "displaced", y = "prop", fill = "moratorium",
                    ylabel = "% of respondents", #xlabel = "Home County", 
                    title = "Displacement by Moratorium (2019, 2021, 2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

###### Moratorium by income

```{r}
# unique(time$income_flag)

time_less <- time %>% 
  filter(income_flag=="Less than $100,000")
time_100k <- time %>% 
  filter(income_flag=="$100,000 or more")

hts_data_all <- list(hh=time_less)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('moratorium'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "displaced", y = "prop", fill = "moratorium",
                    ylabel = "% of respondents", #xlabel = "Home County", 
                    title = "Moratorium (2019, 2021, 2023) - Less than $100k",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )

hts_data_all <- list(hh=time_100k)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('moratorium'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "displaced", y = "prop", fill = "moratorium",
                    ylabel = "% of respondents", #xlabel = "Home County", 
                    title = "Moratorium (2019, 2021, 2023) - More than $100k",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

```{r}
# add hh level covid data to person-level data
hh_covid <- time %>% 
  select(hh_id, covid_moving)
person_level_covid <- person_level_ordered %>%
  select(hh_id, age, education, employment_simp, displaced) %>%
  right_join(hh_covid, by="hh_id")
```

##### Before

###### Person

```{r}
person_level_covid_before <- person_level_covid %>%
  filter(covid_moving=="before")

corr_variables_p <- c("displaced",
                      "age", 
                      "education",
                      "employment_simp") 

p_correlation_before <- subset(person_level_covid_before, select = corr_variables_p)
Disp_GKmatrix_p_before <- GKtauDataframe(p_correlation_before)
plot(Disp_GKmatrix_p_before)
```

###### Household

```{r}
hh_level_covid_before <- time %>%
  filter(covid_moving=="before")

hh_correlation_before <- subset(hh_level_covid_before, select = corr_variables)
Disp_GKmatrix_p_before <- GKtauDataframe(hh_correlation_before)
plot(Disp_GKmatrix_p_before)
```

##### After

###### Person

```{r}
person_level_covid_after <- person_level_covid %>%
  filter(covid_moving=="after")

p_correlation_after <- subset(person_level_covid_after, select = corr_variables_p)
Disp_GKmatrix_p_after <- GKtauDataframe(p_correlation_after)
plot(Disp_GKmatrix_p_after)
```

###### Household

```{r}
hh_level_covid_after <- time %>%
  filter(covid_moving=="after")

hh_correlation_after <- subset(hh_level_covid_after, select = corr_variables)
Disp_GKmatrix_h_after <- GKtauDataframe(hh_correlation_after)
plot(Disp_GKmatrix_h_after)
```

##### Moratorium - binary

```{r}
# add new variable
variable_list<-add_variable(variable_list, 'moratorium_binary','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)

hts_data_all <- list(hh=time)

# Calculate a categorical summary, i.e. count/share
summary = summarize_weighted(hts_data= hts_data_all,
                             summarize_var = 'displaced',
                             summarize_by = c('moratorium_binary'),
                             id_cols='hh_id',
                             wt_cols='hh_weight',
                             wtname='hh_weight'
)

wtd_sum<-summary$summary$wtd %>%
  mutate(prop_moe=z_score*prop_se)


# create chart
static_column_chart(filter(wtd_sum, #survey_year == focus_year, 
                           displaced=="Displaced"),
                    x = "displaced", y = "prop", fill = "moratorium_binary",
                    ylabel = "% of respondents", #xlabel = "Home County", 
                    title = "Displacement in Relation to Moratorium",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                    )
```

#### Displacement Risk

```{r}
# check home locations - previous and current
home_count <- hts_data$hh %>%
  group_by(survey_year) %>%
  summarise(n_distinct(home_tract20))

prev_home_count <- hts_data$hh %>%
  group_by(survey_year) %>%
  summarise(n_distinct(prev_home_tract20))

# there is one household with a previous home tract, but it appears to be NA
# test <- hts_data$hh %>% 
#   filter(survey_year=="2023") %>% 
#   group_by(prev_home_tract20) %>% 
#   summarise(first(hh_id))
```

##### Creating dataset

```{r}
# displacement risk dataset -----
disp10.url <- file.path(arc_service, "Displacement_Risk_Data/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson")
disp10.lyr <- st_read(disp10.url)

# displacement risk is in 2010 geographies, so will need 2010-2020 crosswalk -----
crosswalk_10_20 <- get_table(schema="census",
                             tbl_name="v_geo_relationships_tracts") 

# join displacement risk to crosswalk
disp10 <- disp10.lyr %>% 
  left_join(crosswalk_10_20, by="geoid10")

# join displacement risk data to HTS data: current home tract -----
# home_loc <- hts_data$hh %>%
#   st_as_sf(coords = c("home_lng", "home_lat"), 
#            crs = 4326) %>% 
#   select(hh_id, geometry) #3343 features
# 
# hh <- st_intersection(home_loc, disp10.lyr)

home_loc <- hts_data$hh %>%
  mutate(geoid20=as.character(home_tract20)) %>% 
  left_join(disp10, by="geoid20")

# join displacement risk data to HTS data: previous home tract -----
# create displacement dataset for previous home locations
prev_disp10 <- disp10 %>% 
  rename_with(.cols = ElmerGeo_DBO_displacement_risk_:vote_level, function(x){paste0("prev_", x)})
  
# need to remove 2023 data because locations not available
hh_no2023 <- hts_data$hh  %>%
  filter(survey_year!="2023")
table(hh_no2023$survey_year)

# prev_home_loc <- hh_no2023 %>%
#   st_as_sf(coords = c("prev_home_lat", "prev_home_lng"), 
#            crs = 4326) %>% 
#   select(hh_id, geometry) #2067 features
# 
# hh_prev <- st_intersection(prev_home_loc, prev_disp10.lyr)

prev_home_loc <- hh_no2023 %>%
  mutate(geoid20=as.character(home_tract20)) %>% 
  left_join(prev_disp10, by="geoid20")
```

##### Simplify data set: current and previous locations

###### Current home location

```{r}
home_loc_simp <- home_loc %>% 
  select(hh_id, displaced, risk_score:vote_level) %>% 
  mutate(disp_num=case_when(displaced=="Displaced"~1,
                            displaced=="Not displaced"~0)) %>%
  select(-c(displaced, risk_level_name, ends_with(c("_room","_level"))))
```

###### Previous home location

```{r}
prev_home_loc_simp <- prev_home_loc %>% 
  select(hh_id, prev_risk_score:prev_vote_level) %>%
  select(-c(prev_risk_level_name, , ends_with(c("_room","_level"))))
```

###### Join current and previous home location

```{r}
location_data <- home_loc_simp %>% 
  left_join(prev_home_loc_simp, by = "hh_id")
```

###### Map 2019 and 2021 displacement 
Didn't include the weights for the counts because decided against this for now
```{r, include=F, eval=F}
# compare 19 and 21 with displacement risk map - proportion
# calculate 3 sets of proportions based on prev_risk_level/prev_risk_level_name
prev_home_loc_tract20 <- prev_home_loc %>% 
  select(hh_id, survey_year, prev_home_tract20, movers, displaced)

# check
# table(prev_home_loc$displaced) #579
# table(prev_home_loc$survey_year) #1305+762
# length(unique(prev_home_loc_tract20$prev_home_tract20)) #650

prev_home_tract20 <- prev_home_loc_tract20 %>% 
  group_by(prev_home_tract20, survey_year) %>% 
  summarise(total_hh=sum(n()), # calculate total number of hh
            displaced=sum(length(displaced[displaced=="Displaced"])), # calculate number of displaced hh
            .groups = 'drop') %>% 
  mutate(disp_prop=displaced/total_hh) %>% # calculate proportion of each census tract
  pivot_wider(names_from=survey_year, values_from= c(total_hh, displaced, disp_prop),
                names_vary='slowest') %>% 
  mutate(geoid20=as.character(prev_home_tract20)) # for easier join

# check - before the pivot_wider
# length(unique(prev_home_tract20$prev_home_tract20)) #650 tracts
# sum(prev_home_tract20$total_hh) #2067
# sum(prev_home_tract20$displaced) #579 displaced
# summary(prev_home_tract20$disp_prop)

# join to spatial layer
# displacement risk dataset -----
tracts20.url <- file.path(arc_service, "Census_Tracts_2020/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson")
tracts20.lyr <- st_read(tracts20.url)

# join displacement risk to crosswalk
prevhome_tract20 <- tracts20.lyr %>% 
  left_join(prev_home_tract20, by="geoid20")
```

```{r, include=F, eval=F}
# set map extent
map.lat<- 47.615
map.lon<- -122.257
map.zoom<- 8

# set up palettes
psrc_purple_plus<-c("#FFFFFF", "#FFFFFF", "#F6CEFC", psrc_colors$purples_inc)
psrc_blue<-psrc_colors$blues_inc

psrc_pal19 <- leaflet::colorNumeric(palette = psrc_blue,
                                      domain = c(min(prevhome_tract20$disp_prop_2019,na.rm = TRUE),1, NA)) # this is the value field
psrc_pal21 <- leaflet::colorNumeric(palette = psrc_blue,
                                      domain = c(min(prevhome_tract20$disp_prop_2021,na.rm = TRUE),1, NA)) # this is the value field

label_19 <- sprintf(
  "Census tract: <em>%s</em><br/><body>%s</body><br/><body>%s</body><br/><body>%s</body><br/><body>%s</bodyD>", prevhome_tract20$geoid20, # the code in <> makes the geoid value italic 
  paste("Surveyed households: ", prevhome_tract20$total_hh_2019),
  paste("Displaced households: ", prevhome_tract20$displaced_2019),
  paste("Share of surveyed and displaced: ", prevhome_tract20$disp_prop_2019),
  paste("(",prevhome_tract20$county_name," County)")) %>% 
  lapply(htmltools::HTML)

label_21 <- sprintf(
  "Census tract: <em>%s</em><br/><body>%s</body><br/><body>%s</body><br/><body>%s</body><br/><body>%s</bodyD>", prevhome_tract20$geoid20, # the code in <> makes the geoid value italic 
  paste("Surveyed households: ", prevhome_tract20$total_hh_2021),
  paste("Displaced households: ", prevhome_tract20$displaced_2021),
  paste("Share of surveyed and displaced: ", prevhome_tract20$disp_prop_2021),
  paste("(",prevhome_tract20$county_name," County)")) %>% 
  lapply(htmltools::HTML)


# label_tract <- stringr::str_c(
#   "Tract: ", as.character(prevhome_tract20$geoid20))
# label_popdens <- stringr::str_c(
#   "Pop. Density (per sqmile): ", formatC(prevhome_tract20$pop_den_sqmi, 
#                                   big.mark = ",", 
#                                   format = "d"))

# map settings
displacement_map <- leaflet() %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  addLayersControl(#baseGroups = "Census Tracts",
    overlayGroups = c("Displaced (2021)",
                      "Displaced (2019)"),
    options = layersControlOptions(collapsed = TRUE)) %>%
  
  # polygon layers 
  addPolygons(data=prevhome_tract20,
              fillColor = psrc_pal19(prevhome_tract20$disp_prop_2019),
              stroke=FALSE, 
              smoothFactor = 0.2,
              fillOpacity = 1.0,
              group = "Displaced (2019)",
              label = label_19) %>%
  addPolygons(data=prevhome_tract20,
              fillColor = psrc_pal21(prevhome_tract20$disp_prop_2021),
              stroke=FALSE, 
              smoothFactor = 0.2,
              fillOpacity = 1.0,
              group = "Displaced (2021)",
              label = label_21) %>% 

  # legends
  leaflet::addLegend(pal = psrc_pal19,
                     values = prevhome_tract20$disp_prop_2019,
                     position = "bottomleft",
                     title = "Displaced (2019)",
                     group="Displaced (2019)",
                     opacity = 0.8) %>% 
  leaflet::addLegend(pal = psrc_pal21,
                     values = prevhome_tract20$disp_prop_2021,
                     position = "bottomleft",
                     title = "Displaced (2021)",
                     group="Displaced (2021)",
                     opacity = 0.8) %>%
 
  add search feature
  addControl("<P>Search for tracts<br/>by geoid.</P>",
             position = "topleft") %>%
  addSearchFeatures(
    targetGroups = "Census Tracts",
    options = searchFeaturesOptions(
      zoom = 10, position = "topleft", openPopup = TRUE,
      firstTipSubmit = TRUE, moveToLocation = TRUE
      )) %>%
  
  #set view extent
  leaflet::setView(lng=map.lon, lat=map.lat, zoom=map.zoom) %>% 
  addEasyButton(easyButton(
    icon="fa-globe", title="Region",
    onClick=JS("function(btn, map){map.setView([47.615,-122.257],8); }")))

# fix the legend NA placement
css_fix <- "div.info.legend.leaflet-control br {clear: both;}" # CSS to correct spacing
html_fix <- htmltools::tags$style(type = "text/css", css_fix)  # Convert CSS to HTML
displacement_map %<>% htmlwidgets::prependContent(html_fix)                   # Insert into leaflet HTML code


# print map
displacement_map
```

###### Displacement Risk proportion
```{r}
# calculate 3 sets of proportions based on prev_risk_level/prev_risk_level_name
variable_list<-add_variable(variable_list, 'sample','hh')
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)


basics <- prev_home_loc %>% 
  select(hh_id, hh_weight, survey_year, prev_home_tract20, movers, displaced, prev_risk_level, prev_risk_level_name) %>% 
  mutate(sample=prev_risk_level_name)

# check
# table(basics$sample)
# lower <- basics %>% 
#   filter(sample=="lower") %>% 
#   mutate(rough_cal=(sum(hh_weight)))

data <- list(hh=basics)

# Calculate a categorical summary, i.e. count/share - all movers combined years
# summary = summarize_weighted(hts_data= data,
#                              summarize_var = 'sample',
#                              # summarize_by = c('survey_year'),
#                              id_cols='hh_id',
#                              wt_cols='hh_weight',
#                              wtname='hh_weight')
# 
# wtd_sum_all<-summary$summary$wtd %>%
#   mutate(prop_moe=z_score*prop_se,
#          est_moe=z_score*est_se) %>% 
#   dplyr::select(-c(prop_se, est_se)) %>% 
#   mutate(movers="moved")
# 
# movedcomb_risklevel <- wtd_sum_all %>% 
#   pivot_wider(names_from=c(movers), values_from = c(count, est, est_moe, prop, prop_moe),
#               names_vary='slowest')

test_movers <- stats_context() %>% 
  arrange(factor(sample, levels = c('lower', 'moderate', 'higher')))
test_disp <- stats_context_group(add_group = "displaced") %>% 
  arrange(factor(sample, levels = c('lower', 'moderate', 'higher')))
test_justdisp <- stats_context_group(add_group = "displaced") %>% 
  arrange(factor(sample, levels = c('lower', 'moderate', 'higher'))) %>% 
  select(-contains("Not displaced"))

# Calculate a categorical summary, i.e. count/share - all movers by year
# summary = summarize_weighted(hts_data= data,
#                              summarize_var = 'sample',
#                              summarize_by = c('survey_year'),
#                              id_cols='hh_id',
#                              wt_cols='hh_weight',
#                              wtname='hh_weight')
# 
# wtd_sum_all<-summary$summary$wtd %>%
#   mutate(prop_moe=z_score*prop_se,
#          est_moe=z_score*est_se) %>% 
#   dplyr::select(-c(prop_se, est_se)) %>% 
#   mutate(movers="moved")
# 
# movedyr_risklevel <- wtd_sum_all %>% 
#   pivot_wider(names_from=c(survey_year,movers), values_from = c(count, est, est_moe, prop, prop_moe),
#               names_vary='slowest')
  
# Calculate a categorical summary, i.e. count/share - displaced and movers by year
# summary = summarize_weighted(hts_data= data,
#                              summarize_var = 'sample',
#                              summarize_by = c('survey_year', 
#                                               # 'movers', 
#                                               'displaced'),
#                              id_cols='hh_id',
#                              wt_cols='hh_weight',
#                              wtname='hh_weight')
# 
# wtd_sum_all<-summary$summary$wtd %>%
#   mutate(prop_moe=z_score*prop_se,
#          est_moe=z_score*est_se) %>% 
#   dplyr::select(-c(prop_se, est_se)) %>% 
#   filter(displaced=="Displaced")
# 
# displacedyr_risklevel <- wtd_sum_all %>% 
#   pivot_wider(names_from=c(survey_year,displaced), values_from = c(count, est, est_moe, prop, prop_moe),
#               names_vary='slowest')
# 
# # join based on displacement risk level
# displacement_risk_level <- moved_risklevel %>%
#   left_join(displaced_risklevel, by="sample")%>%
#   arrange(factor(sample, levels = c('lower', 'moderate', 'higher')))

# print to workbook (line 735)
output_xlsx <- function(sheet_name, sheet_data){
  addWorksheet(wb, sheet_name)
  writeData(wb, sheet_name, sheet_data, colNames=T)
}

output_xlsx(sheet_name = "all_movers",
            sheet_data = test_movers)
output_xlsx(sheet_name = "displaced_movers",
            sheet_data = test_disp)
output_xlsx(sheet_name = "just_displaced",
            sheet_data = test_justdisp)
# 
# addWorksheet(wb, "all movers")
# addWorksheet(wb, "displaced")
# writeData(wb, "all movers", test_movers)
# writeData(wb, "displaced", test_disp)
# writeData(wb, "displaced", test_disp)
saveWorkbook(wb,
             file.path(loc, "HTS_Displacement_Context_county - Copy.xlsx"),
             overwrite = TRUE)
# addWorksheet(wb, "displacement risk detail")
# writeData(wb, "displacement risk detail", displacement_risk_level)
# saveWorkbook(wb, 
#              file.path(loc, "HTS_Displacement_Context_county.xlsx"),
#              overwrite = TRUE)

# ----------------
# check
# table(basics$sample)
# table(basics$survey_year, basics$displaced)

basics <- prev_home_loc %>% 
  select(hh_id, hh_weight, survey_year, prev_home_tract20, movers, displaced, prev_risk_level, prev_risk_level_name) %>% 
  mutate(sample=prev_risk_level_name)

data <- list(hh=basics)

# calling function from above (line 204)
displaced <- stats_context() %>% 
  arrange(factor(sample, levels = c('lower', 'moderate', 'higher')))

# print to workbook (line 735)
addWorksheet(wb, "displacement risk")
writeData(wb, "displacement risk", displaced)
saveWorkbook(wb, 
             file.path(loc, "HTS_Displacement_Context_county.xlsx"),
             # file.path(loc, "HTS_Displacement_Context_county - Copy.xlsx"),
             overwrite = TRUE)

# check workbook
# length(names(wb))
# names(wb)
```

##### Correlation

Only testing current home location

```{r}
test_home_loc_simp <- home_loc_simp %>% 
  select(poc_pct, poverty_pct, renter_pct, sev_cost_burdened_pct, disp_num)

# check to make sure all variables are numeric for correlation
sapply(test_home_loc_simp, is.numeric)

hh_correlation <- subset(test_home_loc_simp)
Disp_GKmatrix <- GKtauDataframe(hh_correlation)
plot(Disp_GKmatrix)

# point biserial correlation
# https://www.statology.org/point-biserial-correlation-r/
cor.test(test_home_loc_simp$disp_num, test_home_loc_simp$poc_pct)

# https://stackoverflow.com/questions/77629667/point-biserial-correlation-across-multiple-variables-in-r 
# Test for normality with shapiro wilk test and qq plot: 
# long format
df_long <- test_home_loc_simp %>% 
  pivot_longer(-disp_num, names_to = "variable", values_to = "value")

# Perform Shapiro-Wilk test
test_results <- df_long %>% 
  group_by(variable) %>% 
  summarize(
    shapiro_p = shapiro.test(value)$p.value,
    .groups = 'drop'
  ) %>%
  mutate(across(starts_with("shapiro_p"), ~paste("SW:", round(., 3))))

# Merge test results with the long data
df_long <- left_join(df_long, test_results, by = "variable")

# Create QQ plot with test results
p <- ggplot(df_long, aes(sample = value)) +
  geom_qq() +
  geom_qq_line() +
  facet_wrap(~variable) +
  geom_text(aes(label = paste(shapiro_p), y = Inf, x = Inf), 
            hjust = 1.1, vjust = 2, size = 6, check_overlap = TRUE)+
  theme_minimal()
p

# Do the point biserial correlation:
#create a function 
point_biserial_cor <- function(binary_var, continuous_var) {
  cor.test(binary_var, continuous_var, method = "pearson")$estimate
}

# Identify binary and continuous variables
binary_var <- "disp_num"
continuous_vars <- setdiff(names(test_home_loc_simp[,!"displaced"]), binary_var)

# Do the correlation matrix
cor_matrix <- matrix(NA, nrow = length(continuous_vars), ncol = 1, dimnames = list(continuous_vars, binary_var))

# Calculate correlations
for (var in continuous_vars) {
  cor_matrix[var, binary_var] <- point_biserial_cor(test_home_loc_simp[[binary_var]],
                                                    test_home_loc_simp[[var]])
}

# View the correlation matrix
print(cor_matrix)
```

<!-- https://www.statisticshowto.com/point-biserial-correlation/ -->

Like other correlation coefficients, the point biserial ranges from 0 to 1, where 0 is no relationship and 1 is a perfect relationship. Based on the point biserial correlation matrix, displacement is most correlated with current home location's renter and poverty percentages; however, the correlation coefficients are still low (0.088 and 0.072, respectively). Percent of severely cost burdened and percent of people of color were even lower - 0.06 and 0.057, respectively.

#### Exploring other variables

##### Temp lifecycle variables (HTS)

Draft logic for creating lifecycle variable - interested in single persons, single-parent households, all household members over 65, all household member under 30

```{r}
# hts_data$person

table(hts_data$person$age) #get all possible age ranges

# recategorize/simplify age categories
categorization <- hts_data$person %>% 
  mutate(age_group= case_when(age=="Under 5 years old" |
                                age=="5-11 years"|
                                age=="12-15 years"|
                                age=="16-17 years" ~ "Child",
                              age=="18-24 years" |
                                age=="25-34 years" ~ "Adult under 35",
                              age=="65-74 years" |
                                age=="75-84 years" |
                                age=="85 years or older" ~ "Adult over 65",
                              TRUE~"Adult 35-64")) %>% 
  select(hh_id, person_id, age, age_group)

# add household size and simplified age categories to person table
lifecycle_prep <- hts_data$person %>% 
  group_by(hh_id) %>% 
  summarize(hh_sz=n_distinct(person_id), .groups = 'drop') %>% 
  right_join(categorization, by="hh_id")

# first pass at lifecycle
lifecycle_groups <- lifecycle_prep %>% 
  group_by(hh_id,hh_sz) %>% 
  reframe(lifecycle_draft = case_when(hh_sz==1~"Single-person hh",
                                      hh_sz>=2 & any(age_group=="Child") ~ "Family with child",
                                      hh_sz>=2 & all(age_group=="Adult under 35") ~ "All under 35 hh",
                                      hh_sz>=2 & all(age_group=="Adult over 65") ~ "All over 65 hh",
                                      hh_sz>=2 & any(age_group=="Adult over 65") ~ "At least one older adult",
                                      TRUE ~ "Other hh")) %>% 
  select(hh_id, lifecycle_draft) %>% 
  distinct(hh_id, .keep_all=TRUE) %>% 
  left_join(lifecycle_prep, by="hh_id")

table(lifecycle_groups$lifecycle_draft)

# identify single/multiple-parent households within the 'family with child' category
family <- lifecycle_groups %>% 
  filter(lifecycle_draft=="Family with child") %>% 
  group_by(hh_id) %>% 
  mutate(num_adults=sum(grepl("Adult", age_group))) %>% 
  mutate(family_parent= case_when(num_adults==1 ~ "Single-parent hh",
                                  num_adults>1 ~ "Multiple-parent hh")) %>% 
  dplyr::select(hh_id, family_parent) %>% 
  distinct(hh_id, .keep_all = TRUE)
  
# join general lifecycle with parent-type hh
lifecycle_data <- lifecycle_groups %>% 
  left_join(family, by="hh_id") %>% 
  mutate(lifecycle_final=case_when(lifecycle_draft=="Family with child" ~ family_parent,
                                   TRUE~lifecycle_draft)) %>% 
  dplyr::select(hh_id, lifecycle_draft, lifecycle_final) %>% 
  distinct()
                       
# join to hts_data$hh
hts_data$hh <- hts_data$hh %>% 
  left_join(lifecycle_data, by="hh_id")

table(hts_data$hh$lifecycle_final)
prop.table(table(hts_data$hh$lifecycle_final, hts_data$hh$displaced))
ctable(x = hts_data$hh$lifecycle_final, 
       y = hts_data$hh$displaced, 
       prop = "r")   # Show row proportions
```

###### More detailed family structures

```{r}
# find correct variable to adjust
unique(lifecycle_data$lifecycle_draft)
unique(lifecycle_data$lifecycle_final)

hts_data$hh <- hts_data$hh %>% 
  mutate(
    #Single adult with child vs everyone
    single_parent= case_when(lifecycle_final=="Single-parent hh"~ "Single-parent hh",
                             TRUE~"Not single-parent hh"),
    #Families with children vs no children
    children= case_when(lifecycle_draft=="Family with child"~"Family with child",
                        TRUE~"Family without child"),
    # all adults over 65 
    all_older_adults= case_when(lifecycle_final=="All over 65 hh"~ "All over 65 hh",
                            TRUE~"Not all over 65 hh"),
    # any adult over 65
    any_older_adults= case_when(lifecycle_final=="At least one older adult"~ "At least one older adult",
                                TRUE~"No older adults"),
    # all adults younger 35
    all_young_adults= case_when(lifecycle_final=="All under 35 hh"~ "All under 35 hh",
                                TRUE~"Not all under 35 hh")
    # workers, workers and lifecycle, jobs
    )

```

##### Income diversity (ACS)

A ratio of households making over 200K compared to ratio like 50K

```{r}
# getting data by tract - number of households in each income category
base_acs_data <- get_acs_recs(geography ='tract', 
                              table.names = 'S1901', #subject table code
                              years = 2022,
                              acs.type = 'acs5')

income <- base_acs_data %>% 
  filter(variable == "S1901_C01_002"| #less than 10k
           variable == "S1901_C01_003"| #10-15k
           variable == "S1901_C01_004"| #15-25k
           variable =="S1901_C01_005"| #25k-35k
           variable =="S1901_C01_006"| #35-50k
           variable =="S1901_C01_011") %>% #200k+
  mutate(var_simp= case_when(variable =="S1901_C01_011"~"inc_$200k+",
                             TRUE~"inc_<$50k"))

#check reliability
table(income$reliability)  

income_comb <- income %>%
  group_by(GEOID, var_simp) %>% 
  summarize(total_estimate=sum(estimate, na.rm=TRUE), .groups = 'drop') %>% 
  pivot_wider(names_from = var_simp, 
              values_from = total_estimate) %>% 
  mutate(ratio_200_50=`inc_$200k+`/`inc_<$50k`) #higher the ratio, more above $200k


# how diverse within the tract, but also how diverse relative to the region
```

Share of hhs making low middle incomes (something like 50K-100K)

```{r}
income_lowmid <- base_acs_data %>% 
  filter(variable == "S1901_C01_007"| #50-75k
           variable == "S1901_C01_008") #75-100k

#check reliability
table(income_lowmid$reliability)  

income_lowmid_comb <- income_lowmid %>%
  group_by(GEOID) %>% 
  summarize(total_estimate=sum(estimate, na.rm=TRUE), .groups = 'drop') %>% 
  rename(inc_50_100k=total_estimate) 
```

Join two income variables

```{r}
income_comb
income_lowmid_comb

income_vars <- income_comb %>% 
  left_join(income_lowmid_comb, by="GEOID")
```

Join income variables (by tract) to household ids based on previous home location (2019 and 2021)

```{r}
hts_data$hh <- hts_data$hh %>%
  mutate(prev_geoid20=as.character(prev_home_tract20)) %>% 
  left_join(income_vars, by=join_by("prev_geoid20"=="GEOID")) 
```

##### Potential Next Analysis

Based on the current address what is the rent compared to the median rent for a defined geography? To see if the data can answer a statement like: we found people who identify as being displaced move to an area with rent % below the defined geography median rent.

If possible, I am wondering if over time that percentage has changed. For example in 2017 it was 90% of median rent and in 2023 it was 75% or something like that. Or if it has stayed consistent.

### Modeling background

#### 1. Decide on variables of interest

```{r}
# dataset with hts variables and displacement risk variables (related to current home tract)
hh_df <- hts_data$hh %>%
  mutate(geoid20=as.character(home_tract20)) %>% 
  left_join(location_data, by="hh_id")

nrow(hh_df) #3343
table(hh_df$survey_year)
```

For the binomial model, we are interested in whether people are displaced or not. This requires a more refined dataset - only the households who have moved in the past 5 years. Earlier in the code, the households were filtered based on move status (\~line 230) and those who moved from within the state (\~line 280). In addition, it only applies to 2019-2023 survey data because the reasons for moving question was not asked of survey respondents in 2017. c

```{r}
# get column names for fields that are numeric
print(select_if(hh_df, is.numeric))
hh_df <- hh_df %>% 
  mutate(disp_binary = case_when(displaced=="Not displaced"~0,
                                 displaced=="Displaced"~1),
         disp3_binary=case_when(prev_res_factors_forced=='Selected'|
                                  prev_res_factors_income_change=='Selected'|
                                  prev_res_factors_housing_cost =='Selected' ~ 1,
                                TRUE~0),
         disp_forced=case_when(prev_res_factors_forced=='Selected'~1,
                               TRUE~0),
         disp_inc_change=case_when(prev_res_factors_income_change=='Selected'~1,
                                   TRUE~0),
         disp_housing_cost=case_when(prev_res_factors_housing_cost =='Selected'~1,
                                     TRUE~0),
         disp_community=case_when(prev_res_factors_community_change=='Selected'~ 1,
                                  TRUE~0))
# metadata for displacement risk data: https://www.arcgis.com/sharing/rest/content/items/a517de2494274f9cb2b047a9c2e7873f/info/metadata/metadata.xml?format=default&output=html

# risk_score: Composite index risk score (number between 0 and 60)
# poc_pct: Population of People of Color (percent)
# linguistic_pct: Population 5 years and over who do not speak English very well (percent)
# education_pct: Population 25 years and over without bachelors degree (percent)
# renter_pct: Renter households (percent)
# cost_burdened_pct: Cost burdened households (percent)
# rent_ratio_weight: Median Gross Rent weight used to aggregate across all room sizes
# sev_cost_burdened_pct: Severely cost burdened households (percent)
# poverty_pct: Population below 200% of poverty level (percent)
# park: Weighted average distance to park (mile)
# transit_now_pct: Population within quarter-mile of existing High Capacity Transit (percent)
# dev_potential_pct: Existing housing units potentially demolished for new development (percent)
# median rent (comared to average?) - housing cost

# get column names for fields that are categorical
print(select_if(hh_df, is.character))

# change variables to factor
table(hh_df$lifecycle_final, hh_df$survey_year) #to view the different levels for each field

hh_df$f1hh_race_category <- relevel(as.factor(hh_df$hh_race_category), ref = "White non-Hispanic")
hh_df$f1hh_race_category_4 <- relevel(as.factor(hh_df$hh_race_category_4), ref = "White non-Hispanic")
hh_df$f1hhincome_bin5 <- relevel(as.factor(hh_df$hhincome_bin5), ref = "$100,000 or more")
hh_df$f1prev_res_type_simp <- relevel(as.factor(hh_df$prev_res_type_simp), ref = "Single-family")
hh_df$f1prev_rent_own_bin2 <- relevel(as.factor(hh_df$prev_rent_own_bin2), ref = "Owned/paid mortgage")
# hh_df$f1adult_workers <- relevel(as.factor(hh_df$adult_workers), ref = "All workers")
hh_df$f1res_type_transition <- relevel(as.factor(hh_df$res_type_transition), ref = "No change")
# hh_df$f1prev_RGC <- relevel(as.factor(hh_df$prev_RGC), ref = "Not RGC") #prev location not available for 2023 data
hh_df$f1_RGC <- relevel(as.factor(hh_df$RGC), ref = "Not RGC")
hh_df$f1lifecycle_draft <- relevel(as.factor(hh_df$lifecycle_draft), ref = "Single-person hh") #slightly higher occurrence of displacement based on count
hh_df$f1lifecycle_final <- relevel(as.factor(hh_df$lifecycle_final), ref = "Single-person hh") #slightly higher occurrence of displacement based on count
hh_df$f1covid_moving <- relevel(as.factor(hh_df$covid_moving), ref = "before")
hh_df$f1moratorium <- relevel(as.factor(hh_df$moratorium), ref = "before")
hh_df$f1moratorium_binary <- relevel(as.factor(hh_df$moratorium_binary), ref = "not during")
# hh_df$f1veh_drivers<- as.factor(hh_df$veh_drivers)


# view data
str(hh_df)
```

#### 2. Null Model - Displacement (4 reasons)

```{r}
# null model
disp.null<-glm(disp_binary~1,family=binomial(link="logit"), data=hh_df)
summary(disp.null) #intercept value - same log odds for everyone to predict
coef(disp.null) #log odds (coefficients)
exp(coef(disp.null)) #odds ratio of displacement: 0.38 to 1
exp(coef(disp.null))/(1+(exp(coef(disp.null)))) #probability of being displaced: 0.27
mean(hh_df$disp_binary) #0.27
```

#### 3. Bivariate analysis - Displacement (4 reasons)

##### Displacement Risk factors - current tract

2019, 2021, 2023 survey data \###### POC Population of People of Color (percent)

```{r}
summary(hh_df$poc_pct)

pocpct.biv<-glm(disp_binary~1 + poc_pct, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(pocpct.biv)
coef(pocpct.biv) #log odds (coefficients)
exp(coef(pocpct.biv)) #odds ratio of displacement
```

-   Each percent increase in POC is associated with a (1.01 - 1 = 0.01) 1% increase in the odds of being displaced

###### Limited English proficiency

Population 5 years and over who do not speak English very well (percent)

```{r}
summary(hh_df$linguistic_pct)

leppct.biv<-glm(disp_binary~1 + linguistic_pct, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(leppct.biv)
coef(leppct.biv) #log odds (coefficients)
exp(coef(leppct.biv)) #odds ratio of displacement
```

-   Each percent increase in LEP is associated with a (1.01 - 1 = 0.01) 1% increase in the odds of being displaced

###### Education

Population 25 years and over without bachelors degree (percent)

```{r}
summary(hh_df$education_pct)

edu.biv<-glm(disp_binary~1 + education_pct, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(edu.biv)
coef(edu.biv) #log odds (coefficients)
exp(coef(edu.biv)) #odds ratio of displacement
```

-   Each percent increase in education is associated with a (1.00 - 1 = 0) 0% increase in the odds of being displaced

###### Renters

Renter households (percent)

```{r}
summary(hh_df$renter_pct)

rent.biv<-glm(disp_binary~1 + renter_pct, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(rent.biv)
coef(rent.biv) #log odds (coefficients)
exp(coef(rent.biv)) #odds ratio of displacement
```

-   Each percent increase in renter households is associated with a (1.01 - 1 = 0.01) 1% increase in the odds of being displaced

###### Cost-burdened

Cost burdened households (percent)

```{r}
summary(hh_df$cost_burdened_pct)

costburdened.biv<-glm(disp_binary~1 + cost_burdened_pct, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(costburdened.biv)
coef(costburdened.biv) #log odds (coefficients)
exp(coef(costburdened.biv)) #odds ratio of displacement
```

-   Each percent increase in cost-burdened households is associated with a (1.02 - 1 = 0.02) 2% increase in the odds of being displaced

###### Severely cost-burdened

Severely cost burdened households (percent)

```{r}
summary(hh_df$sev_cost_burdened_pct)

sevcostburdened.biv<-glm(disp_binary~1 + sev_cost_burdened_pct, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(sevcostburdened.biv)
coef(sevcostburdened.biv) #log odds (coefficients)
exp(coef(sevcostburdened.biv)) #odds ratio of displacement
```

-   Each percent increase in severely cost-burdened households is associated with a (1.02 - 1 = 0.02) 2% increase in the odds of being displaced

###### Rent:room ratio

Median Gross Rent weight used to aggregate across all room sizes

```{r}
summary(hh_df$rent_ratio_weight)

rentratio.biv<-glm(disp_binary~1 + rent_ratio_weight, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(rentratio.biv)
coef(rentratio.biv) #log odds (coefficients)
exp(coef(rentratio.biv)) #odds ratio of displacement
```

-   Each increase in the rent-room ratio is associated with a (0.48 - 1 = - 0.52) 52% decrease in the odds of being displaced

###### Poverty

Population below 200% of poverty level (percent)

```{r}
summary(hh_df$poverty_pct)

pov.biv<-glm(disp_binary~1 + poverty_pct, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(pov.biv)
coef(pov.biv) #log odds (coefficients)
exp(coef(pov.biv)) #odds ratio of displacement
```

-   Each percent increase in poverty is associated with a (1.01 - 1 = 0.01) 1% decrease in the odds of being displaced

###### Park access

Weighted average distance to park (mile)

```{r}
summary(hh_df$park)

park.biv<-glm(disp_binary~1 + park, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(park.biv)
coef(park.biv) #log odds (coefficients)
exp(coef(park.biv)) #odds ratio of displacement
```

-   Each mile increase in distance to a park is associated with a (0.81 - 1 = -0.19) 19% decrease in the odds of being displaced

###### Transit access (now)

Population within quarter-mile of existing High Capacity Transit (percent)

```{r}
summary(hh_df$transit_now_pct)

hct.biv<-glm(disp_binary~1 + transit_now_pct, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(hct.biv)
coef(hct.biv) #log odds (coefficients)
exp(coef(hct.biv)) #odds ratio of displacement
```

-   Each percent increase in the population within 1/4 mile to existing HCT is associated with a (1.00 - 1 = 0) 0% increase in the odds of being displaced

###### Development potential

Existing housing units potentially demolished for new development (percent)

```{r}
summary(hh_df$dev_potential_pct)

devpot.biv<-glm(disp_binary~1 + dev_potential_pct, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(devpot.biv)
coef(devpot.biv) #log odds (coefficients)
exp(coef(devpot.biv)) #odds ratio of displacement
```

-   Each percent increase in development potential is associated with a (1.01 - 1 = 0.01) 1% increase in the odds of being displaced

##### Displacement Risk factors - previous tract

2019 and 2021 survey data, 2023 survey missing previous home locations - 1,392 NA records (out of 3,459 - 1,305 records in 2019 and 762 in 2021) \###### POC Population of People of Color (percent)

```{r}
summary(hh_df$prev_poc_pct)

prev_pocpct.biv<-glm(disp_binary~1 + prev_poc_pct, 
                     family = binomial(link = "logit"), 
                     data = hh_df)
summary(prev_pocpct.biv)
coef(prev_pocpct.biv) #log odds (coefficients)
exp(coef(prev_pocpct.biv)) #odds ratio of displacement
```

-   Each percent increase in POC is associated with a (1.01 - 1 = 0.01) 1% increase in the odds of being displaced

###### Limited English proficiency

Population 5 years and over who do not speak English very well (percent)

```{r}
summary(hh_df$prev_linguistic_pct)

prev_leppct.biv<-glm(disp_binary~1 + prev_linguistic_pct, 
                     family = binomial(link = "logit"), 
                     data = hh_df)
summary(prev_leppct.biv)
coef(prev_leppct.biv) #log odds (coefficients)
exp(coef(prev_leppct.biv)) #odds ratio of displacement
```

-   Each percent increase in LEP is associated with a (1.01 - 1 = 0.01) 1% increase in the odds of being displaced

###### Education

Population 25 years and over without bachelors degree (percent)

```{r}
summary(hh_df$prev_education_pct)

prev_edu.biv<-glm(disp_binary~1 + prev_education_pct, 
                  family = binomial(link = "logit"), 
                  data = hh_df)
summary(prev_edu.biv)
coef(prev_edu.biv) #log odds (coefficients)
exp(coef(prev_edu.biv)) #odds ratio of displacement
```

-   Each percent increase in education is associated with a (1.00 - 1 = 0) 0% increase in the odds of being displaced

###### Renters

Renter households (percent)

```{r}
summary(hh_df$prev_renter_pct)

prev_rent.biv<-glm(disp_binary~1 + prev_renter_pct, 
                   family = binomial(link = "logit"), 
                   data = hh_df)
summary(prev_rent.biv)
coef(prev_rent.biv) #log odds (coefficients)
exp(coef(prev_rent.biv)) #odds ratio of displacement
```

-   Each percent increase in renter households is associated with a (1.01 - 1 = 0.01) 1% increase in the odds of being displaced

###### Cost-burdened

Cost burdened households (percent)

```{r}
summary(hh_df$prev_cost_burdened_pct)

prev_costburdened.biv<-glm(disp_binary~1 + prev_cost_burdened_pct, 
                           family = binomial(link = "logit"), 
                           data = hh_df)
summary(prev_costburdened.biv)
coef(prev_costburdened.biv) #log odds (coefficients)
exp(coef(prev_costburdened.biv)) #odds ratio of displacement
```

-   Each percent increase in cost-burdened households is associated with a (1.02 - 1 = 0.02) 2% increase in the odds of being displaced

###### Severely cost-burdened

Severely cost burdened households (percent)

```{r}
summary(hh_df$prev_sev_cost_burdened_pct)

prev_sevcostburdened.biv<-glm(disp_binary~1 + prev_sev_cost_burdened_pct, 
                              family = binomial(link = "logit"), 
                              data = hh_df)
summary(prev_sevcostburdened.biv)
coef(prev_sevcostburdened.biv) #log odds (coefficients)
exp(coef(prev_sevcostburdened.biv)) #odds ratio of displacement
```

-   Each percent increase in severely cost-burdened households is associated with a (1.02 - 1 = 0.02) 2% increase in the odds of being displaced

###### Rent:room ratio

Median Gross Rent weight used to aggregate across all room sizes

```{r}
summary(hh_df$prev_rent_ratio_weight)

prev_rentratio.biv<-glm(disp_binary~1 + prev_rent_ratio_weight, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(prev_rentratio.biv)
coef(prev_rentratio.biv) #log odds (coefficients)
exp(coef(prev_rentratio.biv)) #odds ratio of displacement
```

-   Each increase in the rent-room ratio is associated with a (0.31 - 1 = - 0.69) 69% decrease in the odds of being displaced (compared to 52% decrease for current tract)

###### Poverty

Population below 200% of poverty level (percent)

```{r}
summary(hh_df$prev_poverty_pct)

prev_pov.biv<-glm(disp_binary~1 + prev_poverty_pct, 
                  family = binomial(link = "logit"), 
                  data = hh_df)
summary(prev_pov.biv)
coef(prev_pov.biv) #log odds (coefficients)
exp(coef(prev_pov.biv)) #odds ratio of displacement
```

-   Each percent increase in poverty is associated with a (1.01 - 1 = 0.01) 1% decrease in the odds of being displaced

###### Park access

Weighted average distance to park (mile)

```{r}
summary(hh_df$prev_park)

prev_park.biv<-glm(disp_binary~1 + prev_park, 
                   family = binomial(link = "logit"), 
                   data = hh_df)
summary(prev_park.biv)
coef(prev_park.biv) #log odds (coefficients)
exp(coef(prev_park.biv)) #odds ratio of displacement
```

-   Each mile increase in distance to a park is associated with a (0.68 - 1 = -0.32) 32% decrease in the odds of being displaced (compared to 19% decrease for current tract)

###### Transit access (now)

Population within quarter-mile of existing High Capacity Transit (percent)

```{r}
summary(hh_df$prev_transit_now_pct)

prev_hct.biv<-glm(disp_binary~1 + prev_transit_now_pct, 
                  family = binomial(link = "logit"), 
                  data = hh_df)
summary(prev_hct.biv)
coef(prev_hct.biv) #log odds (coefficients)
exp(coef(prev_hct.biv)) #odds ratio of displacement
```

-   Each percent increase in the population within 1/4 mile to existing HCT is associated with a (1.00 - 1 = 0) 0% increase in the odds of being displaced

###### Development potential

Existing housing units potentially demolished for new development (percent)

```{r}
summary(hh_df$prev_dev_potential_pct)

prev_devpot.biv<-glm(disp_binary~1 + prev_dev_potential_pct, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(prev_devpot.biv)
coef(prev_devpot.biv) #log odds (coefficients)
exp(coef(prev_devpot.biv)) #odds ratio of displacement
```

-   Each percent increase in development potential is associated with a (1.01 - 1 = 0.01) 1% increase in the odds of being displaced

##### Household income (5 bins)

```{r}
table(hh_df$f1hhincome_bin5)

income.biv<-glm(disp_binary~1 + f1hhincome_bin5, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(income.biv)
coef(income.biv) #log odds (coefficients)
exp(coef(income.biv)) #odds ratio of displacement
```

-   Compared to households making \$100,000 or more, the odds of being displaced increase as income decreases
-   \$25,000 or less: ((2.94-1)\*100) = 194 percent change in the odds or a 194% increase in the odds of being displaced compared to households making \$100,000 or more, controlling for the other income categories in the model

##### Household race (4 categories)

AANHPI non-Hispanic, Hispanic, Missing/No response, Other POC non-Hispanic, White non-Hispanic

```{r}
table(hh_df$f1hh_race_category_4)

hhrace.biv<-glm(disp_binary~1 + f1hh_race_category_4, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(hhrace.biv)
coef(hhrace.biv) #log odds (coefficients)
exp(coef(hhrace.biv)) #odds ratio of displacement
```

-   Compared to white non-Hispanic households, the odds of being displaced decreases for AANHPI households and increases for other POC households
-   Other POC non-Hispanic households: ((1.54-1)\*100) = 54 percent change in the odds or a 54% increase in the odds of being displaced compared to white non-Hispanic households, controlling for the other income categories in the model

##### Previous housing tenure

```{r}
table(hh_df$f1prev_rent_own_bin2)

tenure.biv<-glm(disp_binary~1 + f1prev_rent_own_bin2, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(tenure.biv)
coef(tenure.biv) #log odds (coefficients)
exp(coef(tenure.biv)) #odds ratio of displacement
```

-   Compared to households that own their homes, the odds of being displaced increases for renter households by ((2.62-1)\*100=162) 162%, or a 162% increase in the odds of being displaced

##### Previous housing type

```{r}
table(hh_df$f1prev_res_type_simp)

housingtype.biv<-glm(disp_binary~1 + f1prev_res_type_simp, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(housingtype.biv)
coef(housingtype.biv) #log odds (coefficients)
exp(coef(housingtype.biv)) #odds ratio of displacement
```

-   Compared to households previously living in single-family homes, the odds of being displaced increases for households previously living in homes categorized as lower-density shared walls (Townhouse, Building with 3 or fewer apartments/condos) and higher-density shared walls (Building with 4 or more apartments/condos) - ((1.52-1)\*100=52) a 52% increase and ((1.58-1)\*100=58) 58% increase in the odds of being displaced, respectively.

##### Housing transition

```{r}
table(hh_df$f1res_type_transition)

transition.biv<-glm(disp_binary~1 + f1res_type_transition, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(transition.biv)
coef(transition.biv) #log odds (coefficients)
exp(coef(transition.biv)) #odds ratio of displacement
```

-   Compared to no change, the odds of being displaced decreases for households transitioning to less space and higher density ((0.98-1)\*100=-2) - a 2% decrease in the odds of being displaced
-   Compared to no change, the odds of being displaced decreases for households transitioning to more space and less density ((0.68-1)\*100=-32) - a 32% decrease in the odds of being displaced
-   This may be related to lifecycle

```{r}
# checking lifecycle of transitioning households
table(hh_df$res_type_transition)
ctable(hh_df$res_type_transition, hh_df$lifecycle_draft)
# ctable(hh_df$res_type_transition, hh_df$all_older_adults)
# ctable(hh_df$res_type_transition, hh_df$any_older_adults)
# ctable(hh_df$displaced, hh_df$lifecycle_draft)

# checking lifecycle of transitioning households who cited displacement
# filter to displaced hh
displaced <- hh_df %>% 
  filter(displaced=="Displaced")

ctable(displaced$res_type_transition, displaced$lifecycle_draft)
```

##### Current RGC

```{r}
table(hh_df$f1_RGC)

rgc.biv<-glm(disp_binary~1 + f1_RGC, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(rgc.biv)
coef(rgc.biv) #log odds (coefficients)
exp(coef(rgc.biv)) #odds ratio of displacement
```

-   Compared to households not currently living in the RGC, the odds of being displaced increases for households living in the RGC ((1.32-1)\*100=32).

##### COVID Moving

```{r}
table(hh_df$f1covid_moving)

covid.biv<-glm(disp_binary~1 + f1covid_moving, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(covid.biv)
coef(covid.biv) #log odds (coefficients)
exp(coef(covid.biv)) #odds ratio of displacement
```

-   Compared to households who moved before COVID, the odds of being displaced decreases for households moving after COVID ((0.98-1)\*100=-2).

##### COVID Moratorium

```{r}
table(hh_df$f1moratorium)

moratorium.biv<-glm(disp_binary~1 + f1moratorium, 
                    family = binomial(link = "logit"), 
                    data = hh_df)
summary(moratorium.biv)
coef(moratorium.biv) #log odds (coefficients)
exp(coef(moratorium.biv)) #odds ratio of displacement
```

-   Compared to households who moved before the COVID moratorium, the odds of being displaced decreases for households moving during the COVID moratorium ((0.90-1)\*100=-10) and is about the same for households moving after the moratorium.

##### COVID Moratorium

```{r}
table(hh_df$f1moratorium_binary)

moratorium.binary.biv<-glm(disp_binary~1 + f1moratorium_binary, 
                           family = binomial(link = "logit"), 
                           data = hh_df)
summary(moratorium.binary.biv)
coef(moratorium.binary.biv) #log odds (coefficients)
exp(coef(moratorium.binary.biv)) #odds ratio of displacement
```

-   Compared to households who moved NOT during the COVID moratorium, the odds of being displaced decreases for households moving during the COVID moratorium ((0.90-1)\*100=-10).

##### Lifecycle

###### Lifecycle draft

Single-person hh, all over 65 hh, all under 35 hh, at least one older adult, family with child, other hh

```{r}
table(hh_df$f1lifecycle_draft)

lifedraft.biv<-glm(disp_binary~1 + f1lifecycle_draft, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(lifedraft.biv)
coef(lifedraft.biv) #log odds (coefficients)
exp(coef(lifedraft.biv)) #odds ratio of displacement
```

-   Compared to single-person households, the risk of being displaced decreases for all other household types, except for those with at least one older adult ((1.04-1)\*100=4) - a 4% increase in the odds of being displaced. For families with child(ren), there is a 35% decrease in the odds of being displaced ((0.65-1)\*100=-35). For households with all members under 35 or over 65, there is a 43% and 44% decrease in the odds of being displaced, respectively ((0.57-1)\*100=-43; (0.56-1)\*100=-44).

###### Lifecycle 'final'

same as above, but family with child split into two groups: multiple-parent hh and single-parent hh

```{r}
table(hh_df$f1lifecycle_final)

lifefinal.biv<-glm(disp_binary~1 + f1lifecycle_final, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(lifefinal.biv)
coef(lifefinal.biv) #log odds (coefficients)
exp(coef(lifefinal.biv)) #odds ratio of displacement
```

-   Compared to single-person households, single parent households are less likely to be displaced ((0.91-1)\*100=-9), but more likely to be displaced than multiple-parent households ((0.62-1)\*100=-38) - a 9% and 38% decrease in the odds of being displaced, respectively.

###### Single parent vs not

```{r}
table(hh_df$single_parent)

singleparent.biv<-glm(disp_binary~1 + single_parent, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(singleparent.biv)
coef(singleparent.biv) #log odds (coefficients)
exp(coef(singleparent.biv)) #odds ratio of displacement
```

-   Compared to multiple-parent households, single parent households are more likely to be displaced ((1.15-1)\*100=15 - a 15% increase in the odds of being displaced.

###### Families with children vs no children

```{r}
table(hh_df$children)

child.biv<-glm(disp_binary~1 + children, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(child.biv)
coef(child.biv) #log odds (coefficients)
exp(coef(child.biv)) #odds ratio of displacement
```

-   Compared to households with child(ren), households without child(ren) are more likely to be displaced ((1.26-1)\*100=26 - a 26% increase in the odds of being displaced.

###### All adults over 65

Not including households with child(ren)

```{r}
table(hh_df$all_older_adults)

older.biv<-glm(disp_binary~1 + all_older_adults, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(older.biv)
coef(older.biv) #log odds (coefficients)
exp(coef(older.biv)) #odds ratio of displacement
```

-   Compared to households with all members over 65y, households where members are not all over 65y are more likely to be displaced ((1.43-1)\*100=43 - a 43% increase in the odds of being displaced.

###### Any adults over 65

Not including households with child(ren)

```{r}
table(hh_df$any_older_adults)

anyolder.biv<-glm(disp_binary~1 + any_older_adults, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(anyolder.biv)
coef(anyolder.biv) #log odds (coefficients)
exp(coef(anyolder.biv)) #odds ratio of displacement
```

-   Compared to households with at least one member over 65y, households without any members over 65y are less likely to be displaced ((0.75-1)\*100=-25 - a 25% decrease in the odds of being displaced.

###### All adults younger than 35

Not including households with child(ren)

```{r}
table(hh_df$all_young_adults)
# table(hh_df$all_young_adults, hh_df$prev_res_type_simp) # curious about how many under 35 were previously students living in dorms (table(hh_df$all_young_adults, hh_df$prev_res_type))
# table(hh_df$all_young_adults, hh_df$hhincome_bin5)

younger.biv<-glm(disp_binary~1 + all_young_adults, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(younger.biv)
coef(younger.biv) #log odds (coefficients)
exp(coef(younger.biv)) #odds ratio of displacement
```

-   Compared to households with all members younger than 35y, households with at least one member over 35y are more likely to be displaced ((1.48-1)\*100=48 - a 48% increase in the odds of being displaced.

##### Vehicles/drivers

```{r}
table(hh_df$veh_drivers)

veh.biv<-glm(disp_binary~1 + veh_drivers, 
             family = binomial(link = "logit"), 
             data = hh_df)
summary(veh.biv)
coef(veh.biv) #log odds (coefficients)
exp(coef(veh.biv)) #odds ratio of displacement
```

-   Each unit increase in the vehicle/driver ratio is associated with a (0.84 - 1 = -0.16) decrease in the odds of being displaced

#### 4. Basic Binomial Model - Displacement (4 reasons)

This model includes a limited set of explanatory variables to start. This was done just to try some of the basic variables. Their inclusion is not based on statistical threshold.

```{r}
# trying basic model
disp.basic<-glm(disp_binary~1 + poc_pct + linguistic_pct + f1hh_race_category, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(disp.basic)

arm::coefplot(disp.basic)

confint(disp.basic) #confidence intervals
coef(disp.basic) #log odds
exp(coef(disp.basic)) #exponentiate to get predicted odds- odds ratio coefficients
# compare exp(coef) distance from 1, if coef is negative, then exp(coef) is between 0,1 representing a response and covariate that is partially negatively correlated - compare with 1
#  https://stats.oarc.ucla.edu/other/mult-pkg/faq/general/faq-how-do-i-interpret-odds-ratios-in-logistic-regression/
```

-   Increase poc_pct (Population of People of Color) by 1 percent, odds of being displaced increases by factor of 1.01 - odds will increase close to 1 - little effect, controlling for the other variables in the model
-   Increase linguistic_pct (Population 5 years and over who do not speak English very well) by 1 percent, odds of being displaced decreases by factor of 0.99 - odds will decrease close to 1 - little effect, controlling for the other variables in the model
-   Black or African American non-Hispanic households: the odds of being displaced increases by a factor of 1.21 compared to white non-Hispanic households. In terms of percent increase being Black or African American increases the odds of being displaced by 21% ((1.21-1)\*100), controlling for the other variables in the model
-   AANHPI: ((0.77-1)\*100) = -23 percent change in the odds or a 23% decrease in the odds of being displaced, controlling for the other variables in the model
-   Hispanic: ((1.02-1)\*100)= 2% increase in the odds of being displaced, controlling for the other variables in the model
-   Missing/No response: ((1.12-1)\*100)= 12% increase in the odds of being displaced, controlling for the other variables in the model
-   Some other races non-Hispanic: ((1.67-1)\*100)= 67% increase in the odds of being displaced, controlling for the other variables in the model

```{r}
BIC(disp.basic)

# extract residual and null deviances
# objects(disp.basic)

# calculate the pseudo-R2 value:
pseudoR2_basic <- (disp.basic$null.deviance - disp.basic$deviance) / disp.basic$null.deviance
pseudoR2_basic
```

The model explains 0.7% of the variability in the data.

An adjusted McFaddenâ€™s pseudo-R2, which penalizes for the number of predictors.

```{r}
DescTools::PseudoR2(disp.basic, which = "all")
```

#### 5. Expanded Binomial model - Displacement (4 reasons)

These models include the an expanded set set of explanatory variables. All of the variables are the same except for the lifecycle variable, which is in two forms - the first groups any family with child(ren), the second categorizes families with child(ren) into single-parent households and multi-parent households.

##### 5a. More simple lifecycle

Family with child

```{r}
disp.exp.famsimp<-glm(disp_binary~1 + risk_score +poc_pct + linguistic_pct + 
                        education_pct +
                        renter_pct + rent_ratio_weight +
                        poverty_pct + sev_cost_burdened_pct +
                        park + transit_now_pct + dev_potential_pct +
                        ratio_200_50 + inc_50_100k +
                        f1hh_race_category + f1hhincome_bin5 + 
                        f1prev_res_type_simp + f1prev_rent_own_bin2 +
                        f1res_type_transition + f1lifecycle_draft, 
                      family = binomial(link = "logit"), 
                      data = hh_df)
summary(disp.exp.famsimp)

arm::coefplot(disp.exp.famsimp)

confint(disp.exp.famsimp) #confidence intervals
coef(disp.exp.famsimp) #log odds
exp(coef(disp.exp.famsimp)) #exponentiate to get predicted odds- odds ratio coefficients
```

The AIC of the expanded model with the more simplistic lifestyle variable is 2147.8

##### 5b. More complex lifecycle

Single-parent household and multiple-parent household

```{r}
disp.exp.fam.exp<-glm(disp_binary~1 + risk_score +poc_pct + linguistic_pct + 
                        education_pct +
                        renter_pct + rent_ratio_weight +
                        poverty_pct + sev_cost_burdened_pct +
                        park + transit_now_pct + dev_potential_pct +
                        ratio_200_50 + inc_50_100k +
                        f1hh_race_category + f1hhincome_bin5 + 
                        f1prev_res_type_simp + f1prev_rent_own_bin2 +
                        f1res_type_transition + f1lifecycle_final, 
                      family = binomial(link = "logit"), 
                      data = hh_df)
summary(disp.exp.fam.exp)

arm::coefplot(disp.exp.fam.exp)

confint(disp.exp.fam.exp) #confidence intervals
coef(disp.exp.fam.exp) #log odds
exp(coef(disp.exp.fam.exp)) #exponentiate to get predicted odds- odds ratio coefficients
```

The AIC of the expanded model with the more complex lifestyle variable is 2149.7, compared to 2147.8. These values are close, but the more complex one has an additional variable. The difference in the results between the multiple-parent hh and single-parent hh do not appear to be significant. For slightly simpler analysis we will go with the model using the simple lifecycle variable (model disp.exp.famsimp). The following analysis will be based on the 'disp.exp.famsimp' model.

```{r}
exp(coef(disp.exp.famsimp)) #exponentiate to get predicted odds- odds ratio coefficients
```

-   Increase poc_pct (Population of People of Color) by 1 percent, odds of being displaced increases by factor of 1.00 - odds will increase close to 1 - little effect, controlling for the other variables in the model
-   Increase linguistic_pct (Population 5 years and over who do not speak English very well) by 1 percent, odds of being displaced decreases by factor of 0.996 - odds will decrease close to 1 - little effect, controlling for the other variables in the model
-   Increase ratio of households making \$200k+ to those making \$50k or less by 1%, odds of being displaced increases by factor of 1.09 - previously being in a census tract where the ratio is higher (more households above 200k), the odds of being displaced increases by 9%, controlling for the other variables in the model
-   Increase the share of households making low-mid low (\$50-\$100k) in a household's previous home tract, the odds of being displaced decreases slightly ((0.986-1)\*100) = -1.4 percent change in the odds or a 1.4% decrease in the odds of being displaced,
-   Black or African American non-Hispanic households: the odds of being displaced increases by a factor of 1.04 compared to white non-Hispanic households. in terms of percent increase being Black or African American increases the odds of being displaced by 4% ((1.04-1)\*100), controlling for the other variables in the model
-   AANHPI: ((0.69-1)\*100) = -31 percent change in the odds or a 31% decrease in the odds of being displaced compared to white non-Hispanic households, controlling for the other variables in the model
-   Hispanic: ((0.68-1)\*100)= 32% decrease in the odds of being displaced compared to white non-Hispanic households, controlling for the other variables in the model
-   Missing/No response: ((1.41-1)\*100)= 41% increase in the odds of being displaced compared to white non-Hispanic households, controlling for the other variables in the model
-   Some other races non-Hispanic: ((1.49-1)\*100)= 49% increase in the odds of being displaced compared to white non-Hispanic households, controlling for the other variables in the model
-   Previous tenure: compared to households who previously owned/paid mortgage, renter households: ((2.02-1)\*100)= 102% increase in the odds of being displaced
-   For lifecycle, compared to single-person households, families with child(ren): ((1.05-1)\*100)= 5% increase in the odds of being displaced, controlling for other variables in the model
-   For lifecycle, compared to single-person households, families with all adults over 65y: ((1.79-1)\*100)= 79% increase in the odds of being displaced, controlling for other variables in the model
-   For lifecycle, compared to single-person households, families with any adults over 65y: ((1.27-1)\*100)= 73% increase in the odds of being displaced, controlling for other variables in the model
-   For lifecycle, compared to single-person households, families with all adults under 35y: ((0.60-1)\*100)= 40% decrease in the odds of being displaced, controlling for other variables in the model
-   For lifecycle, compared to single-person households, other families any combination of ages without children: ((1.16-1)\*100)= 16% increase in the odds of being displaced, controlling for other variables in the model

```{r}
BIC(disp.exp.famsimp)

# extract residual and null deviances
# objects(disp.exp)

# calculate the pseudo-R2 value:
pseudoR2_exp <- (disp.exp.famsimp$null.deviance - disp.exp.famsimp$deviance) / disp.exp.famsimp$null.deviance
pseudoR2_exp
```

The model explains 8.9% of the variability in the data.

An adjusted McFaddenâ€™s pseudo-R2, which penalizes for the number of predictors.

```{r}
DescTools::PseudoR2(disp.exp.famsimp, which = "all")
```

The AIC value of the expanded models (2148.6; BIC: 2348.261) is lower than the basic model (4051. BIC: 4100.201), indicating that the expanded binomial model is a better fit, even with the penalty for additional variables. This suggests that the benefits of enhanced explanatory power outweigh the cost of increasing model complexity, according to both information criteria.

#### 6. Models based on significance - Displacement (4 reasons)

From bivariate tests (displacement and previous home location), prev_linguistic_pct, prev_education_pct, and prev_transit_now_pct were not significant. For HTS variables, single_parent, all_older_adults, any_older_adults,

##### 6a. Significance \<=0.001 (\*\*\*)

```{r}
disp.sig.1<-glm(disp_binary~1 + 
                  # significance <=0.001
                  prev_renter_pct + prev_cost_burdened_pct +
                  f1hhincome_bin5 + f1hh_race_category_4 + f1prev_rent_own_bin2 +
                  f1prev_res_type_simp + f1res_type_transition + all_young_adults, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(disp.sig.1)

arm::coefplot(disp.sig.1)

confint(disp.sig.1) #confidence intervals
# coef(disp.sig.1) #log odds
exp(coef(disp.sig.1)) #exponentiate to get predicted odds- odds ratio coefficients
```

The significant variables: income, race/ethnicity, housing tenure, housing type, housing transition, all adults under 35.

```{r}
BIC(disp.sig.1)

# extract residual and null deviances
# objects(disp.sig.1)

# calculate the pseudo-R2 value:
pseudoR2_sig.1 <- (disp.sig.1$null.deviance - disp.sig.1$deviance) / disp.sig.1$null.deviance
pseudoR2_sig.1
```

The model explains 7.8% of the variability in the data.

##### 6b. Significance \<=0.01 (\*\*)

```{r}
disp.sig.2<-glm(disp_binary~1 + 
                  # significance <=0.001
                  prev_renter_pct + prev_cost_burdened_pct + 
                  f1hhincome_bin5 + f1hh_race_category_4 + f1prev_rent_own_bin2 +
                  f1prev_res_type_simp + f1res_type_transition + all_young_adults +
                  # significance <0.01
                  prev_poc_pct + prev_sev_cost_burdened_pct + prev_rent_ratio_weight +
                  prev_poverty_pct + f1_RGC, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(disp.sig.2)

arm::coefplot(disp.sig.2)

confint(disp.sig.2) #confidence intervals
coef(disp.sig.2) #log odds
exp(coef(disp.sig.2)) #exponentiate to get predicted odds- odds ratio coefficients
```

The significant variables: income, race/ethnicity, housing tenure, housing type, all adults under 35, previous tract poverty percent.

```{r}
BIC(disp.sig.2)

# extract residual and null deviances
# objects(disp.sig.2)

# calculate the pseudo-R2 value:
pseudoR2_sig.2 <- (disp.sig.2$null.deviance - disp.sig.2$deviance) / disp.sig.2$null.deviance
pseudoR2_sig.2
```

The model explains 8.0% (0.079578) of the variability in the data.

##### 6c. Significance \<=0.05 (\*)

```{r}
disp.sig.3<-glm(disp_binary~1 + 
                  # significance <=0.001
                  prev_renter_pct + prev_cost_burdened_pct + 
                  f1hhincome_bin5 + f1hh_race_category_4 + f1prev_rent_own_bin2 +
                  f1prev_res_type_simp + f1res_type_transition + all_young_adults +
                  # significance <0.01
                  prev_poc_pct + prev_sev_cost_burdened_pct + prev_rent_ratio_weight +
                  prev_poverty_pct + prev_dev_potential_pct +
                  f1_RGC +
                  # significance <= 0.05
                  children + veh_drivers, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(disp.sig.3)

arm::coefplot(disp.sig.3)

confint(disp.sig.3) #confidence intervals
coef(disp.sig.3) #log odds
exp(coef(disp.sig.3)) #exponentiate to get predicted odds- odds ratio coefficients
```

The significant variables: income, race/ethnicity, housing tenure, housing type, all adults under 35, previous tract poverty percent.

```{r}
BIC(disp.sig.3)

# extract residual and null deviances
# objects(disp.sig.3)

# calculate the pseudo-R2 value:
pseudoR2_sig.3 <- (disp.sig.3$null.deviance - disp.sig.3$deviance) / disp.sig.3$null.deviance
pseudoR2_sig.3
```

The model explains 7.8% (0.07754584) of the variability in the data.

##### 6d. Significance \<=0.1 (.)

```{r}
disp.sig.4<-glm(disp_binary~1 + 
                  # significance <=0.001
                  prev_renter_pct + prev_cost_burdened_pct + 
                  f1hhincome_bin5 + f1hh_race_category_4 + f1prev_rent_own_bin2 +
                  f1prev_res_type_simp + f1res_type_transition + all_young_adults +
                  # significance <0.01
                  prev_poc_pct + prev_sev_cost_burdened_pct + prev_rent_ratio_weight +
                  prev_poverty_pct + prev_dev_potential_pct +
                  f1_RGC +
                  # significance <= 0.05
                  children + veh_drivers +
                  # significance <=0.1
                  prev_park, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(disp.sig.4)

arm::coefplot(disp.sig.4)

confint(disp.sig.4) #confidence intervals
coef(disp.sig.4) #log odds
exp(coef(disp.sig.4)) #exponentiate to get predicted odds- odds ratio coefficients
```

The significant variables: income, race/ethnicity, housing tenure, housing type, all adults under 35.

```{r}
BIC(disp.sig.4)

# extract residual and null deviances
# objects(disp.sig.4)

# calculate the pseudo-R2 value:
pseudoR2_sig.4 <- (disp.sig.4$null.deviance - disp.sig.4$deviance) / disp.sig.4$null.deviance
pseudoR2_sig.4
```

The model explains 7.8% (0.07783461) of the variability in the data.

###### 6e. Refined variables from 6d

This model includes the variables that were significant in model 6d, which included all of the variables that were significant in the bivariate analyses in section 3

```{r}
disp.sig.4.refined<-glm(disp_binary~1 + 
                          # significance <=0.001
                          f1hhincome_bin5 +  + f1prev_rent_own_bin2 +
                          all_young_adults +
                          # significance <0.01
                          f1hh_race_category_4 + f1prev_res_type_simp +
                          # significance <= 0.05
                          f1res_type_transition,
                        family = binomial(link = "logit"), 
                        data = hh_df)
summary(disp.sig.4.refined)

# to get frequency/proportion for each variable 
Hmisc::describe(as.factor(disp_binary)~1 + #disp_binary needs to be factor otherwise summary stats are numeric
                          # significance <=0.001
                          f1hhincome_bin5 +  + f1prev_rent_own_bin2 +
                          all_young_adults +
                          # significance <0.01
                          f1hh_race_category_4 + f1prev_res_type_simp +
                          # significance <= 0.05
                          f1res_type_transition,
                        family = binomial(link = "logit"), 
                        data = hh_df,
                na.action=na.omit)

arm::coefplot(disp.sig.4.refined)

confint(disp.sig.4.refined) #confidence intervals
coef(disp.sig.4.refined) #log odds
exp(coef(disp.sig.4.refined)) #exponentiate to get predicted odds- odds ratio coefficients
```

The significant variables: income, race/ethnicity, housing tenure, housing type, all adults under 35.

```{r}
BIC(disp.sig.4.refined)

# extract residual and null deviances
# objects(disp.sig.4)

# calculate the pseudo-R2 value:
pseudoR2_sig.4.refined <- (disp.sig.4.refined$null.deviance - disp.sig.4.refined$deviance) / disp.sig.4.refined$null.deviance
pseudoR2_sig.4.refined
```

The model explains 7.8% (0.07783461) of the variability in the data.

##### 6f. Comparisons

Model fit and complexity - the AIC and BIC for the models:

-   1: 2208; 2314.061
-   2: 2213.3; 2347.237
-   3: 2215.1; 2354.622
-   4: 2216.3; 2361.441

AIC and BIC penalize models for having a larger number of parameters or predictors. They aim to strike a balance between the goodness of fit and model simplicity, favoring models that explain the data well without excessive complexity. A higher Adjusted R2 indicates a better fit, suggesting that the model captures more of the variability in the data. https://vitalflux.com/aic-vs-bic-for-regression-models-formula-examples/

The fourth model, including all of the variables that had any significant relationship with displacement, has the highest adjusted R2, however, it also has the highest AIC and BIC.

##### 6g. Only prev_disp variables

###### 6g1. All significant prev_disp variables

This model includes the displacement risk factors attached to previous home tract location that were significant in the bivariate analyses in section 3.

```{r}
disp.sig.4.tract<-glm(disp_binary~1 + 
                        # significance <=0.001
                        prev_renter_pct + prev_cost_burdened_pct + 
                        # significance <0.01
                        prev_poc_pct + prev_sev_cost_burdened_pct + prev_rent_ratio_weight +
                        prev_poverty_pct + prev_dev_potential_pct +
                        # significance <= 0.05
                        # significance <=0.1
                        prev_park,
                      family = binomial(link = "logit"), 
                      data = hh_df)
summary(disp.sig.4.tract)

arm::coefplot(disp.sig.4.tract)

confint(disp.sig.4.tract) #confidence intervals
coef(disp.sig.4.tract) #log odds
exp(coef(disp.sig.4.tract)) #exponentiate to get predicted odds- odds ratio coefficients
```

```{r}
BIC(disp.sig.4.tract)

# extract residual and null deviances
# objects(disp.sig.4.tract)

# calculate the pseudo-R2 value:
pseudoR2_sig.4.tract <- (disp.sig.4.tract$null.deviance - disp.sig.4.tract$deviance) / disp.sig.4.tract$null.deviance
pseudoR2_sig.4.tract
```

The model explains 1.2% (0.01231383) of the variability in the data.

###### 6g2. All significant prev_disp variables

This model includes the displacement risk factors attached to previous home tract location that were significant in the previous model (6g1).

```{r}
disp.sig.4.tract.ref<-glm(disp_binary~1 + 
                        # significance <=0.001
                        prev_renter_pct + prev_cost_burdened_pct, #+ 
                        # significance <0.01
                        # prev_poc_pct + prev_sev_cost_burdened_pct + prev_rent_ratio_weight +
                        # prev_poverty_pct + prev_dev_potential_pct +
                        # significance <= 0.05
                        # significance <=0.1
                        # prev_park,
                      family = binomial(link = "logit"), 
                      data = hh_df)
summary(disp.sig.4.tract.ref)

# to get frequency/proportion for each variable 
Hmisc::describe(as.factor(disp_binary)~1 + #disp_binary needs to be factor otherwise summary stats are numeric
                  prev_renter_pct + prev_cost_burdened_pct,
                family = binomial(link = "logit"), 
                data = hh_df,
                na.action=na.omit)

arm::coefplot(disp.sig.4.tract.ref)

confint(disp.sig.4.tract.ref) #confidence intervals
coef(disp.sig.4.tract.ref) #log odds
exp(coef(disp.sig.4.tract.ref)) #exponentiate to get predicted odds- odds ratio coefficients
```

```{r}
BIC(disp.sig.4.tract.ref)

# extract residual and null deviances
# objects(disp.sig.4.tract.ref)

# calculate the pseudo-R2 value:
pseudoR2_sig.4.tract.ref <- (disp.sig.4.tract.ref$null.deviance - disp.sig.4.tract.ref$deviance) / disp.sig.4.tract.ref$null.deviance
pseudoR2_sig.4.tract.ref
```

The model explains 1% (0.009437014) of the variability in the data.

#### 7. Models based on significance within model - Displacement (4 reasons)

This set of models is similar to the models #6a-d, however, the displacement risk factors attached to previous home tract location have been removed so that the full sample (2019, 2021, and 2023) is included. Previously, when the previous tract locations had been included in the models, the 2023 sample was removed because of the issue with the survey logic.

In this set of models we start with all of the non-displacement risk variables and refine based on significance, using the full set.

##### 7a. All variables

All of the non-displacement risk variables that were significant in the bivariate analyses are included in this first model.

```{r}
disp.hts.1<-glm(disp_binary~1 + 
                  # significance <=0.001
                  # prev_renter_pct + prev_cost_burdened_pct + 
                  f1hhincome_bin5 + f1hh_race_category_4 + f1prev_rent_own_bin2 +
                  f1prev_res_type_simp + f1res_type_transition + all_young_adults +
                  # significance <0.01
                  # prev_poc_pct + prev_sev_cost_burdened_pct + 
                  # prev_rent_ratio_weight + prev_poverty_pct + 
                  f1_RGC +
                  # significance <= 0.05
                  children + veh_drivers, #+
                  # significance <=0.1
                  # prev_park, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(disp.hts.1)

arm::coefplot(disp.hts.1)

confint(disp.hts.1) #confidence intervals
# coef(disp.hts.1) #log odds
exp(coef(disp.hts.1)) #exponentiate to get predicted odds- odds ratio coefficients
```

The significant variables: income, race/ethnicity, housing tenure, housing type, housing transition, all adults under 35.

```{r}
BIC(disp.hts.1)

# extract residual and null deviances
# objects(disp.hts.1)

# calculate the pseudo-R2 value:
pseudoR2_hts.1 <- (disp.hts.1$null.deviance - disp.hts.1$deviance) / disp.hts.1$null.deviance
pseudoR2_hts.1
```

The model explains 5.5% of the variability in the data.

##### 7b. Refined HTS variables

All of the non-displacement risk variables that were significant in the bivariate analyses and continued to be significant in the previous model (7a) are included in this model.

```{r}
disp.hts.2<-glm(disp_binary~1 + 
                  # significance <=0.001
                  # prev_renter_pct + prev_cost_burdened_pct + 
                  f1hhincome_bin5 + f1hh_race_category_4 + f1prev_rent_own_bin2 +
                  f1prev_res_type_simp + f1res_type_transition + all_young_adults, #+
                  # significance <0.01
                  # prev_poc_pct + prev_sev_cost_burdened_pct + 
                  # prev_rent_ratio_weight + prev_poverty_pct + 
                  # f1_RGC +
                  # significance <= 0.05
                  # children + veh_drivers +
                  # significance <=0.1
                  # prev_park, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(disp.hts.2)

# to get frequency/proportion for each variable 
Hmisc::describe(as.factor(disp_binary)~1 + #disp_binary needs to be factor otherwise summary stats are numeric
                  # significance <=0.001
                  # prev_renter_pct + prev_cost_burdened_pct + 
                  f1hhincome_bin5 + f1hh_race_category_4 + f1prev_rent_own_bin2 +
                  f1prev_res_type_simp + f1res_type_transition + all_young_adults, #+
                # significance <0.01
                # prev_poc_pct + prev_sev_cost_burdened_pct + 
                # prev_rent_ratio_weight + prev_poverty_pct + 
                # f1_RGC +
                # significance <= 0.05
                # children + veh_drivers +
                # significance <=0.1
                # prev_park, 
                family = binomial(link = "logit"), 
                data = hh_df,
                na.action=na.omit)

arm::coefplot(disp.hts.2)

confint(disp.hts.2) #confidence intervals
coef(disp.hts.2) #log odds
exp(coef(disp.hts.2)) #exponentiate to get predicted odds- odds ratio coefficients
```

The significant variables: income, race/ethnicity, housing tenure, housing type, housing transition, all adults under 35. All of the variables that were significant in the previous model are still significant.

```{r}
BIC(disp.hts.2)

# extract residual and null deviances
# objects(disp.sig.2)

# calculate the pseudo-R2 value:
pseudoR2_hts.2 <- (disp.hts.2$null.deviance - disp.hts.2$deviance) / disp.hts.2$null.deviance
pseudoR2_hts.2
```

The model explains 5.6% of the variability in the data.

##### 7c. Refined HTS variables - with COVID

None of the COVID-related time variables were significant in the bivariate analyses, but are included in the models below.

###### 7c1. Covid moving

```{r}
disp.covidmoving<-glm(disp_binary~1 + 
                        f1hhincome_bin5 + f1hh_race_category_4 + f1prev_rent_own_bin2 +
                        f1prev_res_type_simp + f1res_type_transition + all_young_adults +
                        f1covid_moving, 
                      family = binomial(link = "logit"), 
                      data = hh_df)
summary(disp.covidmoving)

arm::coefplot(disp.covidmoving)

confint(disp.covidmoving) #confidence intervals
coef(disp.covidmoving) #log odds
exp(coef(disp.covidmoving)) #exponentiate to get predicted odds- odds ratio coefficients
```

```{r}
BIC(disp.covidmoving)

# extract residual and null deviances
# objects(disp.covidmoving)

# calculate the pseudo-R2 value:
pseudoR2_covid <- (disp.covidmoving$null.deviance - disp.covidmoving$deviance) / disp.covidmoving$null.deviance
pseudoR2_covid
```

The model explains 5.6% (0.05609691) of the variability in the data.

###### 7c2. Moratorium

```{r}
disp.moratorium<-glm(disp_binary~1 + 
                        f1hhincome_bin5 + f1hh_race_category_4 + f1prev_rent_own_bin2 +
                        f1prev_res_type_simp + f1res_type_transition + all_young_adults +
                        f1moratorium, 
                      family = binomial(link = "logit"), 
                      data = hh_df)
summary(disp.moratorium)

arm::coefplot(disp.moratorium)

confint(disp.moratorium) #confidence intervals
coef(disp.moratorium) #log odds
exp(coef(disp.moratorium)) #exponentiate to get predicted odds- odds ratio coefficients
```

```{r}
BIC(disp.moratorium)

# extract residual and null deviances
# objects(disp.moratorium)

# calculate the pseudo-R2 value:
pseudoR2_moratorium <- (disp.moratorium$null.deviance - disp.moratorium$deviance) / disp.moratorium$null.deviance
pseudoR2_moratorium
```

The model explains 5.6% (0.05649237) of the variability in the data.

###### 7c2. Moratorium Binary

```{r}
disp.moratorium.bin<-glm(disp_binary~1 + 
                        f1hhincome_bin5 + f1hh_race_category_4 + f1prev_rent_own_bin2 +
                        f1prev_res_type_simp + f1res_type_transition + all_young_adults +
                        f1moratorium_binary, 
                      family = binomial(link = "logit"), 
                      data = hh_df)
summary(disp.moratorium.bin)

arm::coefplot(disp.moratorium.bin)

confint(disp.moratorium.bin) #confidence intervals
coef(disp.moratorium.bin) #log odds
exp(coef(disp.moratorium.bin)) #exponentiate to get predicted odds- odds ratio coefficients
```

```{r}
BIC(disp.moratorium.bin)

# extract residual and null deviances
# objects(disp.moratorium.bin)

# calculate the pseudo-R2 value:
pseudoR2_moratoriumbin <- (disp.moratorium.bin$null.deviance - disp.moratorium.bin$deviance) / disp.moratorium.bin$null.deviance
pseudoR2_moratoriumbin
```

The model explains 5.6% (0.05637709) of the variability in the data.

### Displacement - 3 reasons

#### 2. Null Model - Displacement (3 reasons)

```{r}
# null model
disp3.null<-glm(disp3_binary~1,family=binomial(link="logit"), data=hh_df)
summary(disp3.null) #intercept value - same log odds for everyone to predict
coef(disp3.null) #log odds (coefficients)
exp(coef(disp3.null)) #odds ratio of displacement: 0.38 to 1
exp(coef(disp3.null))/(1+(exp(coef(disp3.null)))) #probability of being displaced: 0.27
mean(hh_df$disp3_binary) #0.27
```

#### 3a. Bivariate analyses - Displacement (3 reasons)

##### Household income (5 bins)

```{r}
table(hh_df$f1hhincome_bin5)

income.biv<-glm(disp3_binary~1 + f1hhincome_bin5, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(income.biv)
coef(income.biv) #log odds (coefficients)
exp(coef(income.biv)) #odds ratio of displacement
```

-   Compared to households making \$100,000 or more, the odds of being displaced increase as income decreases
-   \$25,000 or less: ((2.88-1)\*100) = 188 percent change in the odds or a 188% increase in the odds of being displaced compared to households making \$100,000 or more, controlling for the other income categories in the model, compared to 194% for displacement (4)

##### Household race (4 categories)

AANHPI non-Hispanic, Hispanic, Missing/No response, Other POC non-Hispanic, White non-Hispanic

```{r}
table(hh_df$f1hh_race_category_4)

hhrace.biv<-glm(disp3_binary~1 + f1hh_race_category_4, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(hhrace.biv)
coef(hhrace.biv) #log odds (coefficients)
exp(coef(hhrace.biv)) #odds ratio of displacement
```

-   Compared to white non-Hispanic households, the odds of being displaced decreases for AANHPI households and increases for other POC households
-   Other POC non-Hispanic households: ((1.65-1)\*100) = 65 percent change in the odds or a 65% increase in the odds of being displaced compared to white non-Hispanic households, controlling for the other income categories in the model, compared to 54% increase for displacement (4)

##### Previous housing tenure

```{r}
table(hh_df$f1prev_rent_own_bin2)

tenure.biv<-glm(disp3_binary~1 + f1prev_rent_own_bin2, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(tenure.biv)
coef(tenure.biv) #log odds (coefficients)
exp(coef(tenure.biv)) #odds ratio of displacement
```

-   Compared to households that own their homes, the odds of being displaced increases for renter households by ((3.67-1)\*100=267) 267%, or a 267% increase in the odds of being displaced, compared to 162% for displacement (4)

##### Previous housing type

```{r}
table(hh_df$f1prev_res_type_simp)

housingtype.biv<-glm(disp3_binary~1 + f1prev_res_type_simp, 
                     family = binomial(link = "logit"), 
                     data = hh_df)
summary(housingtype.biv)
coef(housingtype.biv) #log odds (coefficients)
exp(coef(housingtype.biv)) #odds ratio of displacement
```

-   Compared to households previously living in single-family homes, the odds of being displaced increases for households previously living in homes categorized as lower-density shared walls (Townhouse, Building with 3 or fewer apartments/condos) and higher-density shared walls (Building with 4 or more apartments/condos) - ((1.65-1)\*100=65) a 65% increase and ((1.88-1)\*100=88) 88% increase in the odds of being displaced, respectively. This compared to 52% increase and 58% increase for displacement (4), respecitvely.

##### Housing transition

```{r}
table(hh_df$f1res_type_transition)

transition.biv<-glm(disp3_binary~1 + f1res_type_transition, 
                    family = binomial(link = "logit"), 
                    data = hh_df)
summary(transition.biv)
coef(transition.biv) #log odds (coefficients)
exp(coef(transition.biv)) #odds ratio of displacement
```

-   Compared to no change, the odds of being displaced decreases for households transitioning to less space and higher density ((0.86-1)\*100=-14) - a 14% decrease in the odds of being displaced, compared to 2% decrease for displacement (4)
-   Compared to no change, the odds of being displaced decreases for households transitioning to more space and less density ((0.69-1)\*100=-31) - a 31% decrease in the odds of being displaced, compared to 32% decrease for displacement (4)
-   This may be related to lifecycle

##### Current RGC

```{r}
table(hh_df$f1_RGC)

rgc.biv<-glm(disp3_binary~1 + f1_RGC, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(rgc.biv)
coef(rgc.biv) #log odds (coefficients)
exp(coef(rgc.biv)) #odds ratio of displacement
```

-   Compared to households not currently living in the RGC, the odds of being displaced increases for households living in the RGC ((1.19-1)\*100=19), compared to 32% increase for displacement (4).

##### COVID Moving

```{r}
table(hh_df$f1covid_moving)

covid.biv<-glm(disp3_binary~1 + f1covid_moving, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(covid.biv)
coef(covid.biv) #log odds (coefficients)
exp(coef(covid.biv)) #odds ratio of displacement
```

-   Compared to households who moved before COVID, the odds of being displaced decreases for households moving after COVID ((0.98-1)\*100=-2), similar to displacement (4).

##### COVID Moratorium

```{r}
table(hh_df$f1moratorium)

moratorium.biv<-glm(disp3_binary~1 + f1moratorium, 
                    family = binomial(link = "logit"), 
                    data = hh_df)
summary(moratorium.biv)
coef(moratorium.biv) #log odds (coefficients)
exp(coef(moratorium.biv)) #odds ratio of displacement
```

-   Compared to households who moved before the COVID moratorium, the odds of being displaced decreases for households moving during the COVID moratorium ((0.92-1)\*100=-8) and -6% for households moving after the COVID moratorium.
-   For displacement (4): -10% for households moving during and about the same for households moving after the moratorium.

##### COVID Moratorium

```{r}
table(hh_df$f1moratorium_binary)

moratorium.binary.biv<-glm(disp3_binary~1 + f1moratorium_binary, 
                           family = binomial(link = "logit"), 
                           data = hh_df)
summary(moratorium.binary.biv)
coef(moratorium.binary.biv) #log odds (coefficients)
exp(coef(moratorium.binary.biv)) #odds ratio of displacement
```

-   Compared to households who moved NOT during the COVID moratorium, the odds of being displaced decreases for households moving during the COVID moratorium ((0.93-1)\*100=-7), compared to -10% for displacement (4).

##### Lifecycle

###### Lifecycle draft

Single-person hh, all over 65 hh, all under 35 hh, at least one older adult, family with child, other hh

```{r}
table(hh_df$f1lifecycle_draft)

lifedraft.biv<-glm(disp3_binary~1 + f1lifecycle_draft, 
                   family = binomial(link = "logit"), 
                   data = hh_df)
summary(lifedraft.biv)
coef(lifedraft.biv) #log odds (coefficients)
exp(coef(lifedraft.biv)) #odds ratio of displacement
```

-   Compared to single-person households, the risk of being displaced decreases for all other household types, except for those with at least one older adult ((1.08-1)\*100=8) - a 8% increase in the odds of being displaced, compared to 4% increase for displacement (4).
-   For families with child(ren), there is a 35% decrease in the odds of being displaced ((0.68-1)\*100=-32), compared to -35% for displacement (4). For households with all members under 35 or over 65, there is a 43% and 44% decrease in the odds of being displaced, respectively ((0.57-1)\*100=-43; (0.39-1)\*100=-61). Compared to a 43% and 44% decrease for displacement (4), respectively.

###### Lifecycle 'final'

same as above, but family with child split into two groups: multiple-parent hh and single-parent hh

```{r}
table(hh_df$f1lifecycle_final)

lifefinal.biv<-glm(disp3_binary~1 + f1lifecycle_final, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(lifefinal.biv)
coef(lifefinal.biv) #log odds (coefficients)
exp(coef(lifefinal.biv)) #odds ratio of displacement
```

-   Compared to single-person households, single parent households are less likely to be displaced ((0.82-1)\*100=-18), compared to a 9% decrease for displacement (4)
-   Multiple-parent households are less likely to be displaced ((0.66-1)\*100=-34), compared to a 38% decrease in the odds of being displaced (4).

###### Single parent vs not

```{r}
table(hh_df$single_parent)

singleparent.biv<-glm(disp3_binary~1 + single_parent, 
                      family = binomial(link = "logit"), 
                      data = hh_df)
summary(singleparent.biv)
coef(singleparent.biv) #log odds (coefficients)
exp(coef(singleparent.biv)) #odds ratio of displacement
```

-   Compared to multiple-parent households, single parent households are more likely to be displaced ((1.03-1)\*100=3 - a 3% increase in the odds of being displaced, compared to a 15% increase for displacement (4).

###### Families with children vs no children

```{r}
table(hh_df$children)

child.biv<-glm(disp3_binary~1 + children, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(child.biv)
coef(child.biv) #log odds (coefficients)
exp(coef(child.biv)) #odds ratio of displacement
```

-   Compared to households with child(ren), households without child(ren) are more likely to be displaced ((1.21-1)\*100=21 - a 21% increase in the odds of being displaced, compared to a 26% increase for displacement (4).

###### All adults over 65

Not including households with child(ren)

```{r}
table(hh_df$all_older_adults)

older.biv<-glm(disp3_binary~1 + all_older_adults, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(older.biv)
coef(older.biv) #log odds (coefficients)
exp(coef(older.biv)) #odds ratio of displacement
```

-   Compared to households with all members over 65y, households where members are not all over 65y are more likely to be displaced ((2.11-1)\*100=111 - a 111% increase in the odds of being displaced, compared to 43% increase for displacement (4).

###### Any adults over 65

Not including households with child(ren)

```{r}
table(hh_df$any_older_adults)

anyolder.biv<-glm(disp3_binary~1 + any_older_adults, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(anyolder.biv)
coef(anyolder.biv) #log odds (coefficients)
exp(coef(anyolder.biv)) #odds ratio of displacement
```

-   Compared to households with at least one member over 65y, households without any members over 65y are less likely to be displaced ((0.74-1)\*100=-26 - a 26% decrease in the odds of being displaced, compared to a 25% decrease for displacement (4).

###### All adults younger than 35

Not including households with child(ren)

```{r}
table(hh_df$all_young_adults)

younger.biv<-glm(disp3_binary~1 + all_young_adults, 
                 family = binomial(link = "logit"), 
                 data = hh_df)
summary(younger.biv)
coef(younger.biv) #log odds (coefficients)
exp(coef(younger.biv)) #odds ratio of displacement
```

-   Compared to households with all members younger than 35y, households with at least one member over 35y are more likely to be displaced ((1.51-1)\*100=51 - a 51% increase in the odds of being displaced, compared to a 48% increase for displacement (4).

##### Vehicles/drivers

```{r}
table(hh_df$veh_drivers)

veh.biv<-glm(disp3_binary~1 + veh_drivers, 
             family = binomial(link = "logit"), 
             data = hh_df)
summary(veh.biv)
coef(veh.biv) #log odds (coefficients)
exp(coef(veh.biv)) #odds ratio of displacement
```

-   Each unit increase in the vehicle/driver ratio is associated with a (0.83 - 1 = -0.17) decrease in the odds of being displaced

#### 3b. Multivariate analyses - Displacement (3 reasons)

This model includes all of the variables that were significant in the bivariate analyses.

```{r}
disp3.hts.1<-glm(disp3_binary~1 + 
                   # significance <=0.001
                   f1hhincome_bin5 + f1hh_race_category_4 + f1prev_rent_own_bin2 +
                   f1prev_res_type_simp + f1res_type_transition + all_young_adults +
                   # significance <0.01 
                   all_older_adults +
                   # significance <= 0.05
                   veh_drivers + 
                   # significance <=0.1
                   children + f1_RGC, 
                 family = binomial(link = "logit"), 
                 data = hh_df)
summary(disp3.hts.1)

arm::coefplot(disp3.hts.1)

confint(disp3.hts.1) #confidence intervals
# coef(disp3.hts.1) #log odds
exp(coef(disp3.hts.1)) #exponentiate to get predicted odds- odds ratio coefficients
```

```{r}
BIC(disp3.hts.1)

# extract residual and null deviances
# objects(disp3.hts.1)

# calculate the pseudo-R2 value:
pseudoR2_hts.3 <- (disp3.hts.1$null.deviance - disp3.hts.1$deviance) / disp3.hts.1$null.deviance
pseudoR2_hts.3
```

The model explains 6.7% of the variability in the data.

#### 3c. Multivariate analyses refined - Displacement (3 reasons)

This model includes all of the variables that were significant in the bivariate analyses and then refined to those significant in the multivariate model (3b).

```{r}
disp3.hts.1<-glm(disp3_binary~1 + 
                   f1hhincome_bin5 + f1hh_race_category_4 + f1prev_rent_own_bin2 +
                   f1prev_res_type_simp + f1res_type_transition + all_young_adults, 
                 family = binomial(link = "logit"), 
                 data = hh_df)
summary(disp3.hts.1)

# to get frequency/proportion for each variable 
Hmisc::describe(as.factor(disp3_binary)~1 + #disp_binary needs to be factor otherwise summary stats are numeric
                  f1hhincome_bin5 + f1hh_race_category_4 + f1prev_rent_own_bin2 +
                  f1prev_res_type_simp + f1res_type_transition + all_young_adults, 
                family = binomial(link = "logit"), 
                data = hh_df,
                na.action=na.omit)

arm::coefplot(disp3.hts.1)

confint(disp3.hts.1) #confidence intervals
# coef(disp3.hts.1) #log odds
exp(coef(disp3.hts.1)) #exponentiate to get predicted odds- odds ratio coefficients
```

The significant variables: income, race/ethnicity, housing tenure, housing type, housing transition, all adults under 35.

```{r}
BIC(disp3.hts.1)

# extract residual and null deviances
# objects(disp3.hts.1)

# calculate the pseudo-R2 value:
pseudoR2_hts.3 <- (disp3.hts.1$null.deviance - disp3.hts.1$deviance) / disp3.hts.1$null.deviance
pseudoR2_hts.3
```

The model explains 6.7% of the variability in the data.

### Displacement - Forced

#### 2. Null Model - Forced

```{r}
# null model
forced.null<-glm(disp_forced~1,family=binomial(link="logit"), data=hh_df)
summary(forced.null) #intercept value - same log odds for everyone to predict
coef(forced.null) #log odds (coefficients)
exp(coef(forced.null)) #odds ratio of displacement: 0.38 to 1
exp(coef(forced.null))/(1+(exp(coef(disp3.null)))) #probability of being displaced: 0.27
mean(hh_df$disp_forced) #0.06
```

#### 3a. Bivariate analyses - Forced

##### Household income (5 bins)

```{r}
table(hh_df$f1hhincome_bin5)

income.biv<-glm(disp_forced~1 + f1hhincome_bin5, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(income.biv)
coef(income.biv) #log odds (coefficients)
exp(coef(income.biv)) #odds ratio of displacement
```

<!-- * Compared to households making \$100,000 or more, the odds of being displaced increase as income decreases -->

<!-- * $25,000 or less: ((2.88-1)*100) = 188 percent change in the odds or a 188% increase in the odds of being displaced compared to households making \$100,000 or more, controlling for the other income categories in the model, compared to 194% for displacement (4) -->

##### Household race (4 categories)

AANHPI non-Hispanic, Hispanic, Missing/No response, Other POC non-Hispanic, White non-Hispanic

```{r}
table(hh_df$f1hh_race_category_4)

hhrace.biv<-glm(disp_forced~1 + f1hh_race_category_4, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(hhrace.biv)
coef(hhrace.biv) #log odds (coefficients)
exp(coef(hhrace.biv)) #odds ratio of displacement
```

<!-- * Compared to white non-Hispanic households, the odds of being displaced decreases for AANHPI households and increases for other POC households -->

<!-- * Other POC non-Hispanic households: ((1.65-1)*100) = 65 percent change in the odds or a 65% increase in the odds of being displaced compared to white non-Hispanic households, controlling for the other income categories in the model, compared to 54% increase for displacement (4) -->

##### Previous housing tenure

```{r}
table(hh_df$f1prev_rent_own_bin2)

tenure.biv<-glm(disp_forced~1 + f1prev_rent_own_bin2, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(tenure.biv)
coef(tenure.biv) #log odds (coefficients)
exp(coef(tenure.biv)) #odds ratio of displacement
```

<!-- * Compared to households that own their homes, the odds of being displaced increases for renter households by ((3.67-1)*100=267) 267%, or a 267% increase in the odds of being displaced, compared to 162% for displacement (4) -->

##### Previous housing type

```{r}
table(hh_df$f1prev_res_type_simp)

housingtype.biv<-glm(disp_forced~1 + f1prev_res_type_simp, 
                     family = binomial(link = "logit"), 
                     data = hh_df)
summary(housingtype.biv)
coef(housingtype.biv) #log odds (coefficients)
exp(coef(housingtype.biv)) #odds ratio of displacement
```

<!-- * Compared to households previously living in single-family homes, the odds of being displaced increases for households previously living in homes categorized as lower-density shared walls (Townhouse, Building with 3 or fewer apartments/condos) and higher-density shared walls (Building with 4 or more apartments/condos) - ((1.65-1)\*100=65) a 65% increase and ((1.88-1)\*100=88) 88% increase in the odds of being displaced, respectively. This compared to 52% increase and 58% increase for displacement (4), respecitvely.   -->

##### Housing transition

```{r}
table(hh_df$f1res_type_transition)

transition.biv<-glm(disp_forced~1 + f1res_type_transition, 
                    family = binomial(link = "logit"), 
                    data = hh_df)
summary(transition.biv)
coef(transition.biv) #log odds (coefficients)
exp(coef(transition.biv)) #odds ratio of displacement
```

<!-- * Compared to no change, the odds of being displaced decreases for households transitioning to less space and higher density ((0.86-1)*100=-14) - a 14% decrease in the odds of being displaced, compared to 2% decrease for displacement (4) -->

<!-- * Compared to no change, the odds of being displaced decreases for households transitioning to more space and less density ((0.69-1)*100=-31) - a 31% decrease in the odds of being displaced, compared to 32% decrease for displacement (4) -->

<!-- * This may be related to lifecycle -->

##### Current RGC

```{r}
table(hh_df$f1_RGC)

rgc.biv<-glm(disp_forced~1 + f1_RGC, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(rgc.biv)
coef(rgc.biv) #log odds (coefficients)
exp(coef(rgc.biv)) #odds ratio of displacement
```

<!-- * Compared to households not currently living in the RGC, the odds of being displaced increases for households living in the RGC ((1.19-1)*100=19), compared to 32% increase for displacement (4). -->

##### COVID Moving

```{r}
table(hh_df$f1covid_moving)

covid.biv<-glm(disp_forced~1 + f1covid_moving, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(covid.biv)
coef(covid.biv) #log odds (coefficients)
exp(coef(covid.biv)) #odds ratio of displacement
```

<!-- * Compared to households who moved before COVID, the odds of being displaced decreases for households moving after COVID ((0.98-1)*100=-2), similar to displacement (4). -->

##### COVID Moratorium

```{r}
table(hh_df$f1moratorium)

moratorium.biv<-glm(disp_forced~1 + f1moratorium, 
                    family = binomial(link = "logit"), 
                    data = hh_df)
summary(moratorium.biv)
coef(moratorium.biv) #log odds (coefficients)
exp(coef(moratorium.biv)) #odds ratio of displacement
```

<!-- * Compared to households who moved before the COVID moratorium, the odds of being displaced decreases for households moving during the COVID moratorium ((0.92-1)*100=-8) and -6% for households moving after the COVID moratorium. -->

<!-- * For displacement (4): -10% for households moving during and about the same for households moving after the moratorium. -->

##### COVID Moratorium

```{r}
table(hh_df$f1moratorium_binary)

moratorium.binary.biv<-glm(disp_forced~1 + f1moratorium_binary, 
                           family = binomial(link = "logit"), 
                           data = hh_df)
summary(moratorium.binary.biv)
coef(moratorium.binary.biv) #log odds (coefficients)
exp(coef(moratorium.binary.biv)) #odds ratio of displacement
```

<!-- * Compared to households who moved NOT during the COVID moratorium, the odds of being displaced decreases for households moving during the COVID moratorium ((0.93-1)*100=-7), compared to -10% for displacement (4). -->

##### Lifecycle

###### Lifecycle draft

Single-person hh, all over 65 hh, all under 35 hh, at least one older adult, family with child, other hh

```{r}
table(hh_df$f1lifecycle_draft)

lifedraft.biv<-glm(disp_forced~1 + f1lifecycle_draft, 
                   family = binomial(link = "logit"), 
                   data = hh_df)
summary(lifedraft.biv)
coef(lifedraft.biv) #log odds (coefficients)
exp(coef(lifedraft.biv)) #odds ratio of displacement
```

<!-- * Compared to single-person households, the risk of being displaced decreases for all other household types, except for those with at least one older adult ((1.08-1)\*100=8) - a 8% increase in the odds of being displaced, compared to 4% increase for displacement (4).  -->

<!-- * For families with child(ren), there is a 35% decrease in the odds of being displaced ((0.68-1)\*100=-32), compared to -35% for displacement (4).  -->

<!-- For households with all members under 35 or over 65, there is a 43% and 44% decrease in the odds of being displaced, respectively ((0.57-1)\*100=-43; (0.39-1)\*100=-61). Compared to a 43% and 44% decrease for displacement (4), respectively.  -->

###### Lifecycle 'final'

same as above, but family with child split into two groups: multiple-parent hh and single-parent hh

```{r}
table(hh_df$f1lifecycle_final)

lifefinal.biv<-glm(disp_forced~1 + f1lifecycle_final, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(lifefinal.biv)
coef(lifefinal.biv) #log odds (coefficients)
exp(coef(lifefinal.biv)) #odds ratio of displacement
```

<!-- * Compared to single-person households, single parent households are less likely to be displaced ((0.82-1)*100=-18), compared to a 9% decrease for displacement (4) -->

<!-- * Multiple-parent households are less likely to be displaced ((0.66-1)*100=-34), compared to a 38% decrease in the odds of being displaced (4).  -->

###### Single parent vs not

```{r}
table(hh_df$single_parent)

singleparent.biv<-glm(disp_forced~1 + single_parent, 
                      family = binomial(link = "logit"), 
                      data = hh_df)
summary(singleparent.biv)
coef(singleparent.biv) #log odds (coefficients)
exp(coef(singleparent.biv)) #odds ratio of displacement
```

<!-- * Compared to multiple-parent households, single parent households are more likely to be displaced ((1.03-1)*100=3 - a 3% increase in the odds of being displaced, compared to a 15% increase for displacement (4). -->

###### Families with children vs no children

```{r}
table(hh_df$children)

child.biv<-glm(disp_forced~1 + children, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(child.biv)
coef(child.biv) #log odds (coefficients)
exp(coef(child.biv)) #odds ratio of displacement
```

<!-- * Compared to households with child(ren), households without child(ren) are more likely to be displaced ((1.21-1)*100=21 - a 21% increase in the odds of being displaced, compared to a 26% increase for displacement (4). -->

###### All adults over 65

Not including households with child(ren)

```{r}
table(hh_df$all_older_adults)

older.biv<-glm(disp3_binary~1 + all_older_adults, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(older.biv)
coef(older.biv) #log odds (coefficients)
exp(coef(older.biv)) #odds ratio of displacement
```

<!-- * Compared to households with all members over 65y, households where members are not all over 65y are more likely to be displaced ((2.11-1)*100=111 - a 111% increase in the odds of being displaced, compared to 43% increase for displacement (4). -->

###### Any adults over 65

Not including households with child(ren)

```{r}
table(hh_df$any_older_adults)

anyolder.biv<-glm(disp_forced~1 + any_older_adults, 
                  family = binomial(link = "logit"), 
                  data = hh_df)
summary(anyolder.biv)
coef(anyolder.biv) #log odds (coefficients)
exp(coef(anyolder.biv)) #odds ratio of displacement
```

<!-- * Compared to households with at least one member over 65y, households without any members over 65y are less likely to be displaced ((0.74-1)*100=-26 - a 26% decrease in the odds of being displaced, compared to a 25% decrease for displacement (4). -->

###### All adults younger than 35

Not including households with child(ren)

```{r}
table(hh_df$all_young_adults)

younger.biv<-glm(disp_forced~1 + all_young_adults, 
                 family = binomial(link = "logit"), 
                 data = hh_df)
summary(younger.biv)
coef(younger.biv) #log odds (coefficients)
exp(coef(younger.biv)) #odds ratio of displacement
```

<!-- * Compared to households with all members younger than 35y, households with at least one member over 35y are more likely to be displaced ((1.51-1)*100=51 - a 51% increase in the odds of being displaced, compared to a 48% increase for displacement (4). -->

##### Vehicles/drivers

```{r}
table(hh_df$veh_drivers)

veh.biv<-glm(disp_forced~1 + veh_drivers, 
             family = binomial(link = "logit"), 
             data = hh_df)
summary(veh.biv)
coef(veh.biv) #log odds (coefficients)
exp(coef(veh.biv)) #odds ratio of displacement
```

<!-- * Each unit increase in the vehicle/driver ratio is associated with a (0.83 - 1 = -0.17) decrease in the odds of being displaced -->

#### 3b. Multivariate analyses - Forced

This model includes all of the variables that were significant in the bivariate analyses.

```{r}
forced.hts.1<-glm(disp_forced~1 + 
                    # significance <=0.001
                    f1hhincome_bin5 + f1hh_race_category_4 + f1prev_rent_own_bin2 +
                    f1res_type_transition + all_young_adults +
                    # significance <0.01 
                    f1covid_moving +
                    # significance <= 0.05
                    f1prev_res_type_simp + f1moratorium +
                    all_older_adults, #+ 
                  # significance <=0.1
                  # children, 
                  family = binomial(link = "logit"), 
                  data = hh_df)
summary(forced.hts.1)

arm::coefplot(forced.hts.1)

confint(forced.hts.1) #confidence intervals
# coef(forced.hts.1) #log odds
exp(coef(forced.hts.1)) #exponentiate to get predicted odds- odds ratio coefficients
```

```{r}
BIC(forced.hts.1)

# extract residual and null deviances
# objects(forced.hts.1)

# calculate the pseudo-R2 value:
pseudoR2_hts.forced <- (forced.hts.1$null.deviance - forced.hts.1$deviance) / forced.hts.1$null.deviance
pseudoR2_hts.forced
```

The model explains 6.7% of the variability in the data.

#### 3c. Multivariate analyses refined - Forced

This model includes all of the variables that were significant in the bivariate analyses and then refined to those significant in the multivariate model (3b).

```{r}
forced.hts.2<-glm(disp_forced~1 +
                    f1hh_race_category_4 + f1prev_rent_own_bin2 +
                    f1res_type_transition + all_young_adults +
                    f1covid_moving + f1prev_res_type_simp, 
                 family = binomial(link = "logit"), 
                 data = hh_df)
summary(forced.hts.2)

# to get frequency/proportion for each variable 
Hmisc::describe(as.factor(disp_forced)~1 + #disp_binary needs to be factor otherwise summary stats are numeric
                  f1hh_race_category_4 + f1prev_rent_own_bin2 +
                  f1res_type_transition + all_young_adults +
                  f1covid_moving + f1prev_res_type_simp, 
                family = binomial(link = "logit"), 
                data = hh_df,
                na.action=na.omit)

arm::coefplot(forced.hts.2)

confint(forced.hts.2) #confidence intervals
# coef(forced.hts.2) #log odds
exp(coef(forced.hts.2)) #exponentiate to get predicted odds- odds ratio coefficients
```

```{r}
BIC(forced.hts.2)

# extract residual and null deviances
# objects(forced.hts.2)

# calculate the pseudo-R2 value:
pseudoR2_forced.2 <- (forced.hts.2$null.deviance - forced.hts.2$deviance) / forced.hts.2$null.deviance
pseudoR2_forced.2
```

The model explains 10.4% of the variability in the data.

### Displacement - Income Change

#### 2. Null Model - Income Change

```{r}
# null model
income.null<-glm(disp_inc_change~1,family=binomial(link="logit"), data=hh_df)
summary(income.null) #intercept value - same log odds for everyone to predict
coef(income.null) #log odds (coefficients)
exp(coef(income.null)) #odds ratio of displacement: 0.38 to 1
exp(coef(income.null))/(1+(exp(coef(disp3.null)))) #probability of being displaced: 0.27
mean(hh_df$disp_inc_change) #0.05
```

#### 3a. Bivariate analyses - Income Change

##### Household income (5 bins)

```{r}
table(hh_df$f1hhincome_bin5)

income.biv<-glm(disp_inc_change~1 + f1hhincome_bin5, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(income.biv)
coef(income.biv) #log odds (coefficients)
exp(coef(income.biv)) #odds ratio of displacement
```

<!-- * Compared to households making \$100,000 or more, the odds of being displaced increase as income decreases -->

<!-- * $25,000 or less: ((2.88-1)*100) = 188 percent change in the odds or a 188% increase in the odds of being displaced compared to households making \$100,000 or more, controlling for the other income categories in the model, compared to 194% for displacement (4) -->

##### Household race (4 categories)

AANHPI non-Hispanic, Hispanic, Missing/No response, Other POC non-Hispanic, White non-Hispanic

```{r}
table(hh_df$f1hh_race_category_4)

hhrace.biv<-glm(disp_inc_change~1 + f1hh_race_category_4, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(hhrace.biv)
coef(hhrace.biv) #log odds (coefficients)
exp(coef(hhrace.biv)) #odds ratio of displacement
```

<!-- * Compared to white non-Hispanic households, the odds of being displaced decreases for AANHPI households and increases for other POC households -->

<!-- * Other POC non-Hispanic households: ((1.65-1)*100) = 65 percent change in the odds or a 65% increase in the odds of being displaced compared to white non-Hispanic households, controlling for the other income categories in the model, compared to 54% increase for displacement (4) -->

##### Previous housing tenure

```{r}
table(hh_df$f1prev_rent_own_bin2)

tenure.biv<-glm(disp_inc_change~1 + f1prev_rent_own_bin2, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(tenure.biv)
coef(tenure.biv) #log odds (coefficients)
exp(coef(tenure.biv)) #odds ratio of displacement
```

<!-- * Compared to households that own their homes, the odds of being displaced increases for renter households by ((3.67-1)*100=267) 267%, or a 267% increase in the odds of being displaced, compared to 162% for displacement (4) -->

##### Previous housing type

```{r}
table(hh_df$f1prev_res_type_simp)

housingtype.biv<-glm(disp_inc_change~1 + f1prev_res_type_simp, 
                     family = binomial(link = "logit"), 
                     data = hh_df)
summary(housingtype.biv)
coef(housingtype.biv) #log odds (coefficients)
exp(coef(housingtype.biv)) #odds ratio of displacement
```

<!-- * Compared to households previously living in single-family homes, the odds of being displaced increases for households previously living in homes categorized as lower-density shared walls (Townhouse, Building with 3 or fewer apartments/condos) and higher-density shared walls (Building with 4 or more apartments/condos) - ((1.65-1)\*100=65) a 65% increase and ((1.88-1)\*100=88) 88% increase in the odds of being displaced, respectively. This compared to 52% increase and 58% increase for displacement (4), respecitvely.   -->

##### Housing transition

```{r}
table(hh_df$f1res_type_transition)

transition.biv<-glm(disp_inc_change~1 + f1res_type_transition, 
                    family = binomial(link = "logit"), 
                    data = hh_df)
summary(transition.biv)
coef(transition.biv) #log odds (coefficients)
exp(coef(transition.biv)) #odds ratio of displacement
```

<!-- * Compared to no change, the odds of being displaced decreases for households transitioning to less space and higher density ((0.86-1)*100=-14) - a 14% decrease in the odds of being displaced, compared to 2% decrease for displacement (4) -->

<!-- * Compared to no change, the odds of being displaced decreases for households transitioning to more space and less density ((0.69-1)*100=-31) - a 31% decrease in the odds of being displaced, compared to 32% decrease for displacement (4) -->

<!-- * This may be related to lifecycle -->

##### Current RGC

```{r}
table(hh_df$f1_RGC)

rgc.biv<-glm(disp_inc_change~1 + f1_RGC, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(rgc.biv)
coef(rgc.biv) #log odds (coefficients)
exp(coef(rgc.biv)) #odds ratio of displacement
```

<!-- * Compared to households not currently living in the RGC, the odds of being displaced increases for households living in the RGC ((1.19-1)*100=19), compared to 32% increase for displacement (4). -->

##### COVID Moving

```{r}
table(hh_df$f1covid_moving)

covid.biv<-glm(disp_inc_change~1 + f1covid_moving, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(covid.biv)
coef(covid.biv) #log odds (coefficients)
exp(coef(covid.biv)) #odds ratio of displacement
```

<!-- * Compared to households who moved before COVID, the odds of being displaced decreases for households moving after COVID ((0.98-1)*100=-2), similar to displacement (4). -->

##### COVID Moratorium

```{r}
table(hh_df$f1moratorium)

moratorium.biv<-glm(disp_inc_change~1 + f1moratorium, 
                    family = binomial(link = "logit"), 
                    data = hh_df)
summary(moratorium.biv)
coef(moratorium.biv) #log odds (coefficients)
exp(coef(moratorium.biv)) #odds ratio of displacement
```

<!-- * Compared to households who moved before the COVID moratorium, the odds of being displaced decreases for households moving during the COVID moratorium ((0.92-1)*100=-8) and -6% for households moving after the COVID moratorium. -->

<!-- * For displacement (4): -10% for households moving during and about the same for households moving after the moratorium. -->

##### COVID Moratorium

```{r}
table(hh_df$f1moratorium_binary)

moratorium.binary.biv<-glm(disp_inc_change~1 + f1moratorium_binary, 
                           family = binomial(link = "logit"), 
                           data = hh_df)
summary(moratorium.binary.biv)
coef(moratorium.binary.biv) #log odds (coefficients)
exp(coef(moratorium.binary.biv)) #odds ratio of displacement
```

<!-- * Compared to households who moved NOT during the COVID moratorium, the odds of being displaced decreases for households moving during the COVID moratorium ((0.93-1)*100=-7), compared to -10% for displacement (4). -->

##### Lifecycle

###### Lifecycle draft

Single-person hh, all over 65 hh, all under 35 hh, at least one older adult, family with child, other hh

```{r}
table(hh_df$f1lifecycle_draft)

lifedraft.biv<-glm(disp_inc_change~1 + f1lifecycle_draft, 
                   family = binomial(link = "logit"), 
                   data = hh_df)
summary(lifedraft.biv)
coef(lifedraft.biv) #log odds (coefficients)
exp(coef(lifedraft.biv)) #odds ratio of displacement
```

<!-- * Compared to single-person households, the risk of being displaced decreases for all other household types, except for those with at least one older adult ((1.08-1)\*100=8) - a 8% increase in the odds of being displaced, compared to 4% increase for displacement (4).  -->

<!-- * For families with child(ren), there is a 35% decrease in the odds of being displaced ((0.68-1)\*100=-32), compared to -35% for displacement (4).  -->

<!-- For households with all members under 35 or over 65, there is a 43% and 44% decrease in the odds of being displaced, respectively ((0.57-1)\*100=-43; (0.39-1)\*100=-61). Compared to a 43% and 44% decrease for displacement (4), respectively.  -->

###### Lifecycle 'final'

same as above, but family with child split into two groups: multiple-parent hh and single-parent hh

```{r}
table(hh_df$f1lifecycle_final)

lifefinal.biv<-glm(disp_inc_change~1 + f1lifecycle_final, 
                   family = binomial(link = "logit"), 
                   data = hh_df)
summary(lifefinal.biv)
coef(lifefinal.biv) #log odds (coefficients)
exp(coef(lifefinal.biv)) #odds ratio of displacement
```

<!-- * Compared to single-person households, single parent households are less likely to be displaced ((0.82-1)*100=-18), compared to a 9% decrease for displacement (4) -->

<!-- * Multiple-parent households are less likely to be displaced ((0.66-1)*100=-34), compared to a 38% decrease in the odds of being displaced (4).  -->

###### Single parent vs not

```{r}
table(hh_df$single_parent)

singleparent.biv<-glm(disp_inc_change~1 + single_parent, 
                      family = binomial(link = "logit"), 
                      data = hh_df)
summary(singleparent.biv)
coef(singleparent.biv) #log odds (coefficients)
exp(coef(singleparent.biv)) #odds ratio of displacement
```

<!-- * Compared to multiple-parent households, single parent households are more likely to be displaced ((1.03-1)*100=3 - a 3% increase in the odds of being displaced, compared to a 15% increase for displacement (4). -->

###### Families with children vs no children

```{r}
table(hh_df$children)

child.biv<-glm(disp_inc_change~1 + children, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(child.biv)
coef(child.biv) #log odds (coefficients)
exp(coef(child.biv)) #odds ratio of displacement
```

<!-- * Compared to households with child(ren), households without child(ren) are more likely to be displaced ((1.21-1)*100=21 - a 21% increase in the odds of being displaced, compared to a 26% increase for displacement (4). -->

###### All adults over 65

Not including households with child(ren)

```{r}
table(hh_df$all_older_adults)

older.biv<-glm(disp_inc_change~1 + all_older_adults, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(older.biv)
coef(older.biv) #log odds (coefficients)
exp(coef(older.biv)) #odds ratio of displacement
```

<!-- * Compared to households with all members over 65y, households where members are not all over 65y are more likely to be displaced ((2.11-1)*100=111 - a 111% increase in the odds of being displaced, compared to 43% increase for displacement (4). -->

###### Any adults over 65

Not including households with child(ren)

```{r}
table(hh_df$any_older_adults)

anyolder.biv<-glm(disp_inc_change~1 + any_older_adults, 
                  family = binomial(link = "logit"), 
                  data = hh_df)
summary(anyolder.biv)
coef(anyolder.biv) #log odds (coefficients)
exp(coef(anyolder.biv)) #odds ratio of displacement
```

<!-- * Compared to households with at least one member over 65y, households without any members over 65y are less likely to be displaced ((0.74-1)*100=-26 - a 26% decrease in the odds of being displaced, compared to a 25% decrease for displacement (4). -->

###### All adults younger than 35

Not including households with child(ren)

```{r}
table(hh_df$all_young_adults)

younger.biv<-glm(disp_inc_change~1 + all_young_adults, 
                 family = binomial(link = "logit"), 
                 data = hh_df)
summary(younger.biv)
coef(younger.biv) #log odds (coefficients)
exp(coef(younger.biv)) #odds ratio of displacement
```

<!-- * Compared to households with all members younger than 35y, households with at least one member over 35y are more likely to be displaced ((1.51-1)*100=51 - a 51% increase in the odds of being displaced, compared to a 48% increase for displacement (4). -->

##### Vehicles/drivers

```{r}
table(hh_df$veh_drivers)

veh.biv<-glm(disp_inc_change~1 + veh_drivers, 
             family = binomial(link = "logit"), 
             data = hh_df)
summary(veh.biv)
coef(veh.biv) #log odds (coefficients)
exp(coef(veh.biv)) #odds ratio of displacement
```

<!-- * Each unit increase in the vehicle/driver ratio is associated with a (0.83 - 1 = -0.17) decrease in the odds of being displaced -->

#### 3b. Multivariate analyses - Income Change

This model includes all of the variables that were significant in the bivariate analyses.

```{r}
income.hts.1<-glm(disp_inc_change~1 + 
                    # significance <=0.001
                    f1hhincome_bin5 +
                    # significance <0.01
                    all_young_adults +
                    # significance <= 0.05
                    f1hh_race_category_4 + f1res_type_transition +
                    children,
                  family = binomial(link = "logit"), 
                  data = hh_df)
summary(income.hts.1)

arm::coefplot(income.hts.1)

confint(income.hts.1) #confidence intervals
# coef(income.hts.1) #log odds
exp(coef(income.hts.1)) #exponentiate to get predicted odds- odds ratio coefficients
```

```{r}
BIC(income.hts.1)

# extract residual and null deviances
# objects(income.hts.1)

# calculate the pseudo-R2 value:
pseudoR2_hts.inc <- (income.hts.1$null.deviance - income.hts.1$deviance) / income.hts.1$null.deviance
pseudoR2_hts.inc
```

The model explains 7.2% of the variability in the data.

#### 3c. Multivariate analyses refined - Income Change

This model includes all of the variables that were significant in the bivariate analyses and then refined to those significant in the multivariate model (3b).

```{r}
income.hts.2<-glm(disp_inc_change~1 +
                    f1hhincome_bin5 +
                    all_young_adults +
                    f1hh_race_category_4,
                 family = binomial(link = "logit"), 
                 data = hh_df)
summary(income.hts.2)

# to get frequency/proportion for each variable 
Hmisc::describe(as.factor(disp_inc_change)~1 + #disp_binary needs to be factor otherwise summary stats are numeric
                  f1hhincome_bin5 +
                  all_young_adults +
                  f1hh_race_category_4,
                family = binomial(link = "logit"), 
                data = hh_df,
                na.action=na.omit)

arm::coefplot(income.hts.2)

confint(income.hts.2) #confidence intervals
# coef(income.hts.2) #log odds
exp(coef(income.hts.2)) #exponentiate to get predicted odds- odds ratio coefficients
```

```{r}
BIC(income.hts.2)

# extract residual and null deviances
# objects(income.hts.2)

# calculate the pseudo-R2 value:
pseudoR2_income.2 <- (income.hts.2$null.deviance - income.hts.2$deviance) / income.hts.2$null.deviance
pseudoR2_income.2
```

The model explains 6.8% of the variability in the data.

### Displacement - Housing Cost

#### 2. Null Model - Housing Cost

```{r}
# null model
housing.null<-glm(disp_housing_cost~1,family=binomial(link="logit"), data=hh_df)
summary(housing.null) #intercept value - same log odds for everyone to predict
coef(housing.null) #log odds (coefficients)
exp(coef(housing.null)) #odds ratio of displacement: 0.38 to 1
exp(coef(housing.null))/(1+(exp(coef(disp3.null)))) #probability of being displaced: 0.27
mean(hh_df$disp_housing_cost) #0.16
```

#### 3a. Bivariate analyses - Housing Cost

##### Household income (5 bins)

```{r}
table(hh_df$f1hhincome_bin5)

income.biv<-glm(disp_housing_cost~1 + f1hhincome_bin5, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(income.biv)
coef(income.biv) #log odds (coefficients)
exp(coef(income.biv)) #odds ratio of displacement
```

<!-- * Compared to households making \$100,000 or more, the odds of being displaced increase as income decreases -->

<!-- * $25,000 or less: ((2.88-1)*100) = 188 percent change in the odds or a 188% increase in the odds of being displaced compared to households making \$100,000 or more, controlling for the other income categories in the model, compared to 194% for displacement (4) -->

##### Household race (4 categories)

AANHPI non-Hispanic, Hispanic, Missing/No response, Other POC non-Hispanic, White non-Hispanic

```{r}
table(hh_df$f1hh_race_category_4)

hhrace.biv<-glm(disp_housing_cost~1 + f1hh_race_category_4, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(hhrace.biv)
coef(hhrace.biv) #log odds (coefficients)
exp(coef(hhrace.biv)) #odds ratio of displacement
```

<!-- * Compared to white non-Hispanic households, the odds of being displaced decreases for AANHPI households and increases for other POC households -->

<!-- * Other POC non-Hispanic households: ((1.65-1)*100) = 65 percent change in the odds or a 65% increase in the odds of being displaced compared to white non-Hispanic households, controlling for the other income categories in the model, compared to 54% increase for displacement (4) -->

##### Previous housing tenure

```{r}
table(hh_df$f1prev_rent_own_bin2)

tenure.biv<-glm(disp_housing_cost~1 + f1prev_rent_own_bin2, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(tenure.biv)
coef(tenure.biv) #log odds (coefficients)
exp(coef(tenure.biv)) #odds ratio of displacement
```

<!-- * Compared to households that own their homes, the odds of being displaced increases for renter households by ((3.67-1)*100=267) 267%, or a 267% increase in the odds of being displaced, compared to 162% for displacement (4) -->

##### Previous housing type

```{r}
table(hh_df$f1prev_res_type_simp)

housingtype.biv<-glm(disp_housing_cost~1 + f1prev_res_type_simp, 
                     family = binomial(link = "logit"), 
                     data = hh_df)
summary(housingtype.biv)
coef(housingtype.biv) #log odds (coefficients)
exp(coef(housingtype.biv)) #odds ratio of displacement
```

<!-- * Compared to households previously living in single-family homes, the odds of being displaced increases for households previously living in homes categorized as lower-density shared walls (Townhouse, Building with 3 or fewer apartments/condos) and higher-density shared walls (Building with 4 or more apartments/condos) - ((1.65-1)\*100=65) a 65% increase and ((1.88-1)\*100=88) 88% increase in the odds of being displaced, respectively. This compared to 52% increase and 58% increase for displacement (4), respecitvely.   -->

##### Housing transition

```{r}
table(hh_df$f1res_type_transition)

transition.biv<-glm(disp_housing_cost~1 + f1res_type_transition, 
                    family = binomial(link = "logit"), 
                    data = hh_df)
summary(transition.biv)
coef(transition.biv) #log odds (coefficients)
exp(coef(transition.biv)) #odds ratio of displacement
```

<!-- * Compared to no change, the odds of being displaced decreases for households transitioning to less space and higher density ((0.86-1)*100=-14) - a 14% decrease in the odds of being displaced, compared to 2% decrease for displacement (4) -->

<!-- * Compared to no change, the odds of being displaced decreases for households transitioning to more space and less density ((0.69-1)*100=-31) - a 31% decrease in the odds of being displaced, compared to 32% decrease for displacement (4) -->

<!-- * This may be related to lifecycle -->

##### Current RGC

```{r}
table(hh_df$f1_RGC)

rgc.biv<-glm(disp_housing_cost~1 + f1_RGC, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(rgc.biv)
coef(rgc.biv) #log odds (coefficients)
exp(coef(rgc.biv)) #odds ratio of displacement
```

<!-- * Compared to households not currently living in the RGC, the odds of being displaced increases for households living in the RGC ((1.19-1)*100=19), compared to 32% increase for displacement (4). -->

##### COVID Moving

```{r}
table(hh_df$f1covid_moving)

covid.biv<-glm(disp_housing_cost~1 + f1covid_moving, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(covid.biv)
coef(covid.biv) #log odds (coefficients)
exp(coef(covid.biv)) #odds ratio of displacement
```

<!-- * Compared to households who moved before COVID, the odds of being displaced decreases for households moving after COVID ((0.98-1)*100=-2), similar to displacement (4). -->

##### COVID Moratorium

```{r}
table(hh_df$f1moratorium)

moratorium.biv<-glm(disp_housing_cost~1 + f1moratorium, 
                    family = binomial(link = "logit"), 
                    data = hh_df)
summary(moratorium.biv)
coef(moratorium.biv) #log odds (coefficients)
exp(coef(moratorium.biv)) #odds ratio of displacement
```

<!-- * Compared to households who moved before the COVID moratorium, the odds of being displaced decreases for households moving during the COVID moratorium ((0.92-1)*100=-8) and -6% for households moving after the COVID moratorium. -->

<!-- * For displacement (4): -10% for households moving during and about the same for households moving after the moratorium. -->

##### COVID Moratorium

```{r}
table(hh_df$f1moratorium_binary)

moratorium.binary.biv<-glm(disp_housing_cost~1 + f1moratorium_binary, 
                           family = binomial(link = "logit"), 
                           data = hh_df)
summary(moratorium.binary.biv)
coef(moratorium.binary.biv) #log odds (coefficients)
exp(coef(moratorium.binary.biv)) #odds ratio of displacement
```

<!-- * Compared to households who moved NOT during the COVID moratorium, the odds of being displaced decreases for households moving during the COVID moratorium ((0.93-1)*100=-7), compared to -10% for displacement (4). -->

##### Lifecycle

###### Lifecycle draft

Single-person hh, all over 65 hh, all under 35 hh, at least one older adult, family with child, other hh

```{r}
table(hh_df$f1lifecycle_draft)

lifedraft.biv<-glm(disp_housing_cost~1 + f1lifecycle_draft, 
                   family = binomial(link = "logit"), 
                   data = hh_df)
summary(lifedraft.biv)
coef(lifedraft.biv) #log odds (coefficients)
exp(coef(lifedraft.biv)) #odds ratio of displacement
```

<!-- * Compared to single-person households, the risk of being displaced decreases for all other household types, except for those with at least one older adult ((1.08-1)\*100=8) - a 8% increase in the odds of being displaced, compared to 4% increase for displacement (4).  -->

<!-- * For families with child(ren), there is a 35% decrease in the odds of being displaced ((0.68-1)\*100=-32), compared to -35% for displacement (4).  -->

<!-- For households with all members under 35 or over 65, there is a 43% and 44% decrease in the odds of being displaced, respectively ((0.57-1)\*100=-43; (0.39-1)\*100=-61). Compared to a 43% and 44% decrease for displacement (4), respectively.  -->

###### Lifecycle 'final'

same as above, but family with child split into two groups: multiple-parent hh and single-parent hh

```{r}
table(hh_df$f1lifecycle_final)

lifefinal.biv<-glm(disp_housing_cost~1 + f1lifecycle_final, 
                   family = binomial(link = "logit"), 
                   data = hh_df)
summary(lifefinal.biv)
coef(lifefinal.biv) #log odds (coefficients)
exp(coef(lifefinal.biv)) #odds ratio of displacement
```

<!-- * Compared to single-person households, single parent households are less likely to be displaced ((0.82-1)*100=-18), compared to a 9% decrease for displacement (4) -->

<!-- * Multiple-parent households are less likely to be displaced ((0.66-1)*100=-34), compared to a 38% decrease in the odds of being displaced (4).  -->

###### Single parent vs not

```{r}
table(hh_df$single_parent)

singleparent.biv<-glm(disp_housing_cost~1 + single_parent, 
                      family = binomial(link = "logit"), 
                      data = hh_df)
summary(singleparent.biv)
coef(singleparent.biv) #log odds (coefficients)
exp(coef(singleparent.biv)) #odds ratio of displacement
```

<!-- * Compared to multiple-parent households, single parent households are more likely to be displaced ((1.03-1)*100=3 - a 3% increase in the odds of being displaced, compared to a 15% increase for displacement (4). -->

###### Families with children vs no children

```{r}
table(hh_df$children)

child.biv<-glm(disp_housing_cost~1 + children, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(child.biv)
coef(child.biv) #log odds (coefficients)
exp(coef(child.biv)) #odds ratio of displacement
```

<!-- * Compared to households with child(ren), households without child(ren) are more likely to be displaced ((1.21-1)*100=21 - a 21% increase in the odds of being displaced, compared to a 26% increase for displacement (4). -->

###### All adults over 65

Not including households with child(ren)

```{r}
table(hh_df$all_older_adults)

older.biv<-glm(disp_housing_cost~1 + all_older_adults, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(older.biv)
coef(older.biv) #log odds (coefficients)
exp(coef(older.biv)) #odds ratio of displacement
```

<!-- * Compared to households with all members over 65y, households where members are not all over 65y are more likely to be displaced ((2.11-1)*100=111 - a 111% increase in the odds of being displaced, compared to 43% increase for displacement (4). -->

###### Any adults over 65

Not including households with child(ren)

```{r}
table(hh_df$any_older_adults)

anyolder.biv<-glm(disp_housing_cost~1 + any_older_adults, 
                  family = binomial(link = "logit"), 
                  data = hh_df)
summary(anyolder.biv)
coef(anyolder.biv) #log odds (coefficients)
exp(coef(anyolder.biv)) #odds ratio of displacement
```

<!-- * Compared to households with at least one member over 65y, households without any members over 65y are less likely to be displaced ((0.74-1)*100=-26 - a 26% decrease in the odds of being displaced, compared to a 25% decrease for displacement (4). -->

###### All adults younger than 35

Not including households with child(ren)

```{r}
table(hh_df$all_young_adults)

younger.biv<-glm(disp_housing_cost~1 + all_young_adults, 
                 family = binomial(link = "logit"), 
                 data = hh_df)
summary(younger.biv)
coef(younger.biv) #log odds (coefficients)
exp(coef(younger.biv)) #odds ratio of displacement
```

<!-- * Compared to households with all members younger than 35y, households with at least one member over 35y are more likely to be displaced ((1.51-1)*100=51 - a 51% increase in the odds of being displaced, compared to a 48% increase for displacement (4). -->

##### Vehicles/drivers

```{r}
table(hh_df$veh_drivers)

veh.biv<-glm(disp_housing_cost~1 + veh_drivers, 
             family = binomial(link = "logit"), 
             data = hh_df)
summary(veh.biv)
coef(veh.biv) #log odds (coefficients)
exp(coef(veh.biv)) #odds ratio of displacement
```

<!-- * Each unit increase in the vehicle/driver ratio is associated with a (0.83 - 1 = -0.17) decrease in the odds of being displaced -->

#### 3b. Multivariate analyses - Housing Cost

This model includes all of the variables that were significant in the bivariate analyses.

```{r}
housing.hts.1<-glm(disp_housing_cost~1 + 
                     # significance <=0.001
                     f1hhincome_bin5 + f1prev_rent_own_bin2 +
                     f1prev_res_type_simp + f1res_type_transition +
                     # significance <0.01
                     all_older_adults +
                     # significance <= 0.05
                     f1hh_race_category_4 + veh_drivers,
                   family = binomial(link = "logit"), 
                   data = hh_df)
summary(housing.hts.1)

arm::coefplot(housing.hts.1)

confint(housing.hts.1) #confidence intervals
# coef(housing.hts.1) #log odds
exp(coef(housing.hts.1)) #exponentiate to get predicted odds- odds ratio coefficients
```

```{r}
BIC(housing.hts.1)

# extract residual and null deviances
# objects(housing.hts.1)

# calculate the pseudo-R2 value:
pseudoR2_hts.housing <- (housing.hts.1$null.deviance - housing.hts.1$deviance) / housing.hts.1$null.deviance
pseudoR2_hts.housing
```

The model explains 8.5% of the variability in the data.

#### 3c. Multivariate analyses refined - Housing Cost

This model includes all of the variables that were significant in the bivariate analyses and then refined to those significant in the multivariate model (3b).

```{r}
housing.hts.2<-glm(disp_housing_cost~1 +
                     f1hhincome_bin5 + f1prev_rent_own_bin2 +
                     f1prev_res_type_simp + f1res_type_transition,
                 family = binomial(link = "logit"), 
                 data = hh_df)
summary(housing.hts.2)

# to get frequency/proportion for each variable 
Hmisc::describe(as.factor(disp_housing_cost)~1 + #disp_binary needs to be factor otherwise summary stats are numeric
                  f1hhincome_bin5 + f1prev_rent_own_bin2 +
                  f1prev_res_type_simp + f1res_type_transition,
                family = binomial(link = "logit"), 
                data = hh_df,
                na.action=na.omit)

arm::coefplot(housing.hts.2)

confint(housing.hts.2) #confidence intervals
# coef(housing.hts.2) #log odds
exp(coef(housing.hts.2)) #exponentiate to get predicted odds- odds ratio coefficients
```

```{r}
BIC(housing.hts.2)

# extract residual and null deviances
# objects(housing.hts.2)

# calculate the pseudo-R2 value:
pseudoR2_housing.2 <- (housing.hts.2$null.deviance - housing.hts.2$deviance) / housing.hts.2$null.deviance
pseudoR2_housing.2
```

The model explains 6.9% of the variability in the data.

### Displacement - Community Change

#### 2. Null Model - Community Change

```{r}
# null model
community.null<-glm(disp_community~1,family=binomial(link="logit"), data=hh_df)
summary(community.null) #intercept value - same log odds for everyone to predict
coef(community.null) #log odds (coefficients)
exp(coef(community.null)) #odds ratio of displacement: 0.38 to 1
exp(coef(community.null))/(1+(exp(coef(disp3.null)))) #probability of being displaced: 0.27
mean(hh_df$disp_community) #0.05
```

#### 3a. Bivariate analyses - Community Change

##### Household income (5 bins)

```{r}
table(hh_df$f1hhincome_bin5)

income.biv<-glm(disp_community~1 + f1hhincome_bin5, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(income.biv)
coef(income.biv) #log odds (coefficients)
exp(coef(income.biv)) #odds ratio of displacement
```

<!-- * Compared to households making \$100,000 or more, the odds of being displaced increase as income decreases -->

<!-- * $25,000 or less: ((2.88-1)*100) = 188 percent change in the odds or a 188% increase in the odds of being displaced compared to households making \$100,000 or more, controlling for the other income categories in the model, compared to 194% for displacement (4) -->

##### Household race (4 categories)

AANHPI non-Hispanic, Hispanic, Missing/No response, Other POC non-Hispanic, White non-Hispanic

```{r}
table(hh_df$f1hh_race_category_4)

hhrace.biv<-glm(disp_community~1 + f1hh_race_category_4, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(hhrace.biv)
coef(hhrace.biv) #log odds (coefficients)
exp(coef(hhrace.biv)) #odds ratio of displacement
```

<!-- * Compared to white non-Hispanic households, the odds of being displaced decreases for AANHPI households and increases for other POC households -->

<!-- * Other POC non-Hispanic households: ((1.65-1)*100) = 65 percent change in the odds or a 65% increase in the odds of being displaced compared to white non-Hispanic households, controlling for the other income categories in the model, compared to 54% increase for displacement (4) -->

##### Previous housing tenure

```{r}
table(hh_df$f1prev_rent_own_bin2)

tenure.biv<-glm(disp_community~1 + f1prev_rent_own_bin2, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(tenure.biv)
coef(tenure.biv) #log odds (coefficients)
exp(coef(tenure.biv)) #odds ratio of displacement
```

<!-- * Compared to households that own their homes, the odds of being displaced increases for renter households by ((3.67-1)*100=267) 267%, or a 267% increase in the odds of being displaced, compared to 162% for displacement (4) -->

##### Previous housing type

```{r}
table(hh_df$f1prev_res_type_simp)

housingtype.biv<-glm(disp_community~1 + f1prev_res_type_simp, 
                     family = binomial(link = "logit"), 
                     data = hh_df)
summary(housingtype.biv)
coef(housingtype.biv) #log odds (coefficients)
exp(coef(housingtype.biv)) #odds ratio of displacement
```

<!-- * Compared to households previously living in single-family homes, the odds of being displaced increases for households previously living in homes categorized as lower-density shared walls (Townhouse, Building with 3 or fewer apartments/condos) and higher-density shared walls (Building with 4 or more apartments/condos) - ((1.65-1)\*100=65) a 65% increase and ((1.88-1)\*100=88) 88% increase in the odds of being displaced, respectively. This compared to 52% increase and 58% increase for displacement (4), respecitvely.   -->

##### Housing transition

```{r}
table(hh_df$f1res_type_transition)

transition.biv<-glm(disp_community~1 + f1res_type_transition, 
                    family = binomial(link = "logit"), 
                    data = hh_df)
summary(transition.biv)
coef(transition.biv) #log odds (coefficients)
exp(coef(transition.biv)) #odds ratio of displacement
```

<!-- * Compared to no change, the odds of being displaced decreases for households transitioning to less space and higher density ((0.86-1)*100=-14) - a 14% decrease in the odds of being displaced, compared to 2% decrease for displacement (4) -->

<!-- * Compared to no change, the odds of being displaced decreases for households transitioning to more space and less density ((0.69-1)*100=-31) - a 31% decrease in the odds of being displaced, compared to 32% decrease for displacement (4) -->

<!-- * This may be related to lifecycle -->

##### Current RGC

```{r}
table(hh_df$f1_RGC)

rgc.biv<-glm(disp_community~1 + f1_RGC, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(rgc.biv)
coef(rgc.biv) #log odds (coefficients)
exp(coef(rgc.biv)) #odds ratio of displacement
```

<!-- * Compared to households not currently living in the RGC, the odds of being displaced increases for households living in the RGC ((1.19-1)*100=19), compared to 32% increase for displacement (4). -->

##### COVID Moving

```{r}
table(hh_df$f1covid_moving)

covid.biv<-glm(disp_community~1 + f1covid_moving, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(covid.biv)
coef(covid.biv) #log odds (coefficients)
exp(coef(covid.biv)) #odds ratio of displacement
```

<!-- * Compared to households who moved before COVID, the odds of being displaced decreases for households moving after COVID ((0.98-1)*100=-2), similar to displacement (4). -->

##### COVID Moratorium

```{r}
table(hh_df$f1moratorium)

moratorium.biv<-glm(disp_community~1 + f1moratorium, 
                    family = binomial(link = "logit"), 
                    data = hh_df)
summary(moratorium.biv)
coef(moratorium.biv) #log odds (coefficients)
exp(coef(moratorium.biv)) #odds ratio of displacement
```

<!-- * Compared to households who moved before the COVID moratorium, the odds of being displaced decreases for households moving during the COVID moratorium ((0.92-1)*100=-8) and -6% for households moving after the COVID moratorium. -->

<!-- * For displacement (4): -10% for households moving during and about the same for households moving after the moratorium. -->

##### COVID Moratorium

```{r}
table(hh_df$f1moratorium_binary)

moratorium.binary.biv<-glm(disp_community~1 + f1moratorium_binary, 
                           family = binomial(link = "logit"), 
                           data = hh_df)
summary(moratorium.binary.biv)
coef(moratorium.binary.biv) #log odds (coefficients)
exp(coef(moratorium.binary.biv)) #odds ratio of displacement
```

<!-- * Compared to households who moved NOT during the COVID moratorium, the odds of being displaced decreases for households moving during the COVID moratorium ((0.93-1)*100=-7), compared to -10% for displacement (4). -->

##### Lifecycle

###### Lifecycle draft

Single-person hh, all over 65 hh, all under 35 hh, at least one older adult, family with child, other hh

```{r}
table(hh_df$f1lifecycle_draft)

lifedraft.biv<-glm(disp_community~1 + f1lifecycle_draft, 
                   family = binomial(link = "logit"), 
                   data = hh_df)
summary(lifedraft.biv)
coef(lifedraft.biv) #log odds (coefficients)
exp(coef(lifedraft.biv)) #odds ratio of displacement
```

<!-- * Compared to single-person households, the risk of being displaced decreases for all other household types, except for those with at least one older adult ((1.08-1)\*100=8) - a 8% increase in the odds of being displaced, compared to 4% increase for displacement (4).  -->

<!-- * For families with child(ren), there is a 35% decrease in the odds of being displaced ((0.68-1)\*100=-32), compared to -35% for displacement (4).  -->

<!-- For households with all members under 35 or over 65, there is a 43% and 44% decrease in the odds of being displaced, respectively ((0.57-1)\*100=-43; (0.39-1)\*100=-61). Compared to a 43% and 44% decrease for displacement (4), respectively.  -->

###### Lifecycle 'final'

same as above, but family with child split into two groups: multiple-parent hh and single-parent hh

```{r}
table(hh_df$f1lifecycle_final)

lifefinal.biv<-glm(disp_community~1 + f1lifecycle_final, 
                   family = binomial(link = "logit"), 
                   data = hh_df)
summary(lifefinal.biv)
coef(lifefinal.biv) #log odds (coefficients)
exp(coef(lifefinal.biv)) #odds ratio of displacement
```

<!-- * Compared to single-person households, single parent households are less likely to be displaced ((0.82-1)*100=-18), compared to a 9% decrease for displacement (4) -->

<!-- * Multiple-parent households are less likely to be displaced ((0.66-1)*100=-34), compared to a 38% decrease in the odds of being displaced (4).  -->

###### Single parent vs not

```{r}
table(hh_df$single_parent)

singleparent.biv<-glm(disp_community~1 + single_parent, 
                      family = binomial(link = "logit"), 
                      data = hh_df)
summary(singleparent.biv)
coef(singleparent.biv) #log odds (coefficients)
exp(coef(singleparent.biv)) #odds ratio of displacement
```

<!-- * Compared to multiple-parent households, single parent households are more likely to be displaced ((1.03-1)*100=3 - a 3% increase in the odds of being displaced, compared to a 15% increase for displacement (4). -->

###### Families with children vs no children

```{r}
table(hh_df$children)

child.biv<-glm(disp_community~1 + children, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(child.biv)
coef(child.biv) #log odds (coefficients)
exp(coef(child.biv)) #odds ratio of displacement
```

<!-- * Compared to households with child(ren), households without child(ren) are more likely to be displaced ((1.21-1)*100=21 - a 21% increase in the odds of being displaced, compared to a 26% increase for displacement (4). -->

###### All adults over 65

Not including households with child(ren)

```{r}
table(hh_df$all_older_adults)

older.biv<-glm(disp_community~1 + all_older_adults, 
                family = binomial(link = "logit"), 
                data = hh_df)
summary(older.biv)
coef(older.biv) #log odds (coefficients)
exp(coef(older.biv)) #odds ratio of displacement
```

<!-- * Compared to households with all members over 65y, households where members are not all over 65y are more likely to be displaced ((2.11-1)*100=111 - a 111% increase in the odds of being displaced, compared to 43% increase for displacement (4). -->

###### Any adults over 65

Not including households with child(ren)

```{r}
table(hh_df$any_older_adults)

anyolder.biv<-glm(disp_community~1 + any_older_adults, 
                  family = binomial(link = "logit"), 
                  data = hh_df)
summary(anyolder.biv)
coef(anyolder.biv) #log odds (coefficients)
exp(coef(anyolder.biv)) #odds ratio of displacement
```

<!-- * Compared to households with at least one member over 65y, households without any members over 65y are less likely to be displaced ((0.74-1)*100=-26 - a 26% decrease in the odds of being displaced, compared to a 25% decrease for displacement (4). -->

###### All adults younger than 35

Not including households with child(ren)

```{r}
table(hh_df$all_young_adults)

younger.biv<-glm(disp_community~1 + all_young_adults, 
                 family = binomial(link = "logit"), 
                 data = hh_df)
summary(younger.biv)
coef(younger.biv) #log odds (coefficients)
exp(coef(younger.biv)) #odds ratio of displacement
```

<!-- * Compared to households with all members younger than 35y, households with at least one member over 35y are more likely to be displaced ((1.51-1)*100=51 - a 51% increase in the odds of being displaced, compared to a 48% increase for displacement (4). -->

##### Vehicles/drivers

```{r}
table(hh_df$veh_drivers)

veh.biv<-glm(disp_community~1 + veh_drivers, 
             family = binomial(link = "logit"), 
             data = hh_df)
summary(veh.biv)
coef(veh.biv) #log odds (coefficients)
exp(coef(veh.biv)) #odds ratio of displacement
```

<!-- * Each unit increase in the vehicle/driver ratio is associated with a (0.83 - 1 = -0.17) decrease in the odds of being displaced -->

#### 3b. Multivariate analyses - Community Change

This model includes all of the variables that were significant in the bivariate analyses.

```{r}
community.hts.1<-glm(disp_community~1 + 
                       # significance <=0.001
                       f1_RGC + 
                       # significance <0.01
                       f1hhincome_bin5 +
                       # significance <= 0.05
                       f1prev_res_type_simp + f1res_type_transition + 
                       # significance <=0.1
                       children,
                     family = binomial(link = "logit"), 
                     data = hh_df)
summary(community.hts.1)

arm::coefplot(community.hts.1)

confint(community.hts.1) #confidence intervals
# coef(community.hts.1) #log odds
exp(coef(community.hts.1)) #exponentiate to get predicted odds- odds ratio coefficients
```

```{r}
BIC(community.hts.1)

# extract residual and null deviances
# objects(community.hts.1)

# calculate the pseudo-R2 value:
pseudoR2_hts.community <- (community.hts.1$null.deviance - community.hts.1$deviance) / community.hts.1$null.deviance
pseudoR2_hts.community
```

The model explains 2.9% of the variability in the data.

#### 3c. Multivariate analyses refined - Community Change

This model includes all of the variables that were significant in the bivariate analyses and then refined to those significant in the multivariate model (3b).

```{r}
community.hts.2<-glm(disp_community~1 +
                       f1_RGC + 
                       f1hhincome_bin5 +
                       f1res_type_transition,
                     family = binomial(link = "logit"), 
                     data = hh_df)
summary(community.hts.2)

# to get frequency/proportion for each variable 
Hmisc::describe(as.factor(disp_community)~1 + #disp_binary needs to be factor otherwise summary stats are numeric
                  f1_RGC + 
                  f1hhincome_bin5 +
                  f1res_type_transition,
                family = binomial(link = "logit"), 
                data = hh_df,
                na.action=na.omit)

arm::coefplot(community.hts.2)

confint(community.hts.2) #confidence intervals
# coef(community.hts.2) #log odds
exp(coef(community.hts.2)) #exponentiate to get predicted odds- odds ratio coefficients
```

```{r}
BIC(community.hts.2)

# extract residual and null deviances
# objects(community.hts.2)

# calculate the pseudo-R2 value:
pseudoR2_community.2 <- (community.hts.2$null.deviance - community.hts.2$deviance) / community.hts.2$null.deviance
pseudoR2_community.2
```

The model explains 2.5% of the variability in the data.
