---
title: "Lifecycle Analysis"
format: html
editor: visual
warning: false
---

```{r, echo=FALSE}
# Loading in packages and libraries
library(devtools)
devtools::install_github('rsgInc/travelSurveyTools')
devtools::install_github('psrc/psrcelmer')
devtools::install_github('psrc/psrcplot')

# libraries
library(data.table)
library(stringr)
library(travelSurveyTools)
library(psrcelmer)
library(dplyr)
library(psrcplot)
library(tidyverse)
library(kableExtra)
library(scales)
library(psrcplot)
```

```{r, echo=FALSE}
# Read in Codebook
cb_path = str_glue("J:/Projects/Surveys/HHTravel/Survey2023/Data/data_published/PSRC_Codebook_2023_v1.xlsx")

variable_list = readxl::read_xlsx(cb_path, sheet = 'variable_list')
value_labels = readxl::read_xlsx(cb_path, sheet = 'value_labels')

setDT(variable_list)
setDT(value_labels)

# somehow a duplicate snuck into the variable list not sure how
variable_list<-variable_list%>%distinct(variable, .keep_all=TRUE)
```

```{r, echo=FALSE}
# Read in Data from Elmer
person<- get_query(sql= "select household_id as hh_id,
person_id, survey_year, age, person_weight
                from HHSurvey.v_persons_labels where survey_year = 2023")

hh<- get_query(sql= "select household_id as hh_id, hhsize
                from HHSurvey.v_households_labels where survey_year = 2023")


setDT(person)
setDT(hh)
```

```{r, echo=FALSE}
# Set ID's as characters
person[, hh_id:=as.character(hh_id)]
person[, person_id := as.character(person_id)]
person <- person%>%mutate(survey_year=as.character(survey_year))

hh[, hh_id:=as.character(hh_id)]
```

## Age

```{r}
# count how many age groups a household selected


hh_id_multiple_23_age <- person %>%
  group_by(hh_id) %>%
  mutate(age_by_hh = n()) %>% 
  ungroup()

# table of a breakdown of each household's age
hh_age_bkdwn <- person %>% 
  # count number of people by age and household id
  group_by(hh_id, age) %>%
  summarise(count = n()) %>% 
  # long to wide format + fill NA with 0
  pivot_wider(id_cols = hh_id, names_from = age, values_from = count, values_fill = 0) %>% 
  mutate(total_hh_members = sum(c_across(`12-15 years`:`85 years or older`))) %>% 
  relocate(`Under 5 years old`, .before = `12-15 years`) %>% 
  relocate(`5-11 years`, .before = `12-15 years`) %>% 
  relocate(`18-24 years`, .before = `35-44 years`) %>% 
  relocate(`25-34 years`, .before = `35-44 years`) %>% 
  relocate(`55-64 years`, .after = `45-54 years`) %>%
  # mutate(hh_size_total = sum(number)) # I first need to find out the total hh for each hh size
  ungroup() %>%
  mutate(total_hh = n()) %>% 
  group_by(total_hh_members) %>% 
  mutate(hh_by_size_total= n(),
         proportion = hh_by_size_total / total_hh) %>% 
  ungroup()



```

## Summary Knowledge

HH breakdown

-   1 person 44%

-   2 person 36%

-   3 person 10%

-   4 person 7%

-   5 person 2%

-   6 person 0.6%

-   7 person 0.2%

-   8 person 0.03%

One person HH

-   85+ 0.9%

-   75-84 years old 7.5%

-   65â€“74 years old 17%

-   55-64 years old 15.2%

-   45-54 years old 12.2%

-   35-44 years old 16.5 %

-   25-34 yeas old 24.8%

-   18-24 years old 6%

# One Person Households

```{r,echo=FALSE}

# ideally I want to create a column of the sum of each houshold and create a proportion column
all_hh <- hh_age_bkdwn %>% 
  group_by(total_hh_members, `Under 5 years old`,`5-11 years`,`12-15 years`,`16-17 years`,`18-24 years`,`25-34 years`,`35-44 years`,`45-54 years`,`55-64 years`,`65-74 years`,`75-84 years`,`85 years or older`) %>%
  summarise(count = n())


# table of people with people with only one person in the hh
one_p_hh <- hh_age_bkdwn %>%
  filter(total_hh_members == 1) %>% 
  group_by(`Under 5 years old`,`5-11 years`,`12-15 years`,`16-17 years`,`18-24 years`,`25-34 years`,`35-44 years`,`45-54 years`,`55-64 years`,`65-74 years`,`75-84 years`,`85 years or older`) %>%
  summarise(count = n()) %>% 
  ungroup() %>%
  arrange(desc(count)) %>% 
  mutate(prop = round(count / sum(count), digits = 3))


kbl(one_p_hh) %>% 
  kable_styling(bootstrap_options = c("striped"), html_font = "Poppins")

```

# 2 Person Households

```{r, echo=FALSE}
# table of people people with people with two person in the hh
two_p_hh <- hh_age_bkdwn %>% 
  filter(total_hh_members == 2) %>% 
  group_by(across(`Under 5 years old`:`85 years or older`)) %>% 
  summarise(count = n()) %>% 
  ungroup() %>%
  arrange(desc(count)) %>% 
  mutate(prop = round(count / sum(count), digits = 3))

kbl(head(two_p_hh, n=10)) %>% 
  kable_styling(bootstrap_options = c("striped"), html_font = "Poppins")

```

# 3 Person Households

```{r, echo=FALSE}
three_p_hh <- hh_age_bkdwn %>% 
  filter(total_hh_members == 3) %>% 
  group_by(across(`Under 5 years old`:`85 years or older`)) %>% 
  summarise(count = n()) %>% 
  ungroup() %>%
  arrange(desc(count)) %>% 
  mutate(prop = round(count / sum(count), digits = 3))

kbl(head(three_p_hh, n=10)) %>% 
  kable_styling(bootstrap_options = c("striped"), html_font = "Poppins")
```

```{r, echo=FALSE}

# I should create a function that can create these tables

# Other hh with 4+ people
four_p_hh <- hh_age_bkdwn %>% 
  filter(total_hh_members == 4) %>% 
  group_by(across(`Under 5 years old`:`85 years or older`)) %>% 
  summarise(count = n()) %>% 
  ungroup() %>%
  arrange(desc(count)) %>% 
  mutate(prop = round(count / sum(count), digits = 3))

five_p_hh <- hh_age_bkdwn %>% 
  filter(total_hh_members == 5) %>% 
  group_by(across(`Under 5 years old`:`85 years or older`)) %>% 
  summarise(count = n()) %>% 
  ungroup() %>%
  arrange(desc(count)) %>% 
  mutate(prop = round(count / sum(count), digits = 3))

six_p_hh <- hh_age_bkdwn %>% 
  filter(total_hh_members == 6) %>% 
  group_by(across(`Under 5 years old`:`85 years or older`)) %>% 
  summarise(count = n()) %>% 
  ungroup() %>%
  arrange(desc(count)) %>% 
  mutate(prop = round(count / sum(count), digits = 3))

seven_p_hh <- hh_age_bkdwn %>% 
  filter(total_hh_members == 7) %>% 
  group_by(across(`Under 5 years old`:`85 years or older`)) %>% 
  summarise(count = n()) %>% 
  ungroup() %>%
  arrange(desc(count)) %>% 
  mutate(prop = round(count / sum(count), digits = 3))

eight_p_hh <- hh_age_bkdwn %>% 
  filter(total_hh_members == 8) %>% 
  group_by(across(`Under 5 years old`:`85 years or older`)) %>% 
  summarise(count = n()) %>% 
  ungroup() %>%
  arrange(desc(count)) %>% 
  mutate(prop = round(count / sum(count), digits = 3))

```

## Proportions

```{r}
hh_by_age <- hh_age_bkdwn %>% 
  mutate(`65 years or older` = rowSums(across(c('65-74 years', '75-84 years','85 years or older'))),
         `Under 18 years old` = rowSums(across(c('Under 5 years old', '5-11 years', 
                                                 '12-15 years', '16-17 years'))),
         `75 years or older` = rowSums(across(c('75-84 years','85 years or older'))),
         `18 years or older` = rowSums(across(c('18-24 years':'85 years or older')))
        )

```

# How many Households with people 65+?

-   953 Households \~26% of all Households

```{r, echo=FALSE}
#creating a combined column of people 65+
#filtered for hh with at least one person above 65
ans1 <- hh_by_age %>% 
  filter(`65 years or older`!= 0)
nrow(ans1)

```

# How many Households with children under 18?

-   606 Households \~16.5% of all Households

```{r, echo=FALSE}
#creating a combined column of people under 18
# filtered out columns that have 0 children
ans2 <- hh_by_age %>% 
  filter(`Under 18 years old`!= 0)
nrow(ans2)

```

# How many hh with someone 65+ and under 18?

-   24 Households \~0.7%

```{r, echo =FALSE}
ans3 <- hh_by_age %>% 
  filter(`Under 18 years old` != 0 & `65 years or older` != 0)
```

# What is the comparison of hh age 65-74 and 75+?

-   75+ 347 households \~9.5%
-   65-74 686 households (There is overlap between hh with 65-74 and 75+) \~ 18.7%

```{r}

hh_by_age %>% filter(`75 years or older` != 0) %>% nrow()
  
a <- hh_by_age %>% filter(`65-74 years` != 0)

```

# What is the distribution of hh with children (under 18) and 1 adult, 2 adult, or 3+ adults?

-   71 Households with 1 adult

-   475 Households with two adults

-   60 Households with three or more adults

```{r}
ans5 <- hh_by_age %>% 
  filter(`Under 18 years old` !=0)

ans5 %>% filter(`18 years or older` == 1) %>% nrow()

ans5  %>% filter(`18 years or older` == 2) %>% nrow()

ans5  %>% filter(`18 years or older` >= 3) %>% nrow()

```

# What is the distribution of hh between 18 and 64 (adults)?

```{r}



adult_hh1 <- hh_by_age %>% 
  filter(total_hh_members == 1) %>%
  group_by(across(`18-24 years`:`85 years or older`)) %>%
  summarise(count = n()) %>%
  ungroup() %>% 
  arrange(desc(count)) %>% 
  mutate(prop = round(count / sum(count), digits = 3))

kbl(head(adult_hh1, n=10)) %>% 
  kable_styling(bootstrap_options = c("striped"), html_font = "Poppins")

adult_hh2 <- hh_by_age %>% 
  filter(total_hh_members == 2) %>% 
  group_by(across(`18-24 years`:`85 years or older`)) %>% 
  summarise(count = n()) %>% 
  ungroup() %>%
  arrange(desc(count)) %>% 
  mutate(prop = round(count / sum(count), digits = 3))

kbl(head(adult_hh2, n=10)) %>% 
  kable_styling(bootstrap_options = c("striped"), html_font = "Poppins")

```

```{r}
# hh with teens vs younger children
# make a chart
ans5 <- hh_by_age %>% 
  filter(`Under 18 years old` !=0)

# Create a logic where you split hh first on if they have kids under 12
# count the rest of hh with kids above 12

# Then compare that with hh with only kids under 12 and hh with kids above 12 and kids under 12

# Bottom Up approach
ans5_test <- ans5 %>% 
             mutate(kid_age = case_when(`Under 5 years old` != 0 ~ "young child",
                                        `5-11 years` != 0 ~ "young child",
                    TRUE~"teen child exclusive")) %>% 
  group_by(kid_age) %>%
  summarize(count = n()) %>% 
  ungroup()

static_column_chart(ans5_test, x='kid_age', y='count', fill='kid_age') +
  labs(title = "hh with young children and teens vs hh with only teens") +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20), plot.title=element_text(size=20), plot.caption = element_text(size=20))

# Top Down Approach
teen_hh <- ans5 %>% 
             mutate(kid_age = case_when(`12-15 years` != 0 ~ "teen child",
                                        `16-17 years` != 0 ~ "teen child",
                    TRUE~"young child exclusive")) %>% 
  group_by(kid_age) %>%
  summarize(count = n()) %>% 
  ungroup()

static_column_chart(teen_hh, x='kid_age', y='count', fill='kid_age') +
  labs(title = "hh with teens and young children vs hh with only young children") +
  theme(axis.text=element_text(size=20), axis.title=element_text(size=20), plot.title=element_text(size=20), plot.caption = element_text(size=20))

```

```{r}
# hh 
# filter to just adult hh (between 18-64)
# categorize the number of hh containing 18-24 year olds and so on and so forth

summary <- person %>% 
  filter(age %in% c("18-24 years", "25-34 years", "35-44 years", "45-54 years", "55-64 years")) %>% 
  group_by(hh_id) %>% 
  summarise(all_hh_age = paste(sort(unique(age)), collapse = "; ")) %>%
  ungroup() %>% 
  mutate(top_down = case_when(grepl("18-24", all_hh_age)~"18-24 years",
                                grepl("25-34", all_hh_age)~"25-34 years",
                                grepl("35-44", all_hh_age)~"35-44 years",
                                grepl("45-54", all_hh_age)~"45-54 years",
                                TRUE~"55-64 years"),
         
         bottom_up = case_when(grepl("55-64", all_hh_age)~"55-64 years",
                               grepl("45-54", all_hh_age)~"45-54 years",
                               grepl("35-44", all_hh_age)~"35-44 years",
                               grepl("25-34", all_hh_age)~"25-34 years",
                               TRUE~"18-24")) 
top_summary <- summary %>% 
  group_by(top_down) %>% 
  summarise(count_age = n()) %>% 
  ungroup()

bottom_summary <- summary %>% 
  group_by(bottom_up) %>% 
  summarise(count_age = n()) %>% 
  ungroup()

static_column_chart(top_summary, x='top_down', y='count_age', fill='top_down') +
  labs(title = "HH by Age (Top down)", caption = "data: Household Travel Survey 2023", x="HH Age Groups", y="Number of Households") +
  theme(axis.text=element_text(size=20), axis.title=element_text(size=20), plot.title=element_text(size=20), plot.caption = element_text(size=20))

static_column_chart(bottom_summary, x='bottom_up', y='count_age', fill='bottom_up') +
  labs(title = "HH by Age (bottom up)", caption = "data: Household Travel Survey 2023", x="HH Age Groups", y="Number of Households") +
  theme(axis.text=element_text(size=20), axis.title=element_text(size=20), plot.title=element_text(size=20), plot.caption = element_text(size=20))

```

```{r, echo=FALSE}
# combined chart of 18-34 year olds, 34-64 year olds, onlyt kid hh and only senior hh
bottom_summary <- summary %>% 
  group_by(bottom_up) %>% 
  summarise(count_age = n()) %>% 
  ungroup()

# aggregating rows
adult_cols <- bottom_summary %>%   
              mutate(bottom_up = case_when(grepl("18-24", bottom_up)~"18-34 years",
                                grepl("25-34", bottom_up)~"18-34 years",
                                TRUE~"35-64 years")) %>% 
  group_by(bottom_up) %>% 
  summarise(across(c(count_age), sum)) %>% 
  ungroup() %>% 
  rename_at('bottom_up', ~ 'hh_type')

kid_col <- person %>% 
  group_by(hh_id) %>% 
  summarise(all_hh_age = paste(sort(unique(age)), collapse = "; ")) %>%
  ungroup() %>% 
  mutate(kid = case_when(grepl("Under 5", all_hh_age)~"kid hh",
                                grepl("5-11", all_hh_age)~"kid hh",
                                grepl("12-15", all_hh_age)~"kid hh",
                                grepl("16-17", all_hh_age)~"kid hh",
                                TRUE~"not kid hh")) %>% 
  filter(kid == "kid hh") %>% 
  summarise(count_age = n()) %>% 
  mutate(hh_type = "hh with kids")
  
elderly_col <- person %>% 
  group_by(hh_id) %>% 
  summarise(all_hh_age = paste(sort(unique(age)), collapse = "; ")) %>%
  ungroup() %>% 
  mutate(elder = case_when(grepl("65-74", all_hh_age)~"old hh",
                           grepl("75-84", all_hh_age)~"old hh",
                           grepl("85 years", all_hh_age)~"old hh",
                                TRUE~"not old hh")) %>% 
  filter(elder == "old hh") %>% 
  summarise(count_age = n()) %>% 
  mutate(hh_type = "hh with elderly")

new_df <- list(adult_cols, kid_col, elderly_col) %>% reduce(full_join, by=c('hh_type', 'count_age'))

kbl(new_df) %>% 
  kable_styling(bootstrap_options = c("striped"), html_font = "Poppins")


static_column_chart(new_df, x='hh_type', y='count_age', fill='hh_type') +
  labs(title = "HH Type", caption = "data: Household Travel Survey 2023", x="HH Groups", y="Number of Households") +
  theme(axis.text=element_text(size=20), axis.title=element_text(size=20), plot.title=element_text(size=20), plot.caption = element_text(size=20))
```
