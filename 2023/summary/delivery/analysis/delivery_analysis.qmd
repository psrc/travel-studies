---
title: "2024 HTS delivery analysis"
format: 
  html:
    fig-width: 4
    fig-height: 3
    df-print: kable
  

echo: FALSE
warning: FALSE
---


```{r}
library(tidyverse)
library(psrc.travelsurvey)
library(psrcelmer)
library(travelSurveyTools)
library(data.table)
library(psrcplot)
library(sf)
install_psrc_fonts()

source("survey-23-preprocess_JLin.R")
cb_path <- "J:/Projects/Surveys/HHTravel/Survey2023/Data/data_published/PSRC_Codebook_2023_v1.xlsx"
variable_list <- readxl::read_xlsx(cb_path, sheet = 'variable_list')
value_labels = readxl::read_xlsx(cb_path, sheet = 'value_labels')

setDT(variable_list)
setDT(value_labels)
delivery_vars <- c("deliver_food", "deliver_grocery", "deliver_package", "deliver_work", "deliver_other",
                   "deliver_none", "deliver_elsewhere", "deliver_office")

# get data
hh_day_delivery <- readRDS("hh_day_delivery.rds")%>%
  mutate(day_id = paste0(as.character(hh_id),as.character(daynum))) %>% 
  mutate_at(vars(hh_id,day_id,survey_year), ~as.character(.)) %>% 
  mutate_at(vars(deliver_elsewhere:deliver_home_any), ~ifelse(is.na(.),"No",.))
setDT(hh_day_delivery)

hh <- get_query(sql= "select  household_id as hh_id, hhsize, hhincome_broad,home_jurisdiction, home_county, hh_weight,vehicle_count, home_rgcname, home_lat, home_lng, survey_year, numadults, numchildren, numworkers, num_students, rent_own, hh_race_category
                from HHSurvey.v_households_labels") %>% 
  mutate_at(vars(hh_id,survey_year), ~as.character(.)) %>%
  mutate(hhincome = case_when(hhincome_broad %in% c("Under $25,000","$25,000-$49,999")~'Under $50,000',
                              hhincome_broad %in% c("$50,000-$74,999",
                                                    "$75,000-$99,999")~"$50,000-$100,000",
                              hhincome_broad %in% c("$100,000 or more","$100,000-$199,000",
                                                    "$200,000 or more")~"$100,000+",
                              TRUE~hhincome_broad),
         hhincome2 = case_when(
           hhincome_broad %in% c("Under $25,000","$25,000-$49,999","$50,000-$74,999","$75,000-$99,999")~"Under $100,000",
hhincome_broad %in% c("$100,000 or more","$100,000-$199,000","$200,000 or more")~"$100,000+",
                               TRUE~hhincome_broad),
         hhincome3 = case_when(hhincome_broad %in% c("Under $25,000","$25,000-$49,999")~"Under $50,000",
                               hhincome_broad %in% c("$50,000-$74,999","$75,000-$99,999")~"$50,000-$99,999",
                               hhincome_broad %in% c("$100,000 or more","$100,000-$199,000","$200,000 or more")~"$100,000+",
                               TRUE~hhincome_broad),
         hhincome4 = case_when(hhincome_broad %in% c("$100,000 or more","$100,000-$199,000","$200,000 or more")~"$100,000+",
                               TRUE~hhincome_broad),
         hhincome5 = case_when(hhincome_broad %in% c("Under $25,000","$25,000-$49,999")~"Under $50,000",
                               hhincome_broad %in% c("$50,000-$74,999","$75,000-$99,999")~"$50,000-$99,999",
                               TRUE~hhincome_broad))

setDT(hh)
```
```{r}
hh_geo<-hh%>%
  st_as_sf(coords=c('home_lng','home_lat'), crs=4326)
```

#redo analysis with regional geographies
```{r}
regional.geogs<-st_read_elmergeo('REGIONAL_GEOGRAPHIES_evw')
```



```{r}
sf_use_s2(FALSE)
hh_reg_geog<-st_join(regional.geogs, hh_geo, join=st_intersects)%>%filter(!is.na(hh_id))

hh<-left_join(hh, hh_reg_geog, by='hh_id', suffix=c('','_geog'))
```



```{r}


hh<-hh%>%mutate(homegeog=case_when(
  home_rgcname=='Seattle Downtown'~ 'Seattle Downtown',
  (home_rgcname!='Seattle Downtown' & home_jurisdiction=='Seattle') ~ 'Seattle Outside Downtown',
   home_jurisdiction=='Bellevue' ~ 'Bellevue',
  ((home_county=='King' &!home_jurisdiction %in% c('Seattle', 'Bellevue'))|home_county=='Snohomish')~'Snohomish-King Suburban',
  .default=home_county
))
```


```{r}
variable_list<-add_variable(variable_list, 'hhsize_simple','day')
group_labels<-get_grouped_labels(group_id='group_1', group_name='hhsize_simple')
value_labels<-add_values_code(group_name='hhsize_simple')
hh<-grp_to_tbl(tbl=hh, ungrouped_name='hhsize', grouped_name='hhsize_simple')
```

```{r}
variable_list<-add_variable(variable_list, 'child_grp','day')
group_labels<-get_grouped_labels(group_id='group_1', group_name='child_grp')
value_labels<-add_values_code(group_name='child_grp')
hh<-grp_to_tbl(tbl=hh, ungrouped_name='numchildren', grouped_name='child_grp')
```

```{r}
variable_list<-add_variable(variable_list, 'wkr_grp','day')
group_labels<-get_grouped_labels(group_id='group_1', group_name='wkr_grp')
value_labels<-add_values_code(group_name='wkr_grp')
hh<-grp_to_tbl(tbl=hh, ungrouped_name='numworkers', grouped_name='wkr_grp')
```

```{r}

hts_hh <- list("hh" = hh)
hts_hh_day <- list("day" = hh_day_delivery %>% left_join(hh, by=c("hh_id","survey_year")))
```

```{r}
# reading in codebook


my_variable_list <- new_add_variable(variables_dt = variable_list, 
                                     variable_names = c("deliver_home_any","hhincome","hhincome2","hhincome3","hhincome4","hhincome5","hh_day_weight",
                                                        "homegeog", 'rgc_cat_home', 'class_desc'), 
                                     table_name = "day") %>%
  mutate(is_checkbox = ifelse(variable %in% delivery_vars, 0, is_checkbox),
         shared_name = ifelse(variable %in% delivery_vars, variable, shared_name),
         day = ifelse(variable %in% c("hhincome_broad", "home_county","numchildren", "numworkers", "numadults", "hhsize_simple"),1,day),
         data_type = ifelse(variable == "hh_day_weight", "numeric", data_type))
hh_variable_list <- new_add_variable(variables_dt = variable_list, 
                                     variable_names = c("hhincome","hhincome2","hhincome3","hhincome4","hhincome5"), 
                                     table_name = "hh")
```

### basic summaries for home delivery by delivery type

:::{.panel-tabset}
#### columns charts

```{r}
delivery_summ <- function(delivery_varname){
  # get table
  test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year",delivery_varname), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight")
  
  df_delivery <- test %>% filter(.[[delivery_varname]] == "Yes")
  df_delivery<- df_delivery%>%mutate(Year=as.character(survey_year))
  
  df_delivery
}
```

packages
```{r}

df_deliver_pkg<-delivery_summ('deliver_package')

static<-static_column_chart(df_deliver_pkg, x='Year', fill='deliver_package', y='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(df_deliver_pkg, 'deliver_pkg_trend.csv')
```
```{r}

df_deliver_work<-delivery_summ('deliver_work')

static<-static_column_chart(df_deliver_work, x='Year', fill='deliver_work', y='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(df_deliver_work, 'deliver_work_trend.csv')
```

```{r}

df_deliver_food<-delivery_summ('deliver_food')

static<-static_column_chart(df_deliver_food, x='Year', fill='deliver_food', y='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(df_deliver_food, 'deliver_food_trend.csv')
```

```{r}

df_deliver_grocery<-delivery_summ('deliver_grocery')

static<-static_column_chart(df_deliver_grocery, x='Year', fill='deliver_grocery', y='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(df_deliver_grocery, 'deliver_grocery_trend.csv')
```

```{r}

df_deliver_else<-delivery_summ('deliver_elsewhere')

static<-static_column_chart(df_deliver_else, x='Year', fill='Year', y='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(df_deliver_else, 'deliver_elsewhere_trend.csv')
```
```{r}

df_deliver_office<-delivery_summ('deliver_office')

static<-static_column_chart(df_deliver_office, x='Year', fill='Year', y='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(df_deliver_office, 'deliver_office_trend.csv')
```

### geography



#### line charts

```{r}
plot_delivery_line <- function(delivery_varname, plot_title){
  # get table
  test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year",delivery_varname), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight")
  
  df_delivery <- test %>% filter(.[[delivery_varname]] == "Yes") %>% 
    mutate(Year=as.factor(survey_year))%>%
    mutate(Proportion=prop)
  
  # plot
  my_plot<- ggplot(df_delivery, aes(x=Year,y=Proportion, group=1)) +
    geom_line() +
    geom_point() +
    theme_bw() +
    geom_errorbar(aes(ymin=prop-prop_moe, ymax=prop+prop_moe),
                  width=0.2, position = position_dodge(0.9)) +
    scale_y_continuous(labels = scales::percent, limits=c(0,NA)) +
    labs(title = plot_title) +
    psrc_style()
  
  print(my_plot)
}

plot_delivery_line("deliver_home_any","share of households with any package/service delivered on a typical weekday")
```

1. food
```{r}
plot_delivery_line("deliver_food","share of households with food delivered on a typical weekday")

```

2. grocery
```{r}
plot_delivery_line("deliver_grocery","share of households with grocery delivered on a typical weekday")

```

3. package
```{r}
plot_delivery_line("deliver_package","share of households with package delivered on a typical weekday")

```



## demographic characteristic

:::{.panel-tabset}

### column charts

- any delivery to home (including food, grocery and package)

:::{.panel-tabset}

#### household income
```{r}

plot_delivery2 <- function(df, group_varname, plot_title){
  ggplot(df, aes(x=as.factor(survey_year),y=prop, fill=df[[group_varname]])) +
    geom_col(position = "dodge") +
    theme_bw() +
    geom_errorbar(aes(ymin=prop-prop_moe, ymax=prop+prop_moe),
                  width=0.2, position = position_dodge(0.9)) +
    scale_y_continuous(labels = scales::percent) +
    scale_fill_discrete_psrc ("gnbopgy_10")+
    labs(title = plot_title) +
    psrc_style()
}

```

```{r}
delivery_summ_demo <- function(delivery_varname,demoname){
  # get table
  test <- get_hts_summary(hts_hh_day, 
                          summary_var = c(demoname,delivery_varname),
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight")
  
  df_delivery <- test %>% filter(.[[delivery_varname]] == "Yes")

  
  df_delivery
}
```

```{r}

summary<-delivery_summ_demo('deliver_package', 'hhincome_broad' )%>%
  mutate(hhincome_broad = factor(hhincome_broad,levels=c("Under $25,000","$25,000-$49,999", "$50,000-$74,999", "$75,000-$99,999","$100,000-$199,000", "$200,000 or more")))%>%filter(!is.na(hhincome_broad))


static<-static_bar_chart(summary, y='hhincome_broad', fill='hhincome_broad', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_package_income_trend.csv')
```
```{r}

summary<-delivery_summ_demo('deliver_package', 'hhincome' )



static<-static_bar_chart(summary, y='hhincome', fill='hhincome', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_package_income_ls.csv')
```


```{r}

summary<-delivery_summ_demo('deliver_package', 'hhsize_simple' )


static<-static_bar_chart(summary, fill='hhsize_simple', y='hhsize_simple', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_package_hhsize_trend.csv')
```

```{r}

summary<-delivery_summ_demo('deliver_grocery', 'hhincome_broad' )%>%
  mutate(hhincome_broad = factor(hhincome_broad,levels=c("Under $25,000","$25,000-$49,999", "$50,000-$74,999", "$75,000-$99,999","$100,000-$199,000", "$200,000 or more")))%>%filter(!is.na(hhincome_broad))

static<-static_bar_chart(summary, y='hhincome_broad', fill='hhincome_broad', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_grocery_income_trend.csv')
```
```{r}

summary<-delivery_summ_demo('deliver_grocery', 'hhsize_simple' )


static<-static_bar_chart(summary, fill='hhsize_simple', y='hhsize_simple', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_grocery_hhsize_trend.csv')
```
```{r}

summary<-delivery_summ_demo('deliver_food', 'hhincome_broad' )%>%
  mutate(hhincome_broad = factor(hhincome_broad,levels=c("Under $25,000","$25,000-$49,999", "$50,000-$74,999", "$75,000-$99,999","$100,000-$199,000", "$200,000 or more")))%>%filter(!is.na(hhincome_broad))

static<-static_bar_chart(summary, y='hhincome_broad', fill='hhincome_broad', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_food_income_trend.csv')
```
###by home county

```{r}

summary<-delivery_summ_demo('deliver_package', 'home_county' )%>%
filter(!is.na(home_county))


static<-static_bar_chart(summary, y='home_county', fill='home_county', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_package_county_trend.csv')
```
```{r}

summary<-delivery_summ_demo('deliver_grocery', 'home_county' )

static<-static_bar_chart(summary, y='home_county', fill='home_county', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_grocery_income_trend.csv')
```

```{r}

summary<-delivery_summ_demo('deliver_food', 'home_county' )

static<-static_bar_chart(summary, y='home_county', fill='home_county', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_food_income_trend.csv')
```
###by home county

```{r}

summary<-delivery_summ_demo('deliver_package', 'homegeog' )



static<-static_bar_chart(summary, y='homegeog', fill='homegeog', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_package_geog_trend.csv')
```
###by home county

```{r}

summary<-delivery_summ_demo('deliver_package', 'class_desc' )%>%
  mutate(class_desc=if_else(is.na(class_desc), "Outside Urban Growth Area", class_desc))%>%
  mutate(home_loc= case_when(class_desc=='CitiesTowns' ~ 'Cities and Towns',
                             class_desc=='HCT' ~ 'High Capacity Transit',
                             class_desc=='UU' ~ 'Urban Unincorporated',
                             TRUE ~ class_desc
    
  ))%>%mutate(home_loc=factor(home_loc))%>%
  mutate(home_loc=fct_reorder(home_loc, prop))
  


static<-static_bar_chart(summary, y='home_loc', fill='home_loc', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_package_geog_trend.csv')
```


```{r}

summary<-delivery_summ_demo('deliver_package', 'child_grp' )


static<-static_bar_chart(summary, y='child_grp', fill='child_grp', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_package_child_grp.csv')
```

```{r}

summary<-delivery_summ_demo('deliver_package', 'wkr_grp' )


static<-static_bar_chart(summary, y='wkr_grp', fill='wkr_grp', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_package_wkr_grp.csv')
```


```{r}

summary<-delivery_summ_demo('deliver_food', 'wkr_grp' )


static<-static_bar_chart(summary, y='wkr_grp', fill='wkr_grp', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_food_wkr_grp.csv')
```


```{r}

summary<-delivery_summ_demo('deliver_grocery', 'wkr_grp' )


static<-static_bar_chart(summary, y='wkr_grp', fill='wkr_grp', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_grocery_wkr_grp.csv')
```
```{r}

summary<-delivery_summ_demo('deliver_grocery', 'child_grp' )


static<-static_bar_chart(summary, y='child_grp', fill='child_grp', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_grocery_child_grp.csv')
```

```{r}
delivery_summ_demo_year <- function(delivery_varname,demoname, survey_year='survey_year'){
  # get table
  
    test<- summarize_weighted(hts_data= hts_hh_day,
                               summarize_var = delivery_varname,
                               summarize_by =  c(demoname, survey_year),
                               id_cols=c('day_id'),
                               wt_cols=c('hh_day_weight'),
                               wtname= 'hh_day_weight'
                               )
  
  
   summary<-test$summary$wtd
   summary
}
```

##any

```{r}
variable_list<-my_variable_list
summary<-delivery_summ_demo_year('deliver_package', 'hhincome_broad' )%>%filter(deliver_package=='Yes')

static<-static_column_chart(summary, x='survey_year', fill='hhincome_broad', y='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_package_income_pkg_year.csv')

```

```{r}
summary<-delivery_summ_demo_year('deliver_package', 'hhincome2' )%>%filter(deliver_package=='Yes')%>%filter(hhincome2!='Prefer not to answer')%>%mutate(
  hhincome2=factor(hhincome2, levels=c("Under $100,000",  "$100,000+"))
)

static<-static_column_chart(summary, x='survey_year', fill='hhincome2', y='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_package_income_pkg_year_agg.csv')

```


```{r}

test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year","hhincome5","deliver_home_any"), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight") %>% 
  filter(deliver_home_any == "Yes", hhincome5!="Prefer not to answer") %>%
  mutate(hhincome5 = factor(hhincome5,levels=c("Under $50,000","$50,000-$99,999","$100,000 or more","$100,000-$199,000", "$200,000 or more" )))%>%filter(survey_year==2023)

plot_delivery2(test,"hhincome5","delivery by household income")
```


#### home county

- any delivery to home (including food, grocery and package)
```{r}
test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year","home_county","deliver_home_any"), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight") %>% 
  filter(deliver_home_any == "Yes")%>%filter(survey_year==2023)

plot_delivery2(test,"home_county","delivery by home county")
```

:::

### line charts

1. household income

- any delivery to home (including food, grocery and package)
```{r}
plot_delivery_line2 <- function(df, group_varname, plot_title){
  ggplot(test, aes(x=as.factor(survey_year),y=prop, group=df[[group_varname]], color=df[[group_varname]])) +
    geom_line() +
    geom_point() +
    theme_bw() +
    # geom_errorbar(aes(ymin=prop-prop_moe, ymax=prop+prop_moe),width=0.2) +
    scale_y_continuous(labels = scales::percent, limits=c(0,NA)) +
    scale_color_manual(values=psrc_colors$gnbopgy_10)+
    labs(title = plot_title) +
    psrc_style()
}
```

```{r}
test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year","hhincome","deliver_home_any"), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight") %>% filter(deliver_home_any == "Yes", hhincome!="Prefer not to answer")



plot_delivery_line2(test,"hhincome","delivery by household income")

```

2. home county

- any delivery to home (including food, grocery and package)
```{r}
test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year","home_county","deliver_home_any"), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight") %>% 
  filter(deliver_home_any == "Yes")

plot_delivery_line2(test,"home_county","delivery by home county")
```

```{r}
day<- hh_day_delivery %>% left_join(hh, by=c("hh_id","survey_year"))

hh_data<-
  list(hh=hh, day=day)

ids = c('hh_id', 'day_id')
wts = c('hh_weight', 'hh_day_weight')
variable_list<-my_variable_list
output <- summarize_weighted(hts_data= hh_data,
                               summarize_var = 'deliver_home_any',
                               summarize_by = c('survey_year', 'hhsize'),
                               id_cols=ids,
                               wt_cols=wts,
                               wtname= 'hh_day_weight'
                               )
```
```

:::

### basic summaries for home delivery by delivery location

:::{.panel-tabset}

#### share of delivery households have deliveries to elsewhere

```{r}
# only include household-days with deliveries
hh_wDelivery <- hh_day_delivery %>% left_join(hh, by=c("hh_id","survey_year")) %>%
  filter(deliver_elsewhere=="Yes" | deliver_office=="Yes" | deliver_home_any=="Yes")
setDT(hh_wDelivery)

hts_hh_day_wDelivery <- list("day" = hh_wDelivery)
```

```{r}
# get table
col_list <- c("survey_year","delivery_location","count","prop","prop_moe","est","est_moe")
df_delivery <- get_hts_summary(hts_hh_day_wDelivery, 
                        summary_var = c("survey_year","deliver_elsewhere"), 
                        variables_dt = my_variable_list, 
                        id_var="day_id",
                        wt_var="hh_day_weight",
                        wt_name="hh_day_weight") %>% 
  filter(deliver_elsewhere == "Yes") %>%
  mutate(delivery_location = "elsewhere", .after="deliver_elsewhere") %>%
  select(col_list) %>%
  add_row(
    get_hts_summary(hts_hh_day_wDelivery, 
                            summary_var = c("survey_year","deliver_office"), 
                            variables_dt = my_variable_list, 
                            id_var="day_id",
                            wt_var="hh_day_weight",
                            wt_name="hh_day_weight") %>% 
      filter(deliver_office == "Yes") %>% 
      mutate(delivery_location = "office", .after="deliver_office") %>%
      select(col_list)
  ) #%>%
  # add_row(
  #   get_hts_summary(hts_hh_day_wDelivery, 
  #                           summary_var = c("survey_year","deliver_home_any"), 
  #                           variables_dt = my_variable_list, 
  #                           id_var="day_id",
  #                           wt_var="hh_day_weight",
  #                           wt_name="hh_day_weight") %>% 
  #     filter(deliver_home_any == "Yes", survey_year==2023) %>% 
  #     mutate(delivery_location = "home", .after="deliver_home_any") %>%
  #     select(col_list)
  # )

# plot

df_delivery[,c(1:3)]
ggplot(df_delivery, aes(x=as.factor(survey_year),y=prop, fill=delivery_location)) +
  geom_col(position = "dodge") +
  theme_bw() +
  geom_errorbar(aes(ymin=prop-prop_moe, ymax=prop+prop_moe),
                width=0.2, position = position_dodge(0.9)) +
  scale_y_continuous(labels = scales::percent) +
  scale_fill_discrete_psrc ("gnbopgy_10")+
  labs(title = "share of delivery households with deliveries received outside of home") +
  psrc_style()

```

#### deliveries to places other than home

1. office
```{r}
#| layout-ncol: 2

plot_delivery("deliver_office","share of households with package delivered at office on a typical weekday")

```

2. elsewhere
```{r}
#| layout-ncol: 2

plot_delivery("deliver_elsewhere","share of households with package delivered elsewhere on a typical weekday")

```


:::

