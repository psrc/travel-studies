---
title: "2024 HTS delivery analysis"
format: 
  html:
    fig-width: 4
    fig-height: 3
    df-print: kable
  

echo: FALSE
warning: FALSE
---


```{r}
library(tidyverse)
library(psrc.travelsurvey)
library(psrcelmer)
library(travelSurveyTools)
library(data.table)
library(psrcplot)
library(sf)
install_psrc_fonts()

source("survey-23-preprocess_JLin.R")

delivery_vars <- c("deliver_food", "deliver_grocery", "deliver_package", "deliver_work", "deliver_other",
                   "deliver_none", "deliver_elsewhere", "deliver_office")

# get data
hh_day_delivery <- readRDS("hh_day_delivery.rds")%>%
  mutate(day_id = paste0(as.character(hh_id),as.character(daynum))) %>% 
  mutate_at(vars(hh_id,day_id,survey_year), ~as.character(.)) %>% 
  mutate_at(vars(deliver_elsewhere:deliver_home_any), ~ifelse(is.na(.),"No",.))
setDT(hh_day_delivery)

hh <- get_query(sql= "select  household_id as hh_id, hhsize, hhincome_broad,home_jurisdiction, home_county, hh_weight,vehicle_count, home_rgcname, home_lat, home_lng, survey_year, hh_race_category
                from HHSurvey.v_households_labels") %>% 
  mutate_at(vars(hh_id,survey_year), ~as.character(.)) %>%
  mutate(hhincome = case_when(hhincome_broad %in% c("Under $25,000","$25,000-$49,999","$50,000-$74,999",
                                                    "$75,000-$99,999")~"Under $100,000",
                              hhincome_broad %in% c("$100,000 or more","$100,000-$199,000",
                                                    "$200,000 or more")~"$100,000+",
                              TRUE~hhincome_broad),
         hhincome2 = case_when(hhincome_broad %in% c("Under $25,000","$25,000-$49,999")~"Under $50,000",
                               hhincome_broad %in% c("$50,000-$74,999","$75,000-$99,999","$100,000 or more","$100,000-$199,000","$200,000 or more")~"$50,000+",
                               TRUE~hhincome_broad),
         hhincome3 = case_when(hhincome_broad %in% c("Under $25,000","$25,000-$49,999")~"Under $50,000",
                               hhincome_broad %in% c("$50,000-$74,999","$75,000-$99,999")~"$50,000-$99,999",
                               hhincome_broad %in% c("$100,000 or more","$100,000-$199,000","$200,000 or more")~"$100,000+",
                               TRUE~hhincome_broad),
         hhincome4 = case_when(hhincome_broad %in% c("$100,000 or more","$100,000-$199,000","$200,000 or more")~"$100,000+",
                               TRUE~hhincome_broad),
         hhincome5 = case_when(hhincome_broad %in% c("Under $25,000","$25,000-$49,999")~"Under $50,000",
                               hhincome_broad %in% c("$50,000-$74,999","$75,000-$99,999")~"$50,000-$99,999",
                               TRUE~hhincome_broad))

setDT(hh)
```


```{r}
uga.lyr<-st_read_elmergeo('URBAN_GROWTH_AREA_evw')
```


```{r}
center.lyr <- st_read_elmergeo('URBAN_CENTERS_evw')
```



```{r}
hh_geo<-hh%>%
  st_as_sf(coords=c('home_lng','home_lat'), crs=4326)
```


```{r}
hh_in_uga<-st_filter(hh_geo, uga.lyr)
```

```{r}
hh_in_uga<-hh_in_uga%>%mutate(in_uga=1)
```

```{r}
hh<-left_join(hh, hh_in_uga)
hh<-hh%>%  mutate(in_uga=if_else(is.na(in_uga), 0, 1))
```




```{r}
hh<-left_join(hh, center.lyr, by=join_by(home_rgcname==name), suffix= c("", '.origin'))
```








```{r }
hh<-hh%>%mutate(rgc_cat_home= 
                      case_when(is.na(category) ~ 'NotRGC',
                                category=='Metro' ~ 'MetroRGC',
                                category=='Urban' ~ 'UrbanRGC',
                                TRUE ~'Missing')
)

```

```{r}


hh<-hh%>%mutate(homegeog=case_when(
  home_rgcname=='Seattle Downtown'~ 'Seattle Downtown',
  (home_rgcname!='Seattle Downtown' & home_jurisdiction=='Seattle') ~ 'Seattle Outside Downtown',
   home_jurisdiction=='Bellevue' ~ 'Bellevue',
  ((home_county=='King' &!home_jurisdiction %in% c('Seattle', 'Bellevue'))|home_county=='Snohomish')~'Snohomish-King Suburban',
  .default=home_county
))
```

```{r}

hts_hh <- list("hh" = hh)
hts_hh_day <- list("day" = hh_day_delivery %>% left_join(hh, by=c("hh_id","survey_year")))
```

```{r}
# reading in codebook
cb_path <- "J:/Projects/Surveys/HHTravel/Survey2023/Data/data_published/PSRC_Codebook_2023_v1.xlsx"
variable_list <- readxl::read_xlsx(cb_path, sheet = 'variable_list')
variable_list<-add_variable(variable_list, 'homegeog','hh')
variable_list<-add_variable(variable_list, 'rgc_cat_home','hh')
setDT(variable_list)
my_variable_list <- new_add_variable(variables_dt = variable_list, 
                                     variable_names = c("deliver_home_any","hhincome","hhincome2","hhincome3","hhincome4","hhincome5","hh_day_weight"), 
                                     table_name = "day") %>%
  mutate(is_checkbox = ifelse(variable %in% delivery_vars, 0, is_checkbox),
         shared_name = ifelse(variable %in% delivery_vars, variable, shared_name),
         day = ifelse(variable %in% c("hhincome_broad", "home_county"),1,day),
         data_type = ifelse(variable == "hh_day_weight", "numeric", data_type))
hh_variable_list <- new_add_variable(variables_dt = variable_list, 
                                     variable_names = c("hhincome","hhincome2","hhincome3","hhincome4","hhincome5"), 
                                     table_name = "hh")
```


## share of households with package/service delivered on a typical weekday

- data: household-day data (count any person in the household with package/service delivered)
- all `NA` values are directly assigned as `"No"`
- calculate household-day weights: 
$$\text{household-day weight} = \frac{\text{household weight}}{\text{number of weekdays}}$$

- check household-day weights

```{r}
hh %>%
  group_by(survey_year) %>%
  summarise(sum(hh_weight)) %>%
  left_join(hh_day_delivery %>%
              group_by(survey_year) %>%
              summarise(sum(hh_day_weight)),
            by="survey_year")
```

- 2023 income distribution

```{r}
test <- get_hts_summary(hts_hh, 
                          summary_var = c("survey_year","hhincome_broad"), 
                          variables_dt = hh_variable_list, 
                          id_var="hh_id",
                          wt_var="hh_weight",
                          wt_name="hh_weight") %>%
  filter(survey_year==2023, hhincome_broad!="Prefer not to answer") %>%
  mutate(hhincome_broad = factor(hhincome_broad,levels=c("Under $25,000","$25,000-$49,999", "$50,000-$74,999", "$75,000-$99,999","$100,000-$199,000", "$200,000 or more")))

ggplot(test, aes(x=hhincome_broad,y=prop)) +
    geom_col(position = "dodge") +
    theme_bw() +
    geom_errorbar(aes(ymin=prop-prop_moe, ymax=prop+prop_moe),
                  width=0.2, position = position_dodge(0.9)) +
    scale_y_continuous(labels = scales::percent) +
    scale_fill_discrete_psrc ("gnbopgy_10")+
    # labs(title = plot_title) +
    psrc_style()
  
```

### basic summaries for home delivery by delivery type

:::{.panel-tabset}
#### columns charts

```{r}

plot_delivery <- function(delivery_varname, plot_title){
  # get table
  test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year",delivery_varname), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight")
  
  df_delivery <- test %>% filter(.[[delivery_varname]] == "Yes")
  
  # plot
  my_plot<- ggplot(df_delivery, aes(x=as.factor(survey_year),y=prop)) +
    geom_col() +
    theme_bw() +
    geom_errorbar(aes(ymin=prop-prop_moe, ymax=prop+prop_moe),
                  width=0.2, position = position_dodge(0.9)) +
    scale_y_continuous(labels = scales::percent) +
    labs(title = plot_title) +
    psrc_style()
  
  print(df_delivery[,c(1:3)] %>%
  arrange(survey_year, desc(.[[delivery_varname]])))
  print(my_plot)
}

```

- any delivery to home (including food, grocery and package)
```{r}
#| layout-ncol: 2

plot_delivery("deliver_home_any","share of households with any package/service delivered on a typical weekday")
```

1. food
```{r}
#| layout-ncol: 2

plot_delivery("deliver_food","share of households with food delivered on a typical weekday")

```

2. grocery
```{r}
#| layout-ncol: 2

plot_delivery("deliver_grocery","share of households with grocery delivered on a typical weekday")

```

3. package
```{r}
#| layout-ncol: 2

plot_delivery("deliver_package","share of households with package delivered on a typical weekday")

```


#### line charts

```{r}
plot_delivery_line <- function(delivery_varname, plot_title){
  # get table
  test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year",delivery_varname), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight")
  
  df_delivery <- test %>% filter(.[[delivery_varname]] == "Yes")
  
  # plot
  my_plot<- ggplot(df_delivery, aes(x=as.factor(survey_year),y=prop, group=1)) +
    geom_line() +
    geom_point() +
    theme_bw() +
    geom_errorbar(aes(ymin=prop-prop_moe, ymax=prop+prop_moe),
                  width=0.2, position = position_dodge(0.9)) +
    scale_y_continuous(labels = scales::percent, limits=c(0,NA)) +
    labs(title = plot_title) +
    psrc_style()
  
  print(my_plot)
}

plot_delivery_line("deliver_home_any","share of households with any package/service delivered on a typical weekday")
```

1. food
```{r}
plot_delivery_line("deliver_food","share of households with food delivered on a typical weekday")

```

2. grocery
```{r}
plot_delivery_line("deliver_grocery","share of households with grocery delivered on a typical weekday")

```

3. package
```{r}
plot_delivery_line("deliver_package","share of households with package delivered on a typical weekday")

```

:::

### basic summaries for home delivery by delivery location

:::{.panel-tabset}

#### share of delivery households have deliveries to elsewhere

```{r}
# only include household-days with deliveries
hh_wDelivery <- hh_day_delivery %>% left_join(hh, by=c("hh_id","survey_year")) %>%
  filter(deliver_elsewhere=="Yes" | deliver_office=="Yes" | deliver_home_any=="Yes")
setDT(hh_wDelivery)

hts_hh_day_wDelivery <- list("day" = hh_wDelivery)
```

```{r}
# get table
col_list <- c("survey_year","delivery_location","count","prop","prop_moe","est","est_moe")
df_delivery <- get_hts_summary(hts_hh_day_wDelivery, 
                        summary_var = c("survey_year","deliver_elsewhere"), 
                        variables_dt = my_variable_list, 
                        id_var="day_id",
                        wt_var="hh_day_weight",
                        wt_name="hh_day_weight") %>% 
  filter(deliver_elsewhere == "Yes") %>%
  mutate(delivery_location = "elsewhere", .after="deliver_elsewhere") %>%
  select(col_list) %>%
  add_row(
    get_hts_summary(hts_hh_day_wDelivery, 
                            summary_var = c("survey_year","deliver_office"), 
                            variables_dt = my_variable_list, 
                            id_var="day_id",
                            wt_var="hh_day_weight",
                            wt_name="hh_day_weight") %>% 
      filter(deliver_office == "Yes") %>% 
      mutate(delivery_location = "office", .after="deliver_office") %>%
      select(col_list)
  ) #%>%
  # add_row(
  #   get_hts_summary(hts_hh_day_wDelivery, 
  #                           summary_var = c("survey_year","deliver_home_any"), 
  #                           variables_dt = my_variable_list, 
  #                           id_var="day_id",
  #                           wt_var="hh_day_weight",
  #                           wt_name="hh_day_weight") %>% 
  #     filter(deliver_home_any == "Yes", survey_year==2023) %>% 
  #     mutate(delivery_location = "home", .after="deliver_home_any") %>%
  #     select(col_list)
  # )

# plot

df_delivery[,c(1:3)]
ggplot(df_delivery, aes(x=as.factor(survey_year),y=prop, fill=delivery_location)) +
  geom_col(position = "dodge") +
  theme_bw() +
  geom_errorbar(aes(ymin=prop-prop_moe, ymax=prop+prop_moe),
                width=0.2, position = position_dodge(0.9)) +
  scale_y_continuous(labels = scales::percent) +
  scale_fill_discrete_psrc ("gnbopgy_10")+
  labs(title = "share of delivery households with deliveries received outside of home") +
  psrc_style()

```

#### deliveries to places other than home

1. office
```{r}
#| layout-ncol: 2

plot_delivery("deliver_office","share of households with package delivered at office on a typical weekday")

```

2. elsewhere
```{r}
#| layout-ncol: 2

plot_delivery("deliver_elsewhere","share of households with package delivered elsewhere on a typical weekday")

```


:::


## demographic characteristic

:::{.panel-tabset}

### column charts

- any delivery to home (including food, grocery and package)

:::{.panel-tabset}

#### household income
```{r}

plot_delivery2 <- function(df, group_varname, plot_title){
  ggplot(df, aes(x=as.factor(survey_year),y=prop, fill=df[[group_varname]])) +
    geom_col(position = "dodge") +
    theme_bw() +
    geom_errorbar(aes(ymin=prop-prop_moe, ymax=prop+prop_moe),
                  width=0.2, position = position_dodge(0.9)) +
    scale_y_continuous(labels = scales::percent) +
    scale_fill_discrete_psrc ("gnbopgy_10")+
    labs(title = plot_title) +
    psrc_style()
}

```

```{r}

test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year","hhincome","deliver_home_any"), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight") %>% 
  filter(deliver_home_any == "Yes", hhincome!="Prefer not to answer") %>%
  mutate(hhincome = factor(hhincome,levels=c("Under $100,000","$100,000+")))

plot_delivery2(test,"hhincome","delivery by household income")
```


```{r}

test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year","hhincome_broad","deliver_home_any"), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight") %>% 
  filter(deliver_home_any == "Yes", hhincome_broad!="Prefer not to answer") %>%
  mutate(hhincome_broad = factor(hhincome_broad,levels=c("Under $25,000","$25,000-$49,999", "$50,000-$74,999", "$75,000-$99,999","$100,000-$199,000", "$200,000 or more")))

plot_delivery2(test,"hhincome_broad","delivery by household income")
```


```{r}

test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year","hhincome5","deliver_home_any"), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight") %>% 
  filter(deliver_home_any == "Yes", hhincome5!="Prefer not to answer") %>%
  mutate(hhincome5 = factor(hhincome5,levels=c("Under $50,000","$50,000-$99,999","$100,000 or more","$100,000-$199,000", "$200,000 or more" )))%>%filter(survey_year==2023)

plot_delivery2(test,"hhincome5","delivery by household income")
```


#### home county

- any delivery to home (including food, grocery and package)
```{r}
test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year","home_county","deliver_home_any"), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight") %>% 
  filter(deliver_home_any == "Yes")%>%filter(survey_year==2023)

plot_delivery2(test,"home_county","delivery by home county")
```

:::

### line charts

1. household income

- any delivery to home (including food, grocery and package)
```{r}
plot_delivery_line2 <- function(df, group_varname, plot_title){
  ggplot(test, aes(x=as.factor(survey_year),y=prop, group=df[[group_varname]], color=df[[group_varname]])) +
    geom_line() +
    geom_point() +
    theme_bw() +
    # geom_errorbar(aes(ymin=prop-prop_moe, ymax=prop+prop_moe),width=0.2) +
    scale_y_continuous(labels = scales::percent, limits=c(0,NA)) +
    scale_color_manual(values=psrc_colors$gnbopgy_10)+
    labs(title = plot_title) +
    psrc_style()
}
```

```{r}
test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year","hhincome","deliver_home_any"), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight") %>% filter(deliver_home_any == "Yes", hhincome!="Prefer not to answer")%>%
  mutate(hhincome = factor(hhincome,levels=c("Under $100,000","$100,000+")))



plot_delivery_line2(test,"hhincome","delivery by household income")

```

2. home county

- any delivery to home (including food, grocery and package)
```{r}
test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year","home_county","deliver_home_any"), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight") %>% 
  filter(deliver_home_any == "Yes")

plot_delivery_line2(test,"home_county","delivery by home county")
```

```{r}
day<- hh_day_delivery %>% left_join(hh, by=c("hh_id","survey_year"))

hh_data<-
  list(hh=hh, day=day)

ids = c('hh_id', 'day_id')
wts = c('hh_weight', 'hh_day_weight')
variable_list<-my_variable_list
output <- summarize_weighted(hts_data= hh_data,
                               summarize_var = 'deliver_home_any',
                               summarize_by = c('survey_year', 'hhsize'),
                               id_cols=ids,
                               wt_cols=wts,
                               wtname= 'hh_day_weight'
                               )
```
```

:::
