---
title: "2024 HTS delivery analysis"
format: 
  html:
    fig-width: 4
    fig-height: 3
    df-print: kable
  

echo: FALSE
warning: FALSE
---

## share of households with package/service delivered on a typical weekday

- data: household-day data (count any person in the household with package/service delivered)
- all `NA` values are directly assigned as `"No"`
- calculate household-day weights: 
$$\text{household-day weight} = \frac{\text{household weight}}{\text{number of weekdays}}$$

```{r}
library(tidyverse)
library(psrc.travelsurvey)
library(psrcelmer)
library(travelSurveyTools)
library(data.table)
library(psrcplot)
install_psrc_fonts()

source("../../survey-23-preprocess_JLin.R")

delivery_vars <- c("deliver_elsewhere", "deliver_food", "deliver_grocery",
                   "deliver_none", "deliver_office", "deliver_package")

# get data
hh_day_delivery <- readRDS("hh_day_delivery.rds")%>%
  mutate(day_id = paste0(as.character(hh_id),as.character(daynum))) %>% 
  mutate_at(vars(hh_id,day_id,survey_year), ~as.character(.)) %>% 
  mutate_at(vars(deliver_elsewhere:deliver_home_any), ~ifelse(is.na(.),"No",.))
setDT(hh_day_delivery)

hh <- get_query(sql= "select household_id as hh_id, survey_year, hhincome_broad, home_county
                         from HHSurvey.v_households_labels") %>% 
  mutate_at(vars(hh_id,survey_year), ~as.character(.)) %>%
  mutate(hhincome = case_when(hhincome_broad %in% c("Under $25,000","$25,000-$49,999","$50,000-$74,999")~"Under $75,000",
                              hhincome_broad %in% c("$75,000-$99,999","$100,000 or more","$100,000-$199,000",
                                                    "$200,000 or more")~"$75,000+",
                              TRUE~hhincome_broad))

setDT(hh)

hts_hh_day <- list("day" = hh_day_delivery %>% left_join(hh, by=c("hh_id","survey_year")))
```

```{r}
# reading in codebook
cb_path <- "J:/Projects/Surveys/HHTravel/Survey2023/Data/data_published/PSRC_Codebook_2023_v1.xlsx"
variable_list <- readxl::read_xlsx(cb_path, sheet = 'variable_list')
setDT(variable_list)
my_variable_list <- new_add_variable(variables_dt = variable_list, 
                                     variable_names = c("deliver_home_any","hhincome","hh_day_weight"), 
                                     table_name = "day") %>%
  mutate(is_checkbox = ifelse(variable %in% delivery_vars, 0, is_checkbox),
         shared_name = ifelse(variable %in% delivery_vars, variable, shared_name),
         day = ifelse(variable %in% c("hhincome_broad", "home_county"),1,day),
         data_type = ifelse(variable == "hh_day_weight", "numeric", data_type))

```

```{r}
#| layout-ncol: 2

plot_delivery <- function(delivery_varname, plot_title){
  # get table
  test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year",delivery_varname), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight")
  
  df_delivery <- test %>% filter(.[[delivery_varname]] == "Yes")
  
  # plot
  my_plot<- ggplot(df_delivery, aes(x=as.factor(survey_year),y=prop)) +
    geom_col() +
    theme_bw() +
    geom_errorbar(aes(ymin=prop-prop_moe, ymax=prop+prop_moe),
                  width=0.2, position = position_dodge(0.9)) +
    scale_y_continuous(labels = scales::percent) +
    labs(title = plot_title) +
    psrc_style()
  
  print(df_delivery[,c(1:3)] %>%
  arrange(survey_year, desc(.[[delivery_varname]])))
  print(my_plot)
}

```

### basic summaries for home delivery by delivery type

- any delivery to home (including food, grocery and package)
```{r}
#| layout-ncol: 2

plot_delivery("deliver_home_any","share of households with any package/service delivered on a typical weekday")
```

1. food
```{r}
#| layout-ncol: 2

plot_delivery("deliver_food","share of households with food delivered on a typical weekday")

```

2. grocery
```{r}
#| layout-ncol: 2

plot_delivery("deliver_grocery","share of households with grocery delivered on a typical weekday")

```

3. package
```{r}
#| layout-ncol: 2

plot_delivery("deliver_package","share of households with package delivered on a typical weekday")

```


### deliveries to places other than home

1. office
```{r}
#| layout-ncol: 2

plot_delivery("deliver_office","share of households with package delivered at office on a typical weekday")

```

2. elsewhere
```{r}
#| layout-ncol: 2

plot_delivery("deliver_elsewhere","share of households with package delivered elsewhere on a typical weekday")

```

## demographic characteristics

### household income

- any delivery to home (including food, grocery and package)
```{r}
test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year","hhincome","deliver_home_any"), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight")

ggplot(test %>% filter(deliver_home_any == "Yes", hhincome!="Prefer not to answer"), aes(x=as.factor(survey_year),y=prop, fill=hhincome)) +
  geom_col(position = "dodge") +
  theme_bw() +
  geom_errorbar(aes(ymin=prop-prop_moe, ymax=prop+prop_moe),
                width=0.2, position = position_dodge(0.9)) +
  scale_y_continuous(labels = scales::percent) +
  scale_fill_discrete_psrc ("gnbopgy_10")+
  labs(title = "delivery by household income") +
  psrc_style()
```

### home county

- any delivery to home (including food, grocery and package)
```{r}
test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year","home_county","deliver_home_any"), 
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight")

ggplot(test %>% filter(deliver_home_any == "Yes"), aes(x=as.factor(survey_year),y=prop, fill=home_county)) +
  geom_col(position = "dodge") +
  theme_bw() +
  geom_errorbar(aes(ymin=prop-prop_moe, ymax=prop+prop_moe),
                width=0.2, position = position_dodge(0.9)) +
  scale_y_continuous(labels = scales::percent) +
  scale_fill_discrete_psrc ("gnbopgy_10")+
  labs(title = "delivery by home county") +
  psrc_style()
```


