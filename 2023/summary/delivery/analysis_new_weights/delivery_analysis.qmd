---
title: "2024 HTS delivery analysis"
format: 
  html:
    fig-width: 4
    fig-height: 3
    df-print: kable
  

echo: FALSE
warning: FALSE
---


```{r}
library(tidyverse)
library(psrc.travelsurvey)
library(psrcelmer)
library(travelSurveyTools)
library(data.table)
library(psrcplot)
library(sf)
install_psrc_fonts()

source("survey-23-preprocess_JLin.R")
cb_path <- "J:/Projects/Surveys/HHTravel/Survey2023/Data/data_published/PSRC_Codebook_2023_v1.xlsx"
variable_list <- readxl::read_xlsx(cb_path, sheet = 'variable_list')
value_labels = readxl::read_xlsx(cb_path, sheet = 'value_labels')

setDT(variable_list)
setDT(value_labels)
delivery_vars <- c("deliver_food", "deliver_grocery", "deliver_package", "deliver_work", "deliver_other",
                   "deliver_none", "deliver_elsewhere", "deliver_office")

# get data
hh_day_delivery <- readRDS("hh_day_delivery.rds")%>%
  mutate(day_id = paste0(as.character(hh_id),as.character(daynum))) %>%
  mutate_at(vars(hh_id,day_id,survey_year), ~as.character(.)) %>%
  mutate_at(vars(deliver_elsewhere:deliver_home_any), ~ifelse(is.na(.),"No",.))
setDT(hh_day_delivery)

hh <- get_query(sql= "select  household_id as hh_id, hhsize, hhincome_broad,home_jurisdiction, home_county, hh_weight,vehicle_count, home_rgcname, home_lat, home_lng, survey_year, numadults, numchildren, numworkers, num_students, rent_own, hh_race_category
                from HHSurvey.v_households_labels") %>% 
  mutate_at(vars(hh_id,survey_year), ~as.character(.)) %>%
  mutate(
    hhincome_broad_pre2023 = factor(hhincome_broad,
                            levels=c("Under $25,000","$25,000-$49,999", "$50,000-$74,999", 
                                     "$75,000-$99,999","$100,000-$199,999", 
                                     "$100,000 or more",
                                     "$200,000 or more", "Prefer not to answer")),
    hhincome_broad = factor(hhincome_broad,
                            levels=c("Under $25,000","$25,000-$49,999", "$50,000-$74,999", 
                                     "$75,000-$99,999","$100,000-$199,999", 
                                     "$200,000 or more", "Prefer not to answer")),
    hhincome = factor(case_when(
      hhincome_broad %in% c("Under $25,000","$25,000-$49,999")~'Under $50,000',
      hhincome_broad %in% c("$50,000-$74,999", "$75,000-$99,999")~"$50,000-$99,999",
      hhincome_broad %in% c("$100,000 or more","$100,000-$199,999", "$200,000 or more")~"$100,000 or more",
      TRUE~hhincome_broad),
      levels = c('Under $50,000',"$50,000-$99,999","$100,000 or more","Prefer not to answer"))
    ) %>%
  mutate(
    wkr_grp = case_when(
      numworkers %in% c("1 worker",  "0 workers")~numworkers,
      numworkers %in% c("2 workers", "3 workers", "4 workers", "5 workers", "6 workers")~"2+ workers",))

setDT(hh)

hts_hh_day <- list("day" = hh_day_delivery %>% left_join(hh, by=c("hh_id","survey_year")))
hts_hh_day_2023 <- list("day" = hh_day_delivery %>% 
                          filter(survey_year==2023) %>%
                          left_join(hh, by=c("hh_id","survey_year")))
```


```{r}
my_variable_list <- new_add_variable(variables_dt = variable_list,
                                     variable_names = c("deliver_home_any","hhincome","hhincome2","hhincome3","hhincome4","hhincome5","hh_day_weight",
                                                        "homegeog", 'rgc_cat_home', 'class_desc',"wkr_grp","hhincome_broad_pre2023"),
                                     table_name = "day") %>%
  mutate(is_checkbox = ifelse(variable %in% delivery_vars, 0, is_checkbox),
         shared_name = ifelse(variable %in% delivery_vars, variable, shared_name),
         day = ifelse(variable %in% c("hhincome_broad", "home_county","numchildren", "numworkers", "numadults", "hhsize_simple"),1,day),
         data_type = ifelse(variable == "hh_day_weight", "numeric", data_type))
```

### basic summaries for home delivery by delivery type

:::{.panel-tabset}
#### columns charts

```{r}
delivery_summ <- function(delivery_varname){
  # get table
  test <- get_hts_summary(hts_hh_day,
                          summary_var = c("survey_year",delivery_varname),
                          variables_dt = my_variable_list,
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight")

  df_delivery <- test %>% filter(.[[delivery_varname]] == "Yes")
  df_delivery<- df_delivery%>%mutate(Year=as.character(survey_year))

  df_delivery
}
```


```{r, fig.width=6, fig.height=4}

df_deliver_pkg<-delivery_summ('deliver_package')

static<-static_column_chart(df_deliver_pkg, x='Year', fill='deliver_package', y='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=14),legend.text = element_text(size=16), axis.title.y=element_text(size=12), axis.title.x=element_text(size=14))
static
# write.csv(df_deliver_pkg, 'deliver_pkg_trend.csv')
```
```{r}

df_deliver_work<-delivery_summ('deliver_work')

static<-static_column_chart(df_deliver_work, x='Year', fill='deliver_work', y='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
# write.csv(df_deliver_work, 'deliver_work_trend.csv')
```

```{r}

df_deliver_food<-delivery_summ('deliver_food')

static<-static_column_chart(df_deliver_food, x='Year', fill='deliver_food', y='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
# write.csv(df_deliver_food, 'deliver_food_trend.csv')
```

```{r}

df_deliver_grocery<-delivery_summ('deliver_grocery')

static<-static_column_chart(df_deliver_grocery, x='Year', fill='deliver_grocery', y='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
# write.csv(df_deliver_grocery, 'deliver_grocery_trend.csv')
```

```{r}

df_deliver_else<-delivery_summ('deliver_elsewhere')
df_deliver_else
```
```{r}

df_deliver_office<-delivery_summ('deliver_office')
df_deliver_office
```

## demographic characteristic

:::{.panel-tabset}

### column charts

- any delivery to home (including food, grocery and package)

:::{.panel-tabset}

```{r}

# plot_delivery2 <- function(df, group_varname, plot_title){
#   ggplot(df, aes(x=as.factor(survey_year),y=prop, fill=df[[group_varname]])) +
#     geom_col(position = "dodge") +
#     theme_bw() +
#     geom_errorbar(aes(ymin=prop-prop_moe, ymax=prop+prop_moe),
#                   width=0.2, position = position_dodge(0.9)) +
#     scale_y_continuous(labels = scales::percent) +
#     scale_fill_discrete_psrc ("gnbopgy_10")+
#     labs(title = plot_title) +
#     psrc_style()
# }

```

```{r}
delivery_summ_demo <- function(delivery_varname,demoname){
  # get table
  test <- get_hts_summary(hts_hh_day_2023, 
                          summary_var = c(demoname,delivery_varname),
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight")
  
  df_delivery <- test %>% filter(.[[delivery_varname]] == "Yes")

  
  df_delivery
}
```

#### package: household income
```{r}

summary<-delivery_summ_demo('deliver_package', 'hhincome_broad' )%>%
  filter(hhincome_broad!="Prefer not to answer")


static<-static_bar_chart(summary, y='hhincome_broad', fill='hhincome_broad', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
# write.csv(summary, 'deliver_package_income_trend.csv')


summary<-delivery_summ_demo('deliver_package', 'hhincome' )%>%
  filter(hhincome!="Prefer not to answer")
static<-static_bar_chart(summary, y='hhincome', fill='hhincome', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
# write.csv(summary, 'deliver_package_income_ls.csv')
```

#### grocery: household income
```{r}

summary<-delivery_summ_demo('deliver_grocery', 'hhincome_broad' )%>%
  filter(hhincome_broad!="Prefer not to answer")

static<-static_bar_chart(summary, y='hhincome_broad', fill='hhincome_broad', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
# write.csv(summary, 'deliver_grocery_income_trend.csv')

summary<-delivery_summ_demo('deliver_grocery', 'hhincome' )%>%
  filter(hhincome!="Prefer not to answer")

static<-static_bar_chart(summary, y='hhincome', fill='hhincome', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
```

#### food: household income
```{r}

summary<-delivery_summ_demo('deliver_food', 'hhincome_broad' )%>%
  filter(hhincome_broad!="Prefer not to answer")

static<-static_bar_chart(summary, y='hhincome_broad', fill='hhincome_broad', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static


summary<-delivery_summ_demo('deliver_food', 'hhincome' ) %>%
  filter(hhincome!="Prefer not to answer")

static<-static_bar_chart(summary, y='hhincome', fill='hhincome', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
```
#### package: home county

```{r}

summary<-delivery_summ_demo('deliver_package', 'home_county' )%>%
filter(!is.na(home_county))


static<-static_bar_chart(summary, y='home_county', fill='home_county', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
# write.csv(summary, 'deliver_package_county_trend.csv')
```
```{r}

summary<-delivery_summ_demo('deliver_grocery', 'home_county' )

static<-static_bar_chart(summary, y='home_county', fill='home_county', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_grocery_income_trend.csv')
```

```{r}

summary<-delivery_summ_demo('deliver_food', 'home_county' )

static<-static_bar_chart(summary, y='home_county', fill='home_county', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_food_income_trend.csv')
```
###by home county

```{r}

summary<-delivery_summ_demo('deliver_package', 'homegeog' )



static<-static_bar_chart(summary, y='homegeog', fill='homegeog', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_package_geog_trend.csv')
```
###by home county

```{r}

summary<-delivery_summ_demo('deliver_package', 'class_desc' )%>%
  mutate(class_desc=if_else(is.na(class_desc), "Outside Urban Growth Area", class_desc))%>%
  mutate(home_loc= case_when(class_desc=='CitiesTowns' ~ 'Cities and Towns',
                             class_desc=='HCT' ~ 'High Capacity Transit',
                             class_desc=='UU' ~ 'Urban Unincorporated',
                             TRUE ~ class_desc
    
  ))%>%mutate(home_loc=factor(home_loc))%>%
  mutate(home_loc=fct_reorder(home_loc, prop))
  


static<-static_bar_chart(summary, y='home_loc', fill='home_loc', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_package_geog_trend.csv')
```


```{r}

summary<-delivery_summ_demo('deliver_package', 'child_grp' )


static<-static_bar_chart(summary, y='child_grp', fill='child_grp', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
write.csv(summary, 'deliver_package_child_grp.csv')
```

```{r}

summary<-delivery_summ_demo('deliver_package', 'wkr_grp' )


static<-static_bar_chart(summary, y='wkr_grp', fill='wkr_grp', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
# write.csv(summary, 'deliver_package_wkr_grp.csv')
```


```{r}

summary<-delivery_summ_demo('deliver_food', 'wkr_grp' )


static<-static_bar_chart(summary, y='wkr_grp', fill='wkr_grp', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
# write.csv(summary, 'deliver_food_wkr_grp.csv')
```


```{r}

summary<-delivery_summ_demo('deliver_grocery', 'wkr_grp' )


static<-static_bar_chart(summary, y='wkr_grp', fill='wkr_grp', x='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
# write.csv(summary, 'deliver_grocery_wkr_grp.csv')
```

```{r}
delivery_summ_demo_year <- function(delivery_varname,demoname){
  # get table
  test <- get_hts_summary(hts_hh_day, 
                          summary_var = c("survey_year", demoname,delivery_varname),
                          variables_dt = my_variable_list, 
                          id_var="day_id",
                          wt_var="hh_day_weight",
                          wt_name="hh_day_weight")
  
  df_delivery <- test %>% filter(.[[delivery_varname]] == "Yes")

  
  df_delivery
}
```

##any

```{r}
summary<-delivery_summ_demo_year('deliver_package', 'hhincome_broad_pre2023' ) %>%
  filter(hhincome_broad_pre2023!="Prefer not to answer")

static<-static_column_chart(summary, x='survey_year', fill='hhincome_broad_pre2023', y='prop', dec=0, color='pgnobgy_10')+
  theme(axis.text.x=element_text(size=16), axis.text.y=element_text(size=16),legend.text = element_text(size=16), axis.title.y=element_text(size=20), axis.title.x=element_text(size=20))
static
# write.csv(summary, 'deliver_package_income_pkg_year.csv')

```


