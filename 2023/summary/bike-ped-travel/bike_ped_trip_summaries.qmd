---
title: "2023 HTS: Walk, Bike, Micromobility"
author: "Grant Gibson"
format: html
editor: visual
---

# Travel Mode: Walk, Bike, & Micromobility

## Initial Summaries

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)

library(data.table)
library(stringr)
library(travelSurveyTools)
library(psrcelmer)
library(dplyr)
library(psrcplot)
library(tidyverse)
source("C:/Users/GGibson/GitHub/PSRC/travel-studies/2023/summary/survey-23-preprocess.R")
```

### Read in codebook

```{r codebook}
cb_path = str_glue("J:/Projects/Surveys/HHTravel/Survey2023/Data/data_published/PSRC_Codebook_2023_v1.xlsx")

variable_list = readxl::read_xlsx(cb_path, sheet = 'variable_list')
value_labels = readxl::read_xlsx(cb_path, sheet = 'value_labels')

setDT(variable_list)
setDT(value_labels)
```

### Read in data from Elmer

```{r elmer_data}
hh <- get_query(sql = "SELECT household_id as hh_id, num_trips AS h_num_trips, hhsize, vehicle_count, hhincome_broad,
                       home_rgcname, home_county, res_type, survey_year, hh_weight
                       FROM HHSurvey.v_households_labels;")

person <- get_query(sql = "SELECT person_id, household_id as hh_id, num_trips AS p_num_trips, age, gender, race_category,
                           employment, workplace, bike_freq, bike_freq_pre_2023, walk_freq, walk_freq_pre_2023, survey_year, person_weight
                           FROM HHSurvey.v_persons_labels;")

trip <- get_query(sql = "SELECT trip_id, household_id as hh_id, person_id, origin_x_coord, origin_y_coord, origin_county, origin_rgcname,
                         dest_x_coord, dest_y_coord, dest_county, dest_rgcname, distance_miles, duration_minutes,
                         origin_purpose_cat, origin_purpose, dest_purpose_cat, dest_purpose,
                         mode_type, mode_1, mode_characterization, mode_simple, travelers_total, travelers_hh,
                         survey_year, trip_weight 
                         FROM HHSurvey.v_trips_labels
                         WHERE travel_dow NOT IN ('Friday', 'Saturday', 'Sunday');")

setDT(hh)
setDT(person)
setDT(trip)
```

### Set IDs as character type

```{r set_ids}
hh[, hh_id := as.character(hh_id)]

person[, hh_id := as.character(hh_id)]
person[, person_id := as.character(person_id)]

trip[, hh_id := as.character(hh_id)]
trip[, person_id := as.character(person_id)]
trip[, trip_id := as.character(trip_id)]

hh[, survey_year := as.character(survey_year)]
person[, survey_year := as.character(survey_year)]
trip[, survey_year := as.character(survey_year)]
```

### Get unique modes from trips

```{r trip_modes}
trip_modes <- unique(trip[, c("mode_1", "mode_type", "mode_characterization", "mode_simple")])
```

Based on the modes in the trip data, will need to filter on `mode_characterization` to remove "Airplane"

### Filter trips to walk, bike, micromobility

```{r walk_bike filter}
trip <- filter(trip, mode_characterization != "Airplane")
```

### Create summaries

```{r age_cond_variable}
variable_list <- add_variable(variable_list,
                              variable_name = "age_condensed",
                              table_name = "person",
                              data_type = "character")

person <- person %>% 
  mutate(age_condensed = case_when(age %in% c("Under 5 years old", "5-11 years", "12-15 years", "16-17 years") ~ "Under 18 years old",
                                   age %in% c("18-24 years", "25-34 years") ~ "18-34 years",
                                   age %in% c("35-44 years", "45-54 years", "55-64 years") ~ "35-64 years",
                                   age %in% c("65-74 years", "75-84 years", "85 years or older") ~ "65 years or older")) %>% 
  mutate(age_condensed = factor(age_condensed, levels = c("Under 18 years old", "18-34 years", "35-64 years", "65 years or older")))
```

```{r income_variable}
variable_list <- add_variable(variable_list,
                              variable_name = "hhincome_broad_combined",
                              table_name = "hh",
                              data_type = "character")

hh <- hh %>% 
  mutate(hhincome_broad_combined = ifelse(hhincome_broad %in% c("$100,000-$199,000", "$200,000 or more"),
                                          "$100,000 or more", hhincome_broad)) %>% 
  mutate(hhincome_broad_combined = factor(hhincome_broad_combined,
                                          levels = c("Under $25,000", "$25,000-$49,999", "$50,000-$74,999",
                                                     "$75,000-$99,999", "$100,000 or more", "Prefer not to answer")))
```

```{r vehicle_owner_variable}
variable_list <- add_variable(variable_list,
                              variable_name = "vehicle_ownership",
                              table_name = "hh",
                              data_type = "character")

hh <- hh %>% 
  mutate(vehicle_ownership = ifelse(vehicle_count == "0 (no vehicles)", "Not a vehicle owner", "Vehicle owner"))
```

```{r summary}
hts_data <- list(hh = hh,
                 person = person,
                 trip = trip)
ids <- c("hh_id", "person_id", "trip_id")
wts <- c("hh_weight", "person_weight", "trip_weight")

summary_trips <- summarize_weighted(hts_data = hts_data,
                                    summarize_var = "mode_simple",
                                    summarize_by = "survey_year",
                                    id_cols = ids,
                                    wt_cols = wts,
                                    wtname = "trip_weight"
                                    )

mode_summary <- summary_trips$summary$wtd %>% 
  mutate(moe = prop_se * 1.645)
```

### Initial charts

```{r walk_chart_est, echo=FALSE}
static_column_chart(filter(mode_summary, mode_simple == "Walk"),
                    x = "survey_year", y = "est", fill = "mode_simple",
                    ylabel = "# of Trips", xlabel = "Survey Year", title = "Walk Trips - Estimate",
                    moe = "est_se") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                      )
```

```{r walk_chart_share, echo=FALSE}
static_column_chart(filter(mode_summary, mode_simple == "Walk"),
                    x = "survey_year", y = "prop", fill = "mode_simple",
                    ylabel = "% of Trips", xlabel = "Survey Year", title = "Walk Trips - Share",
                    moe = "moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24)
                      )
```

```{r bike_chart_est, echo=FALSE}
static_column_chart(filter(mode_summary, mode_simple == "Bike"),
                    x = "survey_year", y = "est", fill = "mode_simple",
                    ylabel = "# of Trips", xlabel = "Survey Year",
                    title = "Bike Trips - Estimate", source = "'Bike' includes standard bicycle or e-bike, privately owned or bike share",
                    moe = "est_se") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24),
                      plot.caption = element_text(size = 14)
                      )
```

```{r bike_trips_share, echo=FALSE}
static_column_chart(filter(mode_summary, mode_simple == "Bike"),
                    x = "survey_year", y = "prop", fill = "mode_simple",
                    ylabel = "% of Trips", xlabel = "Survey Year",
                    title = "Bike Trips - Share", source = "'Bike' includes standard bicycle or e-bike, privately owned or bike share",
                    moe = "moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      plot.title = element_text(size = 24),
                      plot.caption = element_text(size = 14)
                      )
```

## Walk Mode Share by Demographics

Question: Are there any significant differences in the walk mode share (compared to other modes) by age, race/ethnicity, income, ability, or vehicle ownership? Has this changed from the 2017/2019 and 2021 survey results?

```{r walk_age, echo=FALSE}
# too many ages - need to aggregate to fewer groups
mode_by_age <- summarize_weighted(hts_data = hts_data,
                                  summarize_var = "mode_simple",
                                  summarize_by = c("survey_year", "age"),
                                  id_cols = ids,
                                  wt_cols = wts,
                                  wtname = "trip_weight"
                                  )

walk_by_age <- mode_by_age$summary$wtd %>% 
  filter(mode_simple == "Walk") %>% 
  mutate(moe = prop_se * 1.645)
```

```{r walk_age_chart, echo=FALSE}
static_column_chart(walk_by_age,
                    x = "age", y = "prop", fill = "survey_year",
                    ylabel = "% of Trips", xlabel = "Age Range", title = "Walk Trips by Age - Share",
                    moe = "moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r walk_age_cond, echo=FALSE}
# too many ages - need to aggregate to fewer groups
mode_by_age_cond <- summarize_weighted(hts_data = hts_data,
                                       summarize_var = "mode_simple",
                                       summarize_by = c("survey_year", "age_condensed"),
                                       id_cols = ids,
                                       wt_cols = wts,
                                       wtname = "trip_weight"
                                       )

walk_by_age_cond <- mode_by_age_cond$summary$wtd %>% 
  filter(mode_simple == "Walk") %>% 
  mutate(moe = prop_se * 1.645)
```

```{r walk_age_cond_chart, echo=FALSE}
static_column_chart(walk_by_age_cond,
                    x = "age_condensed", y = "prop", fill = "survey_year",
                    ylabel = "% of Trips", xlabel = "Age Range", title = "Walk Trips by Age - Share",
                    moe = "moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

### Bike comparison

```{r bike_age, echo=FALSE}
# hard to judge differences - use walk shares to determine age groupings
bike_by_age <- mode_by_age$summary$wtd %>% 
  filter(mode_simple == "Bike") %>% 
  mutate(moe = prop_se * 1.645)
```

```{r bike_age_chart, echo=FALSE}
static_column_chart(bike_by_age,
                    x = "age", y = "prop", fill = "survey_year",
                    ylabel = "% of Trips", xlabel = "Age Range", title = "Bike Trips by Age - Share",
                    moe = "moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r bike_age_cond, echo=FALSE}
# hard to judge differences - use walk shares to determine age groupings
bike_by_age_cond <- mode_by_age_cond$summary$wtd %>% 
  filter(mode_simple == "Bike") %>% 
  mutate(moe = prop_se * 1.645)
```

```{r bike_age_cond_chart, echo=FALSE}
static_column_chart(bike_by_age_cond,
                    x = "age_condensed", y = "prop", fill = "survey_year",
                    ylabel = "% of Trips", xlabel = "Age Range", title = "Bike Trips by Age - Share",
                    moe = "moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r walk_race, echo=FALSE}
mode_by_race <- summarize_weighted(hts_data = hts_data,
                                   summarize_var = "mode_simple",
                                   summarize_by = c("survey_year", "race_category"),
                                   id_cols = ids,
                                   wt_cols = wts,
                                   wtname = "trip_weight"
                                   )

walk_by_race <- mode_by_race$summary$wtd %>% 
  filter(mode_simple == "Walk") %>% 
  mutate(moe = prop_se * 1.645)
```

```{r walk_race_chart, echo=FALSE}
static_column_chart(filter(walk_by_race, race_category != "Child"),
                    x = "race_category", y = "prop", fill = "survey_year",
                    ylabel = "% of Trips", xlabel = "Race", title = "Walk Trips by Race - Share",
                    moe = "moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r walk_income, echo=FALSE}
# differences in groupings from 2019 to 2021 for >$100k - group together
mode_by_income <- summarize_weighted(hts_data = hts_data,
                                     summarize_var = "mode_simple",
                                     summarize_by = c("survey_year", "hhincome_broad_combined"),
                                     id_cols = ids,
                                     wt_cols = wts,
                                     wtname = "trip_weight"
                                     )

walk_by_income <- mode_by_income$summary$wtd %>% 
  filter(mode_simple == "Walk") %>% 
  mutate(moe = prop_se * 1.645)
```

```{r walk_income_chart, echo=FALSE}
static_column_chart(walk_by_income,
                    x = "hhincome_broad_combined", y = "prop", fill = "survey_year",
                    ylabel = "% of Trips", xlabel = "Household Income", title = "Walk Trips by Income - Share",
                    moe = "moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r walk_vehicle, echo=FALSE}
mode_by_vehicle <- summarize_weighted(hts_data = hts_data,
                                      summarize_var = "mode_simple",
                                      summarize_by = c("survey_year", "vehicle_ownership"),
                                      id_cols = ids,
                                      wt_cols = wts,
                                      wtname = "trip_weight"
                                      )

walk_by_vehicle <- mode_by_vehicle$summary$wtd %>% 
  filter(mode_simple == "Walk") %>% 
  mutate(moe = prop_se * 1.645)
```

```{r walk_vehicle_chart, echo=FALSE}
static_column_chart(walk_by_vehicle,
                    x = "vehicle_ownership", y = "prop", fill = "survey_year",
                    ylabel = "% of Trips", xlabel = "Vehicle Ownership", title = "Walk Trips by Vehicle Ownership - Share",
                    moe = "moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

## Walk and Bike Trip Distances

Question: Have there been any changes to walking or biking trip distance since 2017/2019 and 2021?

```{r trip_distance, echo=FALSE}
trip_distance_summary <- summarize_weighted(hts_data = hts_data,
                                            summarize_var = "distance_miles",
                                            summarize_by = c("survey_year", "mode_simple"),
                                            summarize_vartype = "numeric",
                                            id_cols = ids,
                                            wt_cols = wts,
                                            wtname = "trip_weight"
                                            )

# NAs found in distance_miles for years 2019 and 2021
bike_walk_distance <- trip_distance_summary$summary$wtd %>% 
  filter(mode_simple %in% c("Bike", "Walk"))
```

```{r walk_dist_chart, echo=FALSE}
static_column_chart(filter(bike_walk_distance, mode_simple == "Walk"),
                    x = "survey_year", y = "median", fill = "mode_simple",
                    ylabel = "Median Trip Distance", xlabel = "Year", title = "Median Trip Distance of Walk Trips",
                    dec = 1, est = "number") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      ) + ylim(0, 0.7)
```

```{r bike_dist_chart, echo=FALSE}
static_column_chart(filter(bike_walk_distance, mode_simple == "Bike"),
                    x = "survey_year", y = "median", fill = "mode_simple",
                    ylabel = "Median Trip Distance", xlabel = "Year", title = "Median Trip Distance of Bike Trips",
                    dec = 1) + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

## Walk and Bike Frequencies

Question: How frequently do people walk or bike? Can we analyze differences between geographies (RGCs vs. non-RGCs or Regional Growth Centers vs. region as a whole)?

```{r walk_frequency, echo=FALSE}
# walk/bike_freq and walk/bike_freq_pre_2023 in person table
# All NAs in walk_freq are 2017/19/21 records. NAs in walk_freq_pre_2023 are a mix of 2017 and 2023.

variable_list <- add_variable(variable_list,
                              variable_name = "walk_freq_condensed",
                              table_name = "person",
                              data_type = "character")

# add factor levels
hts_data$person <- hts_data$person %>%
  mutate(walk_freq_condensed = factor(case_when(walk_freq %in% c("2 days a week", "3 days a week", "4 days a week") ~ "2-4 days a week",
                                                TRUE ~ walk_freq),
                                      levels = c("Never in the past 30 days", "1-3 days in the past month", "1 day a week",
                                                 "2-4 days a week", "5 days a week", "6-7 days a week", "Missing Response")))

# how to handle missing responses?
walk_freq_23 <- summarize_weighted(hts_data = hts_data,
                                   summarize_var = "walk_freq_condensed",
                                   summarize_by = "survey_year",
                                   id_cols = ids,
                                   wt_cols = wts,
                                   wtname = "person_weight"
                                   )

walk_freq_23_sums <- walk_freq_23$summary$wtd %>%
  filter(survey_year == 2023) %>% 
  mutate(moe = prop_se * 1.645)

walk_freq_17_19_21 <- summarize_weighted(hts_data = hts_data,
                                         summarize_var = "walk_freq_pre_2023",
                                         summarize_by = "survey_year",
                                         id_cols = ids,
                                         wt_cols = wts,
                                         wtname = "person_weight"
                                         )

walk_freq_17_19_21_sums <- walk_freq_17_19_21$summary$wtd %>%
  filter(survey_year != 2023) %>% 
  mutate(moe = prop_se * 1.645)

# manual check of counts generated above - they don't match!
chk_walk_freq_21 <- hts_data$person %>% 
  filter(survey_year == 2021) %>% 
  group_by(survey_year, walk_freq_pre_2023) %>% 
  summarize(count = NROW(person_id),
            estimate = round(sum(person_weight), 1))
```

```{r walk_freq_chart_2023, echo=FALSE}
static_column_chart(walk_freq_23_sums,
                    x = "walk_freq_condensed", y = "prop", fill = "survey_year",
                    ylabel = "Share", xlabel = "Frequency", title = "Walk Trip Frequencies, 2023"
                    ) + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r bike_freq_chart_2023, echo=FALSE}
static_column_chart(filter(walk_bike_freq, commute_mode == "Bike" & survey_year == "2023"),
                    x = "commute_freq_condensed", y = "prop", fill = "survey_year",
                    ylabel = "Share", xlabel = "Frequency", title = "Bike Trip Frequencies, 2023"
                    ) + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r walk_freq_chart_allyears, echo=FALSE}
static_column_chart(walk_freq_17_19_21_sums,
                    x = "walk_freq_pre_2023", y = "prop", fill = "survey_year",
                    ylabel = "Share", xlabel = "Frequency", title = "Walk Trip Frequencies"
                    ) + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r bike_freq_chart_allyears, echo=FALSE}
static_column_chart(filter(walk_bike_freq, commute_mode == "Bike"),
                    x = "commute_freq_condensed", y = "prop", fill = "survey_year",
                    ylabel = "Share", xlabel = "Frequency", title = "Bike Trip Frequencies"
                    ) + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r walk_trips_in_rgcs}
person_rgc <- hh %>% 
  select(hh_id, home_rgcname) %>% 
  right_join(., hts_data$person, by = "hh_id")

# fix below
mode_freq_rgc <- summarize_weighted(hts_data = list(hh = hh,
                                                    person = filter(person_rgc, home_rgcname != "Not RGC"),
                                                    trip = trip),
                                    summarize_var = "commute_freq_condensed",
                                    summarize_by = c("survey_year", "commute_mode"),
                                    id_cols = ids,
                                    wt_cols = wts,
                                    wtname = "person_weight"
                                    )

walk_bike_freq_rgc <- mode_freq_rgc$summary$wtd %>% 
  filter(str_detect(commute_mode, "(?i)bic|walk")) %>% 
  mutate(moe = prop_se * 1.645,
         commute_mode = case_when(str_detect(commute_mode, "(?i)bic") ~ "Bike",
                                  str_detect(commute_mode, "(?i)walk") ~ "Walk"))
```

```{r walk_freq_rgc_chart, echo=FALSE}
static_column_chart(filter(walk_bike_freq_rgc, commute_mode == "Walk"),
                    x = "commute_freq_condensed", y = "prop", fill = "survey_year",
                    ylabel = "Share", xlabel = "Frequency", title = "Walk Trip Frequencies in RGCs"
                    ) + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r bike_freq_rgc_chart, echo=FALSE}
static_column_chart(filter(walk_bike_freq_rgc, commute_mode == "Bike"),
                    x = "commute_freq_condensed", y = "prop", fill = "survey_year",
                    ylabel = "Share", xlabel = "Frequency", title = "Bike Trip Frequencies in RGCs"
                    ) + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

6.	Does mode split differ by trip purpose—commute trips vs. recreation vs. shopping/errands? Has this changed since the 2017/2019 and 2021 surveys? 
•	See 2022 BPAC Presentation, Slides 20-21 – Interested in specifics of walk and bike share by trip purpose


7.	Does mode split differ by trip distance? (Assuming there is a limit to how far people will walk or bike to get somewhere)


8.	What is the most common transit access mode (walk, bike, park & ride, dropped off, etc.)? Does it differ based on geography (RGCs vs. non-RGCs or some other comparison)?
•	See 2022 BPAC Presentation, Slides 22-23 
•	Probably not a large enough sample of transit trips to determine this, but…Does access mode differ by specific transit mode (e.g., walk is largest access mode share for bus trips, but park & ride is largest access mode share for light rail)?


9.	Does mode choice vary by housing type (e.g., apartment versus single-family)?


10.	Can we determine prevalence of scootering as a mode share or garner anything from the question on scooter/e-scooter ownership?
```{r scooters, echo=FALSE}
mode_counts <- trip %>% 
  group_by(mode_1) %>% 
  summarize(trip_count = NROW(person_id))

# what does "moped" mean? definition of scooter in this context?
```


