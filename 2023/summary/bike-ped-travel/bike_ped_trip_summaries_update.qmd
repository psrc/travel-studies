---
title: "2023 HTS: Walk, Bike, Micromobility"
author: "Grant Gibson"
format: html
editor: visual
---

# Travel Mode: Walk, Bike, & Micromobility
Update to analysis using psrc.travelsurvey package and data with new weights

## Initial Summaries

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)

library(data.table)
library(stringr)
library(travelSurveyTools)
library(psrcelmer)
library(dplyr)
library(psrcplot)
library(tidyverse)
library(psrc.travelsurvey)
source("C:/Users/GGibson/GitHub/PSRC/travel-studies/2023/summary/survey-23-preprocess.R")
```

### Pull data from Elmer

```{r elmer_data}
vars <- c("hhincome_detailed", "home_rgcname", "home_jurisdiction", "home_county",  # household
          "age", "gender", "race_category", "disability_person", "share_2",         # person
          "origin_purpose_cat", "dest_purpose_cat", "dest_purpose_cat_5", "mode_class", "mode_class_5"    # trip
          )

hts_data <- get_psrc_hts(survey_vars = vars)

hts_data$hh$survey_year <- as.character(hts_data$hh$survey_year)
hts_data$person$survey_year <- as.character(hts_data$person$survey_year)
hts_data$day$survey_year <- as.character(hts_data$day$survey_year)
hts_data$trip$survey_year <- as.character(hts_data$trip$survey_year)
hts_data$vehicle$survey_year <- as.character(hts_data$vehicle$survey_year)
```

### Create aggregated variables

```{r agg_variables, include=FALSE}
# condense mode_class
#unique(hts_data$trip$mode_class)

# hts_data$trip <- hts_data$trip %>% 
#   mutate(mode_class_condensed = case_when(mode_class %in% c("Drive HOV2", "Drive HOV3+", "Drive SOV") ~ "Drive",
#                                           mode_class %in% c("School Bus","Ride Hail") ~ "Other",
#                                           mode_class %in% c("Bike", "Micromobility") ~ "Bike/Micromobility",
#                                           TRUE ~ mode_class))

# condense hhincome
hts_data$hh <- hts_data$hh %>% 
  mutate(hhincome_detailed_combined = case_when(hhincome_detailed %in% c("Under $10,000", "$10,000-$24,999", "$25,000-$34,999", "$35,000-$49,999") ~ "Under $50,000",
                                                hhincome_detailed %in% c("$50,000-$74,999", "$75,000-$99,999") ~ "$50,000-$99,999",
                                                hhincome_detailed %in% c("$150,000-$199,999", "$200,000-$249,999", "$250,000 or more") ~ "$150,000 or more",
                                                TRUE ~ hhincome_detailed)) %>% 
  mutate(hhincome_detailed_combined = factor(hhincome_detailed_combined,
                                             levels = c("Under $50,000", "$50,000-$99,999", "$100,000-$149,999",
                                                        "$150,000 or more", "Prefer not to answer")))

# condense age
hts_data$person <- hts_data$person %>% 
  mutate(age_condensed = case_when(age %in% c("Under 5 years old", "5-11 years", "12-15 years", "16-17 years") ~ "Under 18 years old",
                                   age %in% c("18-24 years", "25-34 years") ~ "18-34 years",
                                   age %in% c("35-44 years", "45-54 years", "55-64 years") ~ "35-64 years",
                                   age %in% c("65-74 years", "75-84 years", "85 years or older") ~ "65 years or older")) %>% 
  mutate(age_condensed = factor(age_condensed, levels = c("Under 18 years old", "18-34 years", "35-64 years", "65 years or older")))

# condense gender
hts_data$person <- hts_data$person %>% 
  mutate(gender_group = case_when(gender %in% c("Female", "Girl/Woman (cisgender or transgender)") ~ "Women",
                                  gender %in% c("Male", "Boy/Man (cisgender or transgender)") ~ "Men",
                                  gender %in% c("Non-Binary", "Non-binary/Something else fits better", "Another") ~ "Non-Binary/Other",
                                  gender == "Not listed here / prefer not to answer" ~ "Prefer not to answer",
                                  TRUE ~ gender)) %>% 
  mutate(gender_group = factor(gender_group, levels = c("Women", "Men", "Non-Binary/Other", "Prefer not to answer")))

# simplify race values
hts_data$person <- hts_data$person %>% 
  mutate(race_simple = case_when(race_category == "White non-Hispanic" ~ "White",
                                 race_category == "AANHPI non-Hispanic" ~ "Asian American, Native Hawaiian, or Pacific Islander",
                                 race_category == "Black or African American non-Hispanic" ~ "Black or African American",
                                 race_category %in% c("Some Other Race non-Hispanic", "Two or More Races non-Hispanic") ~ "Some Other Race",
                                 TRUE ~ race_category))

# create geographic variables
hts_data$hh <- hts_data$hh %>% 
  mutate(in_rgc = ifelse(home_rgcname == "Not RGC", "Home Not in RGC", "Home in RGC"))

hts_data$hh <- hts_data$hh %>% 
  mutate(home_geography = factor(case_when(home_jurisdiction == "Seattle" ~ home_jurisdiction,
                                           home_county == "King County" & home_jurisdiction != "Seattle" ~ "Rest of King",
                                           home_county %in% c("Kitsap County", "Pierce County", "Snohomish County") ~ home_county),
                                 levels = c("Seattle", "Rest of King", "Kitsap County", "Pierce County", "Snohomish County")))
```

### Create summary data

```{r summary_data, echo=FALSE}
# ids <- c("hh_id", "person_id", "day_id", "trip_id")
# wts <- c("hh_weight", "person_weight", "day_weight", "trip_weight")
# 
# trip_totals <- summarize_weighted(hts_data = hts_data,
#                                   summarize_var = "survey_year",
#                                   summarize_by = NULL,
#                                   id_cols = ids,
#                                   wt_cols = wts,
#                                   wtname = "trip_weight"
#                                   )
# 
# trip_summary <- trip_totals$summary$wtd %>%
#   mutate(prop_moe = prop_se * 1.645,
#          est_rounded = est/1000000)

mode_summary <- psrc_hts_stat(hts_data,
                              analysis_unit = "trip",
                              group_vars = "mode_class_5")

trip_summary <- mode_summary %>%
  group_by(survey_year) %>%
  summarize(est = sum(est)) %>%
  mutate(est_rounded = est/1000000)
```

### Initial charts

```{r trip_counts_chart, echo=FALSE}
static_column_chart(trip_summary,
                  x = "survey_year", y = "est_rounded", fill = "survey_year",
                  ylabel = "# of Trips", xlabel = "Survey Year", title = "Total Trips in Region (in millions)",
                  dec = 1) + theme(
                    axis.text.x = element_text(size = 14),
                    axis.text.y = element_text(size = 14),
                    axis.title.y = element_text(size = 16),
                    axis.title.x = element_text(size = 16),
                    plot.title = element_text(size = 24)
                    )
```

```{r all_modes_chart, echo=FALSE}
static_column_chart(filter(mode_summary, survey_year == 2023 & !(mode_class_5 %in% c("Missing Response"))),
                    x = "mode_class_5", y = "prop", fill = "survey_year",
                    ylabel = "% of Trips", xlabel = "Mode", title = "Trips by Mode - Share (2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 12),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      plot.title = element_text(size = 24)
                      )
```

```{r walk_chart_est, echo=FALSE}
static_column_chart(filter(mode_summary, mode_class_5 == "Walk"),
                    x = "survey_year", y = "est", fill = "survey_year",
                    ylabel = "# of Trips", xlabel = "Survey Year", title = "Walk Trips - Estimate",
                    moe = "est_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      plot.title = element_text(size = 24)
                      )
```

```{r walk_chart_share, echo=FALSE}
static_column_chart(filter(mode_summary, mode_class_5 == "Walk"),
                    x = "survey_year", y = "prop", fill = "survey_year",
                    ylabel = "% of Trips", xlabel = "Survey Year", title = "Walk Trips - Share",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      plot.title = element_text(size = 24)
                      )
```

```{r bike_chart_est, echo=FALSE}
static_column_chart(filter(mode_summary, mode_class_5 == "Bike/Micromobility"),
                    x = "survey_year", y = "est", fill = "survey_year",
                    ylabel = "# of Trips", xlabel = "Survey Year",
                    title = "Bike & Micromobility Trips - Estimate",
                    moe = "est_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      plot.title = element_text(size = 24),
                      plot.caption = element_text(size = 14)
                      )
```

```{r bike_trips_share, echo=FALSE}
static_column_chart(filter(mode_summary, mode_class_5 == "Bike/Micromobility"),
                    x = "survey_year", y = "prop", fill = "survey_year",
                    ylabel = "% of Trips", xlabel = "Survey Year",
                    title = "Bike & Micromobility Trips - Share",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      plot.title = element_text(size = 24),
                      plot.caption = element_text(size = 14)
                      )
```

## Walk Mode Share by Demographics

### Household Income

```{r walk_bike_income, echo=FALSE}
walk_bike_by_income <- psrc_hts_stat(hts_data,
                                     analysis_unit = "trip",
                                     group_vars = c("hhincome_detailed_combined", "mode_class_5")) %>% 
  filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
```

```{r walk_income_chart, echo=FALSE}
static_bar_chart(filter(walk_bike_by_income, mode_class_5 == "Walk" & hhincome_detailed_combined != "Prefer not to answer"
                            & survey_year == "2023"),
                    y = "hhincome_detailed_combined", x = "prop", fill = "survey_year",
                    xlabel = "% of Trips", ylabel = "Household Income", title = "Walk Trips by Income - Share (2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 12),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r bike_income_chart, echo=FALSE}
# static_column_chart(filter(walk_bike_by_income, mode_class_condensed == "Bike/Micromobility" & hhincome_detailed_combined != "Prefer not to answer"
#                             & survey_year == 2023),
#                     x = "hhincome_detailed_combined", y = "prop", fill = "survey_year",
#                     ylabel = "% of Trips", xlabel = "Household Income", title = "Bike Trips by Income - Share (2023)",
#                     moe = "moe") + theme(
#                       axis.text.x = element_text(size = 14),
#                       axis.text.y = element_text(size = 14),
#                       axis.title.y = element_text(size = 20),
#                       axis.title.x = element_text(size = 20),
#                       legend.text = element_text(size=14),
#                       plot.title = element_text(size = 24)
#                       )
```

### Race & Ethnicity

```{r walk_bike_race, echo=FALSE}
walk_bike_by_race <- psrc_hts_stat(hts_data,
                                   analysis_unit = "trip",
                                   group_vars = c("race_simple", "mode_class_5")) %>% 
  filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
```

```{r walk_race_chart, echo=FALSE}
static_bar_chart(filter(walk_bike_by_race, mode_class_5 == "Walk"
                           & !(race_simple %in% c("Child", "Missing/No response", "Some Other Race"))
                           & survey_year == "2023"),
                    x = "prop", y = str_wrap("race_simple"), fill = "race_simple",
                    xlabel = "% of Trips", ylabel = "Race & Ethnicity", title = "Walk Trips by Race - Share (2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 12),
                      axis.text.y = element_text(size = 10),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      ) + 
                    scale_x_discrete(labels = scales::label_wrap(20))
```

### Disability Status

```{r walk_bike_disability, echo=FALSE}
walk_bike_by_disability <- psrc_hts_stat(hts_data,
                                         analysis_unit = "trip",
                                         group_vars = c("disability_person", "mode_class_5")) %>% 
  filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
```

2023 survey question on disability: "Do you have a disability or illness that affects your ability to travel?"

This question was only asked of adults completing the survey.

```{r walk_disability_chart, echo=FALSE}
static_column_chart(filter(walk_bike_by_disability, mode_class_5 == "Walk" & !(disability_person %in% c("Missing Response", "Prefer not to answer")) & survey_year == "2023"),
                    x = "disability_person", y = "prop", fill = "survey_year",
                    ylabel = "% of Trips", xlabel = "Disability Status", title = "Walk Trips by Disability Status - Share (2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 20)
                      )
```

```{r bike_disability_chart, echo=FALSE}
# static_column_chart(filter(walk_bike_by_disability, mode_class_condensed == "Bike/Micromobility" & disability_person != "Prefer not to answer" & survey_year == 2023),
#                     x = "disability_person", y = "prop", fill = "survey_year",
#                     ylabel = "% of Trips", xlabel = "Disability Status", title = "Bike Trips by Disability Status - Share (2023)",
#                     moe = "moe") + theme(
#                       axis.text.x = element_text(size = 14),
#                       axis.text.y = element_text(size = 14),
#                       axis.title.y = element_text(size = 20),
#                       axis.title.x = element_text(size = 20),
#                       legend.text = element_text(size=14),
#                       plot.title = element_text(size = 24)
#                       )
```

### Gender

```{r walk_bike_gender, echo=FALSE}
# walk_bike_by_gender <- psrc_hts_stat(hts_data,
#                                      analysis_unit = "trip",
#                                      group_vars = c("gender_bin3", "mode_class_condensed")) %>% 
#   filter(mode_class_condensed %in% c("Walk", "Bike/Micromobility"))

walk_bike_by_gender <- psrc_hts_stat(hts_data,
                                     analysis_unit = "trip",
                                     group_vars = c("gender_group", "mode_class_5")) %>% 
  filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
```

```{r walk_gender_chart, echo=FALSE}
static_column_chart(filter(walk_bike_by_gender, mode_class_5 == "Walk" & gender_group != "Prefer not to answer" & survey_year == 2023),
                    x = "gender_group", y = "prop", fill = "survey_year",
                    ylabel = "% of Trips", xlabel = "Gender", title = "Walk Trips by Gender - Share (2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r bike_gender_chart, echo=FALSE}
# static_column_chart(filter(walk_bike_by_gender, mode_class_condensed == "Bike/Micromobility" & gender_group != "Prefer not to answer" & survey_year == 2023),
#                     x = "gender_group", y = "prop", fill = "survey_year",
#                     ylabel = "% of Trips", xlabel = "Gender", title = "Bike Trips by Gender - Share (2023)",
#                     moe = "moe") + theme(
#                       axis.text.x = element_text(size = 14),
#                       axis.text.y = element_text(size = 14),
#                       axis.title.y = element_text(size = 20),
#                       axis.title.x = element_text(size = 20),
#                       legend.text = element_text(size=14),
#                       plot.title = element_text(size = 24)
#                       )
```

### Age

```{r walk_bike_age, echo=FALSE}
walk_bike_by_age <- psrc_hts_stat(hts_data,
                                  analysis_unit = "trip",
                                  group_vars = c("age_condensed", "mode_class_5")) %>% 
  filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
```

```{r walk_age_chart, echo=FALSE}
static_column_chart(filter(walk_bike_by_age, mode_class_5 == "Walk" & survey_year == 2023),
                    x = "age_condensed", y = "prop", fill = "survey_year",
                    ylabel = "% of Trips", xlabel = "Age Group", title = "Walk Trips by Age - Share (2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 12),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r bike_age_chart, echo=FALSE}
# static_column_chart(filter(walk_bike_by_age_cond, mode_simple == "Bike" & survey_year == 2023),
#                     x = "age_condensed", y = "prop", fill = "survey_year",
#                     ylabel = "% of Trips", xlabel = "Age Group", title = "Bike Trips by Age - Share (2023)",
#                     moe = "moe") + theme(
#                       axis.text.x = element_text(size = 14),
#                       axis.text.y = element_text(size = 14),
#                       axis.title.y = element_text(size = 20),
#                       axis.title.x = element_text(size = 20),
#                       legend.text = element_text(size=14),
#                       plot.title = element_text(size = 24)
#                       )
```

### Home Geography

```{r walk_bike_rgc, echo=FALSE}
walk_bike_by_rgc <- psrc_hts_stat(hts_data,
                                  analysis_unit = "trip",
                                  group_vars = c("in_rgc", "mode_class_5")) %>% 
  filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
```

```{r walk_rgc_chart, echo=FALSE}
static_column_chart(filter(walk_bike_by_rgc, mode_class_5 == "Walk" & survey_year == 2023),
                    x = "in_rgc", y = "prop", fill = "survey_year",
                    ylabel = "% of Trips", xlabel = "Home Location", title = "Walk Trips by Home in RGCs - Share (2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 22)
                      )
```

```{r bike_rgc_chart, echo=FALSE}
static_column_chart(filter(walk_bike_by_rgc, mode_class_5 == "Bike/Micromobility" & survey_year == 2023),
                    x = "in_rgc", y = "prop", fill = "survey_year",
                    ylabel = "% of Trips", xlabel = "Home Location", title = "Bike Trips by Home in RGCs - Share (2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 22)
                      )
```

```{r walk_bike_home_geo, echo=FALSE}
walk_bike_by_home_geo <- psrc_hts_stat(hts_data,
                                       analysis_unit = "trip",
                                       group_vars = c("home_geography", "mode_class_5")) %>% 
  filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
```

```{r walk_home_geo_chart, echo=FALSE}
static_column_chart(filter(walk_bike_by_home_geo, mode_class_5 == "Walk" & survey_year == 2023),
                    x = "home_geography", y = "prop", fill = "home_geography",
                    ylabel = "% of Trips", xlabel = "Home Location", title = "Walk Trips by Home Geography - Share (2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 10),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 20)
                      ) +
  geom_hline(aes(yintercept = 0.11), size = 1.2)
```

```{r bike_home_geo_chart, echo=FALSE}
static_column_chart(filter(walk_bike_by_home_geo, mode_class_5 == "Bike/Micromobility" & survey_year == 2023),
                    x = "home_geography", y = "prop", fill = "home_geography",
                    ylabel = "% of Trips", xlabel = "Home Location", title = "Bike Trips by Home Geography - Share (2023)",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 10),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 20)
                      ) +
  geom_hline(aes(yintercept = 0.011), size = 1.2)
```

### Mode Share by Purpose

Looking at walking and biking trips by trip purpose: "utility" trips (work, shopping, errands, etc.) versus social/recreational trips

```{r trip_purpose_variable, include=FALSE}
hts_data$trip <- hts_data$trip %>% 
  mutate(origin_type = case_when(origin_purpose_cat == "Social/Recreation" ~ "Recreation",
                                 origin_purpose_cat %in% c("Missing Response", "Not imputable") ~ NA_character_,
                                 is.na(origin_purpose_cat) ~ NA_character_,
                                 origin_purpose_cat %in% c("Home", "Overnight", "Change mode") ~ origin_purpose_cat,
                                 TRUE ~ "Utility")) %>% 
  # mutate(trip_purpose_type = case_when(dest_purpose_cat == "Social/Recreation" ~ "Recreation Trips",
  #                                      dest_purpose_cat %in% c("Home", "Overnight") & origin_type == "Recreation" ~ "Recreation Trips",
  #                                      dest_purpose_cat %in% c("Home", "Overnight") & origin_type == "Utility" ~ "Utility Trips",
  #                                      dest_purpose_cat %in% c("Missing Response", "Not imputable") ~ NA_character_,
  #                                      dest_purpose_cat %in% c("Home", "Overnight") & origin_type %in% c("Home", "Overnight") ~ NA_character_,
  #                                      is.na(dest_purpose_cat) ~ NA_character_,
  #                                      TRUE ~ "Utility Trips"))
  mutate(trip_purpose_type = case_when(
    origin_type == "Recreation" & dest_purpose_cat == "Social/Recreation" ~ "Recreation Trips",
    origin_type == "Utility" & dest_purpose_cat == "Social/Recreation" ~ "Recreation/Utility Mix",
    origin_type %in% c("Home", "Overnight", "Change mode") & dest_purpose_cat == "Social/Recreation" ~ "Recreation Trips",
    dest_purpose_cat %in% c("Home", "Overnight", "Change mode") & origin_type == "Recreation" ~ "Recreation Trips",
    dest_purpose_cat %in% c("Home", "Overnight", "Change mode") & origin_type == "Utility" ~ "Utility Trips",
    origin_type == "Recreation" & !(dest_purpose_cat %in% c("Home", "Overnight", "Change mode", "Social/Recreation")) ~ "Recreation/Utility Mix",
    dest_purpose_cat %in% c("Missing Response", "Not imputable") ~ NA_character_,
    dest_purpose_cat %in% c("Home", "Overnight", "Change mode") & origin_type %in% c("Home", "Overnight", "Change mode") ~ NA_character_,
    is.na(dest_purpose_cat) ~ NA_character_,
    TRUE ~ "Utility Trips"))
```

```{r walk_bike_trip_purpose, echo=FALSE}
walk_bike_by_purpose <- psrc_hts_stat(hts_data,
                                      analysis_unit = "trip",
                                      group_vars = c("mode_class_5", "trip_purpose_type")) %>% 
  filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
```

```{r trip_purpose_alternate, include=FALSE}
walk_bike_by_purpose <- psrc_hts_stat(hts_data,
                                      analysis_unit = "trip",
                                      group_vars = c("mode_class_5", "dest_purpose_cat_5")) %>% 
  filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))

# Version without home trips
hts_data_nohome <- list(hts_data$hh,      # doesn't work
                        hts_data$person,
                        hts_data$day,
                        filter(hts_data$trip, dest_purpose_cat_5 != "Home"),
                        hts_data$vehicle) %>% 
  rlang::set_names(c("hh","person","day","trip","vehicle"))

hts_data_nohome$trip$dest_purpose_cat_5 <- ordered(hts_data_nohome$trip$dest_purpose_cat_5,
                                                   levels = c("Social/Recreation", "Errand/Shopping", "Work/School", "Other", "Missing Response"))

walk_bike_by_purpose_nohome <- psrc_hts_stat(hts_data_nohome,
                                             analysis_unit = "trip",
                                             group_vars = c("mode_class_5", "dest_purpose_cat_5")) %>% 
  filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
```

```{r walk_trip_purpose_chart, echo=FALSE}
static_column_chart(filter(walk_bike_by_purpose, mode_class_5 == "Walk"
                           #& dest_purpose_cat_5 != "Home"
                           ),
                    x = "survey_year", y = "prop", fill = "dest_purpose_cat_5",
                    ylabel = "% of Trips", xlabel = "Survey Year", title = "Walk Trips by Purpose - Share",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r walk_trip_purpose_alt_chart, echo=FALSE}
static_column_chart(filter(walk_bike_by_purpose_nohome, mode_class_5 == "Walk"
                           & dest_purpose_cat_5 != "Missing Response"
                           ),
                    x = "survey_year", y = "prop", fill = "dest_purpose_cat_5",
                    ylabel = "% of Trips", xlabel = "Survey Year", title = "Walk Trips by Purpose - Share",
                    source = "Trips to home locations are not included",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      legend.text = element_text(size=12),
                      plot.title = element_text(size = 24)
                      )
```

```{r bike_trip_purpose_chart, echo=FALSE}
static_column_chart(filter(walk_bike_by_purpose, mode_class_5 == "Bike/Micromobility"
                           #& trip_purpose_type %in% c("Recreation Trips", "Utility Trips")
                           ),
                    x = "survey_year", y = "prop", fill = "trip_purpose_type",
                    ylabel = "% of Trips", xlabel = "Survey Year", title = "Bike Trips by Purpose - Share",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r bike_trip_purpose_alt_chart, echo=FALSE}
static_column_chart(filter(walk_bike_by_purpose_nohome, mode_class_5 == "Bike/Micromobility"
                           & dest_purpose_cat_5 != "Missing Response"
                           ),
                    x = "survey_year", y = "prop", fill = "dest_purpose_cat_5",
                    ylabel = "% of Trips", xlabel = "Survey Year", title = "Bike Trips by Purpose - Share",
                    source = "Trips to home locations are not included",
                    moe = "prop_moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 16),
                      axis.title.x = element_text(size = 16),
                      legend.text = element_text(size=12),
                      plot.title = element_text(size = 24)
                      )
```

## Bike Frequencies

Bike trip shares are hard to cross-tabulate by demographic categories due to lower numbers. Looking at reported biking frequency to see if that can be analyzed by demographics.

```{r bike_frequency, include=FALSE}
bike_freqv2 <- summarize_weighted(hts_data = hts_data2023,
                                summarize_var = "share_2",
                                summarize_by = NULL, #"survey_year",
                                id_cols = ids,
                                wt_cols = wts,
                                wtname = "person_weight"
                                )

bike_freq_summaryv2 <- psrc_hts_stat(hts_data,
                                     analysis_unit = "person",
                                     group_vars = c("share_2"))
```

```{r bike_freq_chart, echo=FALSE}
static_column_chart(bike_freq_summaryv2,
                    x = "share_2", y = "prop", fill = "share_2",
                    ylabel = "Share", xlabel = "Frequency", title = "Bike Trip Frequencies (2023)",
                    moe = "moe") + theme(
                      axis.text.x = element_text(size = 14),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

### Bike frequency by demographics

```{r bike_freq_income, echo=FALSE}
bike_freq_income <- summarize_weighted(hts_data = hts_data2023,
                                       summarize_var = "share_2",
                                       summarize_by = "hhincome_detailed_combined",
                                       id_cols = ids,
                                       wt_cols = wts,
                                       wtname = "person_weight"
                                       )

bike_income_summary <- bike_freq_income$summary$wtd %>%
  mutate(moe = prop_se * 1.645)
```

```{r bike_freq_income_chart, echo=FALSE}
static_column_chart(filter(bike_income_summary, hhincome_detailed_combined != "Prefer not to answer" & share_2 == "Selected"),
                    x = "hhincome_detailed_combined", y = "prop", fill = "hhincome_detailed_combined",
                    ylabel = "Share", xlabel = "Income", title = "Bike Frequency by Income - Share (2023)",
                    moe = "moe") + theme(
                      axis.text.x = element_text(size = 12),
                      axis.text.y = element_text(size = 14),
                      axis.title.y = element_text(size = 20),
                      axis.title.x = element_text(size = 20),
                      legend.text = element_text(size=14),
                      plot.title = element_text(size = 24)
                      )
```

```{r bike_freq_gender, echo=FALSE}
bike_freq_gender <- summarize_weighted(hts_data = hts_data2023,
                                       summarize_var = "share_2",
                                       summarize_by = "gender_group",
                                       id_cols = ids,
                                       wt_cols = wts,
                                       wtname = "person_weight"
                                       )

bike_gender_summary <- bike_freq_gender$summary$wtd %>%
  mutate(moe = prop_se * 1.645)
```
