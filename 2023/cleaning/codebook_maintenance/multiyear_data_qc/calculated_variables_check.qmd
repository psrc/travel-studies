---
title: "calculated variables"
date: today
---

- Questions: are these variables recalculated after data cleaning?
- can infer `num_students` for previous years
- number of workers `numworkers` needs fixing

```{r}
library(tidyverse)
library(psrcelmer)

# read data
hh_vars <- c("household_id","survey_year","hh_weight",
             "hh_is_complete","numdayscomplete","num_days_complete_weekday",
             "num_complete_mon","num_complete_tue","num_complete_wed","num_complete_thu","num_complete_fri",
             "num_days_complete_weekend","num_complete_sat","num_complete_sun",
             "num_surveyable","num_participants",
             "hhsize","numadults","numchildren","numworkers","num_students",
             "num_trips")
person_vars <- c("person_id","household_id","pernum","survey_year","person_weight",
                 "hh_is_complete","surveyable","is_participant",
                 "employment","student","race_category","age",
                 "num_trips")
day_vars <- c("day_id","person_id","household_id","pernum","daynum","survey_year","day_weight",
              "day_iscomplete","hh_day_iscomplete","summary_complete","is_participant","surveyable",
              "travel_date","travel_day","travel_dow",
              "num_trips","num_complete_trip_surveys")

day <- get_query(sql= paste("select", paste(day_vars, collapse = ","), "from HHSurvey.v_days_labels"))
# trip_data <- get_query(sql= paste("select", paste(trip_vars, collapse = ","), "from HHSurvey.v_trips_labels"))
person <- get_query(sql= paste("select", paste(person_vars, collapse = ","), "from HHSurvey.v_persons_labels"))
hh <- get_query(sql= paste("select", paste(hh_vars, collapse = ","), "from HHSurvey.v_households_labels"))


```


```{r}
day_data <- day
person_data <- person %>%
  mutate(age_adult = case_when(age %in% c("Under 5 years old","5-11 years","12-15 years","16-17 years")~"child",
                               TRUE~"adult"),
         employment_worker = case_when(employment %in% c("Self-employed",
                                                        "Employed part time (fewer than 35 hours/week, paid)",
                                                        "Employed full time (35+ hours/week, paid)")~"worker",
                                       TRUE~"not worker"),
         student_student = case_when(student %in% c("Full-time student","Part-time student",
                                                    "Full-time student, currently attending some or all classes in-person",
                                                    "Part-time student, currently attending some or all classes in-person",
                                                    "Part-time student, ONLY online classes",
                                                    "Full-time student, ONLY online classes")~"student",
                                     TRUE~"not student"))
hh_data <- hh

hh_merge_person <- hh_data %>% 
  left_join(person_data %>% select(-c(num_trips,hh_is_complete)), by=c("household_id","survey_year"))
```

## person to household variables
:::{.panel-tabset}

### `surveyable` / `num_surveyable`

- `surveyable` summary table

```{r}
person_data %>%
  group_by(survey_year,surveyable) %>%
  summarise(person_count = n())
```
- inconsistency between `num_surveyable` and results calculated from person data

```{r}
test <- hh_merge_person %>%
  group_by(household_id,survey_year,num_surveyable) %>%
  summarise(ct_surveyable = sum(surveyable=="Yes", na.rm=TRUE)) %>%
  ungroup() %>%
  mutate(ct_surveyable = case_when(ct_surveyable == 0~NA,
                                   ct_surveyable == 1~"1 surveyable person",
                                   TRUE~paste(ct_surveyable, "surveyable persons"))) %>%
  mutate(check = case_when(num_surveyable==ct_surveyable~"correct",
                           is.na(num_surveyable) & is.na(ct_surveyable)~"correct",
                           TRUE~"wrong"))

test %>% filter(check=="wrong")
```

### `is_participant` / `num_participants`

- `is_participant` summary table

```{r}
person_data %>%
  group_by(survey_year,is_participant) %>%
  summarise(person_count = n())
```
- inconsistency between `num_participants` and results calculated from person data

```{r}
test <- hh_merge_person %>%
  group_by(household_id,survey_year,num_participants) %>%
  summarise(ct_participants = sum(is_participant=="Yes", na.rm=TRUE)) %>%
  ungroup() %>%
  mutate(check = case_when(num_participants==ct_participants~"correct",
                           is.na(num_participants) & ct_participants==0~"correct",
                           TRUE~"wrong"))

test %>% filter(check=="wrong")
```

### `hhsize`

- `hhsize` summary table (household count)

```{r}
hh_data %>%
  group_by(survey_year,hhsize) %>%
  summarise(count = n()) %>%
  pivot_wider(id_cols="survey_year",names_from="hhsize",values_from="count")
```

- inconsistency between `hhsize` and results calculated from person data

```{r}
test <- hh_merge_person %>%
  group_by(household_id,survey_year,hhsize) %>%
  summarise(ct_person = n()) %>%
  ungroup() %>%
  mutate(ct_person = case_when(ct_person == 1~"1 person",
                               TRUE~paste(ct_person, "people"))) %>%
  mutate(check = case_when(hhsize==ct_person~"correct",
                           # is.na(num_surveyable) & is.na(ct_surveyable)~"correct",
                           TRUE~"wrong"))

test %>% filter(check=="wrong")
```
### `age`/`numadults`


- `age` summary table

```{r}
person_data %>%
  group_by(survey_year,age_adult) %>%
  summarise(person_count = n()) %>% filter(age_adult=="adult")
```

- inconsistency between `numadults` and results calculated from person data

```{r}
test <- hh_merge_person %>%
  group_by(household_id,survey_year,numadults) %>%
  summarise(ct_age_adult = sum(age_adult=="adult", na.rm=TRUE)) %>%
  ungroup() %>%
  mutate(ct_age_adult = case_when(ct_age_adult == 1~"1 adult",
                               TRUE~paste(ct_age_adult, "adults"))) %>%
  mutate(check = case_when(numadults==ct_age_adult~"correct",
                           TRUE~"wrong"))

test %>% filter(check=="wrong")
```

### `age`/`numchildren`

- `age` summary table

```{r}
person_data %>%
  group_by(survey_year,age_adult) %>%
  summarise(person_count = n()) %>% filter(age_adult=="child")
```

- inconsistency between `numchildren` and results calculated from person data
  - all correct
  
```{r}
test <- hh_merge_person %>%
  group_by(household_id,survey_year,numchildren) %>%
  summarise(ct_age_child = sum(age_adult=="child", na.rm=TRUE)) %>%
  ungroup() %>%
  mutate(ct_age_child = case_when(ct_age_child == 0~"0 children",
                               ct_age_child == 1~"1 child",
                               TRUE~paste(ct_age_child, "children"))) %>%
  mutate(check = case_when(numchildren==ct_age_child~"correct",
                           TRUE~"wrong"))

test %>% filter(check=="wrong")
```
### `employment`/`numworkers`

- `employment` summary table (person count)
  - worker: `employment %in% c("Self-employed","Employed part time (fewer than 35 hours/week, paid)","Employed full time (35+ hours/week, paid)")`
  - `"Employed but not currently working (e.g., on leave, furloughed 100%)"` not included
  
```{r}
person_data %>%
  group_by(survey_year,employment_worker) %>%
  summarise(person_count = n()) %>%
pivot_wider(id_cols=survey_year,names_from="employment_worker",values_from="person_count")
```

- inconsistency between `numworkers` and results calculated from person data

```{r}
test <- hh_merge_person %>%
  group_by(household_id,survey_year,numworkers) %>%
  summarise(ct_employment_worker = sum(employment_worker=="worker", na.rm=TRUE)) %>%
  ungroup() %>%
  mutate(ct_employment_worker = case_when(ct_employment_worker == 1~"1 worker",
                               TRUE~paste(ct_employment_worker, "workers"))) %>%
  mutate(check = case_when(numworkers==ct_employment_worker~"correct",
                           TRUE~"wrong"))

test_wrong <- test %>% filter(check=="wrong")
```

  + number of errors: `{r} nrow(test_wrong)`
  + distribution across years
  
```{r}
table(test_wrong$survey_year)
```


  + example households
  
```{r}
show_list <- c("household_id","survey_year","hh_weight","hhsize","numadults","numchildren","numworkers",
                "employment", "employment_worker")

head(hh_merge_person %>%
  filter(household_id %in% test_wrong$household_id) %>% 
  select(all_of(show_list)),8)
```


### `student`/`num_students`

- `num_students` is only in 2023: only one wrong household 
- `student` summary table (person count)

```{r}
person_data %>%
  group_by(survey_year,student_student) %>%
  summarise(person_count = n()) %>%
pivot_wider(id_cols=survey_year,names_from="student_student",values_from="person_count")
```

- inconsistency between `student` and results calculated from person data

```{r}
test <- hh_merge_person %>%
  group_by(household_id,survey_year,num_students) %>%
  summarise(ct_student_student = sum(student_student=="student", na.rm=TRUE)) %>%
  ungroup() %>%
  mutate(ct_student_student = case_when(ct_student_student == 1~"1 student",
                               TRUE~paste(ct_student_student, "students"))) %>%
  mutate(check = case_when(num_students==ct_student_student~"correct",
                           is.na(num_students) & ct_student_student=="0 students"~"correct",
                           TRUE~"wrong"))

test_wrong <- test %>% filter(check=="wrong")
```

  + distribution across years
  
```{r}
table(test_wrong$survey_year)
```

  + example households
  
```{r}
show_list <- c("household_id","survey_year","hh_weight","hhsize","numadults","numchildren","num_students",
                "student", "student_student")

hh_merge_person %>%
  filter(household_id %in% test_wrong$household_id) %>% 
  select(all_of(show_list)) %>%
filter(survey_year==2023)
```
:::

## merge household data to person-day data

```{r}

```

