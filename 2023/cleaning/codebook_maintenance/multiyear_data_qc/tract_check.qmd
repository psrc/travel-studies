---
title: "tract assignment"
date: today
---

- tract variables: `home_tract20`, `prev_home_tract20`, `work_tract20`, `school_tract20`, `origin_tract10`, `origin_tract20`, `dest_tract10`, `dest_tract20`
- Question: is the tract data updated when data cleaning?

```{r}

library(psrc.travelsurvey)
library(tidyverse)
library(psrcelmer)
library(sf)
library(leaflet)
sf_use_s2(TRUE)

# list of table names and view names for each data table
table_names <- c('hh','person','day','trip','vehicle')
view_names <- c('v_households_labels','v_persons_labels','v_days_labels','v_trips_labels','v_vehicles_labels')
names(view_names) <- table_names

df_view_name <- data.frame(table = table_names,
                           Elmer.view.name = view_names,
                           row.names = NULL)

# tract layer
TRACT2010_plot <- st_read_elmergeo('TRACT2010')
TRACT2020_plot <- st_read_elmergeo('TRACT2020')
TRACT2010 <- TRACT2010_plot %>%
  # projection
  st_transform(2926) %>%
  select(geoid10) 
TRACT2020 <- TRACT2020_plot %>%
  # projection
  st_transform(2926) %>%
  select(geoid20)

TRACT2010_buffer <- st_buffer(TRACT2010, dist = 100)
TRACT2020_buffer <- st_buffer(TRACT2020, dist = 100)

# read HTS data
hh_data <- get_query(sql= paste0("select * from HHSurvey.", view_names['hh']))
person_data <- get_query(sql= paste0("select * from HHSurvey.", view_names['person']))
trip_data <- get_query(sql= paste0("select * from HHSurvey.", view_names['trip']))
```



```{r}
match_tract_assign <- function(data,tract_var,table,point_lng,point_lat,vars_list,year=2020){
  
  if(year==2010){
    tract_lyr <- TRACT2010 %>% rename(name = geoid10)
    tract_lyr_buffer <- TRACT2010_buffer %>% rename(name_buffer = geoid10)
  }else if(year==2020){
    tract_lyr <- TRACT2020 %>% rename(name = geoid20)
    tract_lyr_buffer <- TRACT2020_buffer %>% rename(name_buffer = geoid20)
  }
  if(table=="household"){
    weight <- "hh_weight"
  }else{
    weight <- paste0(table,"_weight")
  }
  id = paste0(table,"_id")
  
  result <- data %>% 
    filter(.[[weight]]>0, !is.na(.[[point_lng]])) %>%
    select(all_of(vars_list)) %>%
    # create sf layer
    st_as_sf(coords = c(point_lng, point_lat), crs = 4326, remove=FALSE) %>%
    st_transform(2926) %>% 
    # spatial join RGC layer
    st_join(tract_lyr, join = st_intersects) %>%
    st_join(tract_lyr_buffer, join = st_intersects) %>%
    mutate(tract_check = case_when(.[[tract_var]]==name~"correct",
                                   is.na(name)~"outside of region",
                                   is.na(.[[tract_var]])~"NA",
                                   .[[tract_var]]==name_buffer~"correct",
                                   TRUE~"wrong")) %>%
    filter(tract_check!="outside of region") %>%
    arrange(tract_check) %>%
    group_by(.[[id]]) %>%
    filter(row_number()==1)
  st_geometry(result) <- NULL
  
  # print(head(result))
  
  return(result)
}

# plot tract assignment
plot_location <- function(tract_lyr,tract_name,lat,lng,year=2020){
  
  if(year==2010){
     leaflet(tract_lyr %>% filter(geoid10==tract_name)) %>%
       addPolygons(stroke = FALSE) %>%
       addTiles() %>%
       addMarkers(lng,lat)
   } else if(year==2020){
     leaflet(tract_lyr %>% filter(geoid20==tract_name)) %>%
       addPolygons(stroke = FALSE) %>%
       addTiles() %>%
       addMarkers(lng,lat)
   }
  
}

# plot_location(TRACT2020_plot,"53033008101",47.69810,-122.3262)

```

## trip data

- only include origins and destination in region
- all correct: 2021 and 2023 tables don't have 2010 tracts

:::{.panel-tabset}
### `dest_tract10`

```{r}
vars_list <- c("trip_id","survey_year",
               "dest_tract10","dest_lat","dest_lng","trip_weight")

trip_dest_tract10 <- match_tract_assign(trip_data,"dest_tract10","trip","dest_lng","dest_lat",vars_list,2010)

trip_dest_tract10 %>%
  group_by(survey_year, tract_check) %>%
  reframe(person_count = n()) 
```


### `dest_tract20`

```{r}
vars_list <- c("trip_id","survey_year",
               "dest_tract20","dest_lat","dest_lng","trip_weight")

trip_dest_tract20 <- match_tract_assign(trip_data,"dest_tract20","trip","dest_lng","dest_lat",vars_list)

trip_dest_tract20 %>%
  group_by(survey_year, tract_check) %>%
  reframe(person_count = n()) 
```

### `origin_tract10`

```{r}
vars_list <- c("trip_id","survey_year",
               "origin_tract10","origin_lat","origin_lng")

trip_origin_tract10 <- match_tract_assign(trip_data,"origin_tract10","trip","origin_lng","origin_lat",vars_list,2010)

trip_origin_tract10 %>%
  group_by(survey_year, tract_check) %>%
  reframe(person_count = n()) 
```

### `origin_tract20`

```{r}
vars_list <- c("trip_id","survey_year",
               "origin_tract20","origin_lat","origin_lng")
# origin rgc: correct
trip_origin_tract20 <- match_tract_assign(trip_data,"origin_tract20","trip","origin_lng","origin_lat",vars_list)

trip_origin_tract20 %>%
  group_by(survey_year, tract_check) %>%
  reframe(person_count = n()) 
```

:::

## home data

- do we want to add `home_tract10` and `prev_home_tract10`?
- one wrong `prev_home_tract20` record in 2023

:::{.panel-tabset}

### `home_tract20`
```{r}
vars_list <- c("household_id","survey_year","home_tract20","home_lat","home_lng","hh_weight")

hh_home_tract20 <- match_tract_assign(hh_data,"home_tract20","household","home_lng","home_lat",vars_list)

hh_home_tract20 %>%
  group_by(survey_year, tract_check) %>%
  reframe(hh_count = n()) 
```



### `prev_home_tract20`
```{r}
vars_list <- c("household_id","survey_year","prev_home_tract20","prev_home_lat","prev_home_lng","hh_weight")

hh_prev_home_tract20 <- match_tract_assign(hh_data,"prev_home_tract20","household","prev_home_lng","prev_home_lat",vars_list)

hh_prev_home_tract20 %>%
  group_by(survey_year, tract_check) %>%
  reframe(hh_count = n()) 
```

- one wrong record in 2023
```{r}
hh_prev_home_tract20 %>% filter(tract_check=="NA")
```

```{r}
plot_location(TRACT2020_plot,"53033008101",47.69810,-122.3262)
```



:::

## person data

- all correct
- do we want to add `school_tract10` and `work_tract10`?

:::{.panel-tabset}

### `school_tract20`
```{r}
vars_list <- c("person_id","survey_year","school_tract20","school_loc_lat","school_loc_lng","person_weight")

person_school_tract20 <- match_tract_assign(person_data,"school_tract20","person","school_loc_lng","school_loc_lat",vars_list)

person_school_tract20 %>%
  group_by(survey_year, tract_check) %>%
  reframe(person_count = n()) 
```

### `work_tract20`

```{r}
vars_list <- c("person_id","survey_year","work_tract20","work_lat","work_lng","person_weight")

person_work_tract20 <- match_tract_assign(person_data,"work_tract20","person","work_lng","work_lat",vars_list)

person_work_tract20 %>%
  group_by(survey_year, tract_check) %>%
  reframe(person_count = n()) 
```


:::